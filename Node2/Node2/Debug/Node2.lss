
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b2  00800200  000025ae  00002642  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002f  008002b2  008002b2  000026f4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000026f4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002f8  00000000  00000000  00002750  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000026dc  00000000  00000000  00002a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000011ea  00000000  00000000  00005124  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001ac1  00000000  00000000  0000630e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000007a4  00000000  00000000  00007dd0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007e9  00000000  00000000  00008574  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001590  00000000  00000000  00008d5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000228  00000000  00000000  0000a2ed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	84 c1       	rjmp	.+776    	; 0x30a <__ctors_end>
       2:	00 00       	nop
       4:	a2 c1       	rjmp	.+836    	; 0x34a <__bad_interrupt>
       6:	00 00       	nop
       8:	a0 c1       	rjmp	.+832    	; 0x34a <__bad_interrupt>
       a:	00 00       	nop
       c:	9e c1       	rjmp	.+828    	; 0x34a <__bad_interrupt>
       e:	00 00       	nop
      10:	9c c1       	rjmp	.+824    	; 0x34a <__bad_interrupt>
      12:	00 00       	nop
      14:	9a c1       	rjmp	.+820    	; 0x34a <__bad_interrupt>
      16:	00 00       	nop
      18:	98 c1       	rjmp	.+816    	; 0x34a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	96 c1       	rjmp	.+812    	; 0x34a <__bad_interrupt>
      1e:	00 00       	nop
      20:	94 c1       	rjmp	.+808    	; 0x34a <__bad_interrupt>
      22:	00 00       	nop
      24:	92 c1       	rjmp	.+804    	; 0x34a <__bad_interrupt>
      26:	00 00       	nop
      28:	90 c1       	rjmp	.+800    	; 0x34a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8e c1       	rjmp	.+796    	; 0x34a <__bad_interrupt>
      2e:	00 00       	nop
      30:	8c c1       	rjmp	.+792    	; 0x34a <__bad_interrupt>
      32:	00 00       	nop
      34:	8a c1       	rjmp	.+788    	; 0x34a <__bad_interrupt>
      36:	00 00       	nop
      38:	88 c1       	rjmp	.+784    	; 0x34a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	86 c1       	rjmp	.+780    	; 0x34a <__bad_interrupt>
      3e:	00 00       	nop
      40:	84 c1       	rjmp	.+776    	; 0x34a <__bad_interrupt>
      42:	00 00       	nop
      44:	82 c1       	rjmp	.+772    	; 0x34a <__bad_interrupt>
      46:	00 00       	nop
      48:	80 c1       	rjmp	.+768    	; 0x34a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7e c1       	rjmp	.+764    	; 0x34a <__bad_interrupt>
      4e:	00 00       	nop
      50:	7c c1       	rjmp	.+760    	; 0x34a <__bad_interrupt>
      52:	00 00       	nop
      54:	7a c1       	rjmp	.+756    	; 0x34a <__bad_interrupt>
      56:	00 00       	nop
      58:	78 c1       	rjmp	.+752    	; 0x34a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	76 c1       	rjmp	.+748    	; 0x34a <__bad_interrupt>
      5e:	00 00       	nop
      60:	74 c1       	rjmp	.+744    	; 0x34a <__bad_interrupt>
      62:	00 00       	nop
      64:	72 c1       	rjmp	.+740    	; 0x34a <__bad_interrupt>
      66:	00 00       	nop
      68:	70 c1       	rjmp	.+736    	; 0x34a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6e c1       	rjmp	.+732    	; 0x34a <__bad_interrupt>
      6e:	00 00       	nop
      70:	6c c1       	rjmp	.+728    	; 0x34a <__bad_interrupt>
      72:	00 00       	nop
      74:	6a c1       	rjmp	.+724    	; 0x34a <__bad_interrupt>
      76:	00 00       	nop
      78:	68 c1       	rjmp	.+720    	; 0x34a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	66 c1       	rjmp	.+716    	; 0x34a <__bad_interrupt>
      7e:	00 00       	nop
      80:	64 c1       	rjmp	.+712    	; 0x34a <__bad_interrupt>
      82:	00 00       	nop
      84:	62 c1       	rjmp	.+708    	; 0x34a <__bad_interrupt>
      86:	00 00       	nop
      88:	60 c1       	rjmp	.+704    	; 0x34a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	5e c1       	rjmp	.+700    	; 0x34a <__bad_interrupt>
      8e:	00 00       	nop
      90:	5c c1       	rjmp	.+696    	; 0x34a <__bad_interrupt>
      92:	00 00       	nop
      94:	5a c1       	rjmp	.+692    	; 0x34a <__bad_interrupt>
      96:	00 00       	nop
      98:	58 c1       	rjmp	.+688    	; 0x34a <__bad_interrupt>
      9a:	00 00       	nop
      9c:	c9 c5       	rjmp	.+2962   	; 0xc30 <__vector_39>
      9e:	00 00       	nop
      a0:	54 c1       	rjmp	.+680    	; 0x34a <__bad_interrupt>
      a2:	00 00       	nop
      a4:	52 c1       	rjmp	.+676    	; 0x34a <__bad_interrupt>
      a6:	00 00       	nop
      a8:	50 c1       	rjmp	.+672    	; 0x34a <__bad_interrupt>
      aa:	00 00       	nop
      ac:	4e c1       	rjmp	.+668    	; 0x34a <__bad_interrupt>
      ae:	00 00       	nop
      b0:	4c c1       	rjmp	.+664    	; 0x34a <__bad_interrupt>
      b2:	00 00       	nop
      b4:	4a c1       	rjmp	.+660    	; 0x34a <__bad_interrupt>
      b6:	00 00       	nop
      b8:	48 c1       	rjmp	.+656    	; 0x34a <__bad_interrupt>
      ba:	00 00       	nop
      bc:	46 c1       	rjmp	.+652    	; 0x34a <__bad_interrupt>
      be:	00 00       	nop
      c0:	44 c1       	rjmp	.+648    	; 0x34a <__bad_interrupt>
      c2:	00 00       	nop
      c4:	42 c1       	rjmp	.+644    	; 0x34a <__bad_interrupt>
      c6:	00 00       	nop
      c8:	40 c1       	rjmp	.+640    	; 0x34a <__bad_interrupt>
      ca:	00 00       	nop
      cc:	3e c1       	rjmp	.+636    	; 0x34a <__bad_interrupt>
      ce:	00 00       	nop
      d0:	3c c1       	rjmp	.+632    	; 0x34a <__bad_interrupt>
      d2:	00 00       	nop
      d4:	3a c1       	rjmp	.+628    	; 0x34a <__bad_interrupt>
      d6:	00 00       	nop
      d8:	38 c1       	rjmp	.+624    	; 0x34a <__bad_interrupt>
      da:	00 00       	nop
      dc:	36 c1       	rjmp	.+620    	; 0x34a <__bad_interrupt>
      de:	00 00       	nop
      e0:	34 c1       	rjmp	.+616    	; 0x34a <__bad_interrupt>
      e2:	00 00       	nop
      e4:	34 06       	cpc	r3, r20
      e6:	86 06       	cpc	r8, r22
      e8:	86 06       	cpc	r8, r22
      ea:	86 06       	cpc	r8, r22
      ec:	86 06       	cpc	r8, r22
      ee:	86 06       	cpc	r8, r22
      f0:	86 06       	cpc	r8, r22
      f2:	86 06       	cpc	r8, r22
      f4:	34 06       	cpc	r3, r20
      f6:	86 06       	cpc	r8, r22
      f8:	86 06       	cpc	r8, r22
      fa:	86 06       	cpc	r8, r22
      fc:	86 06       	cpc	r8, r22
      fe:	86 06       	cpc	r8, r22
     100:	86 06       	cpc	r8, r22
     102:	86 06       	cpc	r8, r22
     104:	36 06       	cpc	r3, r22
     106:	86 06       	cpc	r8, r22
     108:	86 06       	cpc	r8, r22
     10a:	86 06       	cpc	r8, r22
     10c:	86 06       	cpc	r8, r22
     10e:	86 06       	cpc	r8, r22
     110:	86 06       	cpc	r8, r22
     112:	86 06       	cpc	r8, r22
     114:	86 06       	cpc	r8, r22
     116:	86 06       	cpc	r8, r22
     118:	86 06       	cpc	r8, r22
     11a:	86 06       	cpc	r8, r22
     11c:	86 06       	cpc	r8, r22
     11e:	86 06       	cpc	r8, r22
     120:	86 06       	cpc	r8, r22
     122:	86 06       	cpc	r8, r22
     124:	36 06       	cpc	r3, r22
     126:	86 06       	cpc	r8, r22
     128:	86 06       	cpc	r8, r22
     12a:	86 06       	cpc	r8, r22
     12c:	86 06       	cpc	r8, r22
     12e:	86 06       	cpc	r8, r22
     130:	86 06       	cpc	r8, r22
     132:	86 06       	cpc	r8, r22
     134:	86 06       	cpc	r8, r22
     136:	86 06       	cpc	r8, r22
     138:	86 06       	cpc	r8, r22
     13a:	86 06       	cpc	r8, r22
     13c:	86 06       	cpc	r8, r22
     13e:	86 06       	cpc	r8, r22
     140:	86 06       	cpc	r8, r22
     142:	86 06       	cpc	r8, r22
     144:	82 06       	cpc	r8, r18
     146:	86 06       	cpc	r8, r22
     148:	86 06       	cpc	r8, r22
     14a:	86 06       	cpc	r8, r22
     14c:	86 06       	cpc	r8, r22
     14e:	86 06       	cpc	r8, r22
     150:	86 06       	cpc	r8, r22
     152:	86 06       	cpc	r8, r22
     154:	5f 06       	cpc	r5, r31
     156:	86 06       	cpc	r8, r22
     158:	86 06       	cpc	r8, r22
     15a:	86 06       	cpc	r8, r22
     15c:	86 06       	cpc	r8, r22
     15e:	86 06       	cpc	r8, r22
     160:	86 06       	cpc	r8, r22
     162:	86 06       	cpc	r8, r22
     164:	86 06       	cpc	r8, r22
     166:	86 06       	cpc	r8, r22
     168:	86 06       	cpc	r8, r22
     16a:	86 06       	cpc	r8, r22
     16c:	86 06       	cpc	r8, r22
     16e:	86 06       	cpc	r8, r22
     170:	86 06       	cpc	r8, r22
     172:	86 06       	cpc	r8, r22
     174:	53 06       	cpc	r5, r19
     176:	86 06       	cpc	r8, r22
     178:	86 06       	cpc	r8, r22
     17a:	86 06       	cpc	r8, r22
     17c:	86 06       	cpc	r8, r22
     17e:	86 06       	cpc	r8, r22
     180:	86 06       	cpc	r8, r22
     182:	86 06       	cpc	r8, r22
     184:	71 06       	cpc	r7, r17
     186:	07 63       	ori	r16, 0x37	; 55
     188:	42 36       	cpi	r20, 0x62	; 98
     18a:	b7 9b       	sbis	0x16, 7	; 22
     18c:	d8 a7       	std	Y+40, r29	; 0x28
     18e:	1a 39       	cpi	r17, 0x9A	; 154
     190:	68 56       	subi	r22, 0x68	; 104
     192:	18 ae       	std	Y+56, r1	; 0x38
     194:	ba ab       	std	Y+50, r27	; 0x32
     196:	55 8c       	ldd	r5, Z+29	; 0x1d
     198:	1d 3c       	cpi	r17, 0xCD	; 205
     19a:	b7 cc       	rjmp	.-1682   	; 0xfffffb0a <__eeprom_end+0xff7efb0a>
     19c:	57 63       	ori	r21, 0x37	; 55
     19e:	bd 6d       	ori	r27, 0xDD	; 221
     1a0:	ed fd       	.word	0xfded	; ????
     1a2:	75 3e       	cpi	r23, 0xE5	; 229
     1a4:	f6 17       	cp	r31, r22
     1a6:	72 31       	cpi	r23, 0x12	; 18
     1a8:	bf 00       	.word	0x00bf	; ????
     1aa:	00 00       	nop
     1ac:	80 3f       	cpi	r24, 0xF0	; 240
     1ae:	08 00       	.word	0x0008	; ????
     1b0:	00 00       	nop
     1b2:	be 92       	st	-X, r11
     1b4:	24 49       	sbci	r18, 0x94	; 148
     1b6:	12 3e       	cpi	r17, 0xE2	; 226
     1b8:	ab aa       	std	Y+51, r10	; 0x33
     1ba:	aa 2a       	or	r10, r26
     1bc:	be cd       	rjmp	.-1156   	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
     1be:	cc cc       	rjmp	.-1640   	; 0xfffffb58 <__eeprom_end+0xff7efb58>
     1c0:	4c 3e       	cpi	r20, 0xEC	; 236
     1c2:	00 00       	nop
     1c4:	00 80       	ld	r0, Z
     1c6:	be ab       	std	Y+54, r27	; 0x36
     1c8:	aa aa       	std	Y+50, r10	; 0x32
     1ca:	aa 3e       	cpi	r26, 0xEA	; 234
     1cc:	00 00       	nop
     1ce:	00 00       	nop
     1d0:	bf 00       	.word	0x00bf	; ????
     1d2:	00 00       	nop
     1d4:	80 3f       	cpi	r24, 0xF0	; 240
     1d6:	00 00       	nop
     1d8:	00 00       	nop
     1da:	00 08       	sbc	r0, r0
     1dc:	41 78       	andi	r20, 0x81	; 129
     1de:	d3 bb       	out	0x13, r29	; 19
     1e0:	43 87       	std	Z+11, r20	; 0x0b
     1e2:	d1 13       	cpse	r29, r17
     1e4:	3d 19       	sub	r19, r13
     1e6:	0e 3c       	cpi	r16, 0xCE	; 206
     1e8:	c3 bd       	out	0x23, r28	; 35
     1ea:	42 82       	std	Z+2, r4	; 0x02
     1ec:	ad 2b       	or	r26, r29
     1ee:	3e 68       	ori	r19, 0x8E	; 142
     1f0:	ec 82       	std	Y+4, r14	; 0x04
     1f2:	76 be       	out	0x36, r7	; 54
     1f4:	d9 8f       	std	Y+25, r29	; 0x19
     1f6:	e1 a9       	ldd	r30, Z+49	; 0x31
     1f8:	3e 4c       	sbci	r19, 0xCE	; 206
     1fa:	80 ef       	ldi	r24, 0xF0	; 240
     1fc:	ff be       	out	0x3f, r15	; 63
     1fe:	01 c4       	rjmp	.+2050   	; 0xa02 <can_handle_message+0x38>
     200:	ff 7f       	andi	r31, 0xFF	; 255
     202:	3f 00       	.word	0x003f	; ????
     204:	00 00       	nop
	...

00000208 <__trampolines_end>:
     208:	6e 61       	ori	r22, 0x1E	; 30
     20a:	6e 00       	.word	0x006e	; ????

0000020c <__c.2159>:
     20c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     21c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     22c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     23c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     24c:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     25c:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     26c:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     27c:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     28c:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     29c:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2ac:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2bc:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2cc:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2dc:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2ec:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2fc:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000030a <__ctors_end>:
     30a:	11 24       	eor	r1, r1
     30c:	1f be       	out	0x3f, r1	; 63
     30e:	cf ef       	ldi	r28, 0xFF	; 255
     310:	d1 e2       	ldi	r29, 0x21	; 33
     312:	de bf       	out	0x3e, r29	; 62
     314:	cd bf       	out	0x3d, r28	; 61
     316:	00 e0       	ldi	r16, 0x00	; 0
     318:	0c bf       	out	0x3c, r16	; 60

0000031a <__do_copy_data>:
     31a:	12 e0       	ldi	r17, 0x02	; 2
     31c:	a0 e0       	ldi	r26, 0x00	; 0
     31e:	b2 e0       	ldi	r27, 0x02	; 2
     320:	ee ea       	ldi	r30, 0xAE	; 174
     322:	f5 e2       	ldi	r31, 0x25	; 37
     324:	00 e0       	ldi	r16, 0x00	; 0
     326:	0b bf       	out	0x3b, r16	; 59
     328:	02 c0       	rjmp	.+4      	; 0x32e <__do_copy_data+0x14>
     32a:	07 90       	elpm	r0, Z+
     32c:	0d 92       	st	X+, r0
     32e:	a2 3b       	cpi	r26, 0xB2	; 178
     330:	b1 07       	cpc	r27, r17
     332:	d9 f7       	brne	.-10     	; 0x32a <__do_copy_data+0x10>

00000334 <__do_clear_bss>:
     334:	22 e0       	ldi	r18, 0x02	; 2
     336:	a2 eb       	ldi	r26, 0xB2	; 178
     338:	b2 e0       	ldi	r27, 0x02	; 2
     33a:	01 c0       	rjmp	.+2      	; 0x33e <.do_clear_bss_start>

0000033c <.do_clear_bss_loop>:
     33c:	1d 92       	st	X+, r1

0000033e <.do_clear_bss_start>:
     33e:	a1 3e       	cpi	r26, 0xE1	; 225
     340:	b2 07       	cpc	r27, r18
     342:	e1 f7       	brne	.-8      	; 0x33c <.do_clear_bss_loop>
     344:	6b d6       	rcall	.+3286   	; 0x101c <main>
     346:	0c 94 d5 12 	jmp	0x25aa	; 0x25aa <_exit>

0000034a <__bad_interrupt>:
     34a:	5a ce       	rjmp	.-844    	; 0x0 <__vectors>

0000034c <pid_init>:
float reference;
float integral;
float prev_error;

//Set regulator paramaters
void pid_init(float _kp, float _ki, float _kd){
     34c:	ef 92       	push	r14
     34e:	ff 92       	push	r15
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
	kp = _kp;
     354:	60 93 ce 02 	sts	0x02CE, r22
     358:	70 93 cf 02 	sts	0x02CF, r23
     35c:	80 93 d0 02 	sts	0x02D0, r24
     360:	90 93 d1 02 	sts	0x02D1, r25
	ki = _ki;
     364:	20 93 c2 02 	sts	0x02C2, r18
     368:	30 93 c3 02 	sts	0x02C3, r19
     36c:	40 93 c4 02 	sts	0x02C4, r20
     370:	50 93 c5 02 	sts	0x02C5, r21
	kd = _kd;
     374:	e0 92 ba 02 	sts	0x02BA, r14
     378:	f0 92 bb 02 	sts	0x02BB, r15
     37c:	00 93 bc 02 	sts	0x02BC, r16
     380:	10 93 bd 02 	sts	0x02BD, r17
	
	reference	= 0;
     384:	10 92 be 02 	sts	0x02BE, r1
     388:	10 92 bf 02 	sts	0x02BF, r1
     38c:	10 92 c0 02 	sts	0x02C0, r1
     390:	10 92 c1 02 	sts	0x02C1, r1
	integral	= 0;
     394:	10 92 ca 02 	sts	0x02CA, r1
     398:	10 92 cb 02 	sts	0x02CB, r1
     39c:	10 92 cc 02 	sts	0x02CC, r1
     3a0:	10 92 cd 02 	sts	0x02CD, r1
	prev_error	= 0;
     3a4:	10 92 c6 02 	sts	0x02C6, r1
     3a8:	10 92 c7 02 	sts	0x02C7, r1
     3ac:	10 92 c8 02 	sts	0x02C8, r1
     3b0:	10 92 c9 02 	sts	0x02C9, r1
	
}
     3b4:	1f 91       	pop	r17
     3b6:	0f 91       	pop	r16
     3b8:	ff 90       	pop	r15
     3ba:	ef 90       	pop	r14
     3bc:	08 95       	ret

000003be <pid_generate>:


//Calculate motor speed
float pid_generate(float r, float y, float dt){
     3be:	4f 92       	push	r4
     3c0:	5f 92       	push	r5
     3c2:	6f 92       	push	r6
     3c4:	7f 92       	push	r7
     3c6:	8f 92       	push	r8
     3c8:	9f 92       	push	r9
     3ca:	af 92       	push	r10
     3cc:	bf 92       	push	r11
     3ce:	cf 92       	push	r12
     3d0:	df 92       	push	r13
     3d2:	ef 92       	push	r14
     3d4:	ff 92       	push	r15
     3d6:	0f 93       	push	r16
     3d8:	1f 93       	push	r17
     3da:	27 01       	movw	r4, r14
     3dc:	38 01       	movw	r6, r16
	float error = r - y;
     3de:	a7 d6       	rcall	.+3406   	; 0x112e <__subsf3>
     3e0:	6b 01       	movw	r12, r22
     3e2:	7c 01       	movw	r14, r24
	integral += error * dt;
     3e4:	a3 01       	movw	r20, r6
     3e6:	92 01       	movw	r18, r4
     3e8:	0e 94 23 0a 	call	0x1446	; 0x1446 <__mulsf3>
     3ec:	20 91 ca 02 	lds	r18, 0x02CA
     3f0:	30 91 cb 02 	lds	r19, 0x02CB
     3f4:	40 91 cc 02 	lds	r20, 0x02CC
     3f8:	50 91 cd 02 	lds	r21, 0x02CD
     3fc:	99 d6       	rcall	.+3378   	; 0x1130 <__addsf3>
     3fe:	4b 01       	movw	r8, r22
     400:	5c 01       	movw	r10, r24
     402:	60 93 ca 02 	sts	0x02CA, r22
     406:	70 93 cb 02 	sts	0x02CB, r23
     40a:	80 93 cc 02 	sts	0x02CC, r24
     40e:	90 93 cd 02 	sts	0x02CD, r25
	float derivative = (error - prev_error) / dt;
     412:	20 91 c6 02 	lds	r18, 0x02C6
     416:	30 91 c7 02 	lds	r19, 0x02C7
     41a:	40 91 c8 02 	lds	r20, 0x02C8
     41e:	50 91 c9 02 	lds	r21, 0x02C9
     422:	c7 01       	movw	r24, r14
     424:	b6 01       	movw	r22, r12
     426:	83 d6       	rcall	.+3334   	; 0x112e <__subsf3>
     428:	a3 01       	movw	r20, r6
     42a:	92 01       	movw	r18, r4
     42c:	e5 d6       	rcall	.+3530   	; 0x11f8 <__divsf3>
     42e:	2b 01       	movw	r4, r22
     430:	3c 01       	movw	r6, r24

	prev_error = error;
     432:	c0 92 c6 02 	sts	0x02C6, r12
     436:	d0 92 c7 02 	sts	0x02C7, r13
     43a:	e0 92 c8 02 	sts	0x02C8, r14
     43e:	f0 92 c9 02 	sts	0x02C9, r15
	return kp*error + ki*integral + kd*derivative;
     442:	20 91 ce 02 	lds	r18, 0x02CE
     446:	30 91 cf 02 	lds	r19, 0x02CF
     44a:	40 91 d0 02 	lds	r20, 0x02D0
     44e:	50 91 d1 02 	lds	r21, 0x02D1
     452:	c7 01       	movw	r24, r14
     454:	b6 01       	movw	r22, r12
     456:	f7 d7       	rcall	.+4078   	; 0x1446 <__mulsf3>
     458:	6b 01       	movw	r12, r22
     45a:	7c 01       	movw	r14, r24
     45c:	20 91 c2 02 	lds	r18, 0x02C2
     460:	30 91 c3 02 	lds	r19, 0x02C3
     464:	40 91 c4 02 	lds	r20, 0x02C4
     468:	50 91 c5 02 	lds	r21, 0x02C5
     46c:	c5 01       	movw	r24, r10
     46e:	b4 01       	movw	r22, r8
     470:	ea d7       	rcall	.+4052   	; 0x1446 <__mulsf3>
     472:	9b 01       	movw	r18, r22
     474:	ac 01       	movw	r20, r24
     476:	c7 01       	movw	r24, r14
     478:	b6 01       	movw	r22, r12
     47a:	5a d6       	rcall	.+3252   	; 0x1130 <__addsf3>
     47c:	6b 01       	movw	r12, r22
     47e:	7c 01       	movw	r14, r24
     480:	20 91 ba 02 	lds	r18, 0x02BA
     484:	30 91 bb 02 	lds	r19, 0x02BB
     488:	40 91 bc 02 	lds	r20, 0x02BC
     48c:	50 91 bd 02 	lds	r21, 0x02BD
     490:	c3 01       	movw	r24, r6
     492:	b2 01       	movw	r22, r4
     494:	d8 d7       	rcall	.+4016   	; 0x1446 <__mulsf3>
     496:	9b 01       	movw	r18, r22
     498:	ac 01       	movw	r20, r24
     49a:	c7 01       	movw	r24, r14
     49c:	b6 01       	movw	r22, r12
     49e:	48 d6       	rcall	.+3216   	; 0x1130 <__addsf3>
}
     4a0:	1f 91       	pop	r17
     4a2:	0f 91       	pop	r16
     4a4:	ff 90       	pop	r15
     4a6:	ef 90       	pop	r14
     4a8:	df 90       	pop	r13
     4aa:	cf 90       	pop	r12
     4ac:	bf 90       	pop	r11
     4ae:	af 90       	pop	r10
     4b0:	9f 90       	pop	r9
     4b2:	8f 90       	pop	r8
     4b4:	7f 90       	pop	r7
     4b6:	6f 90       	pop	r6
     4b8:	5f 90       	pop	r5
     4ba:	4f 90       	pop	r4
     4bc:	08 95       	ret

000004be <pid_encoder_max_value>:

//Initializes the encoder values with 0 in one end
//and a measured value in the other end
uint16_t pid_encoder_max_value(void){
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
	motor_speed(125);
     4c2:	8d e7       	ldi	r24, 0x7D	; 125
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	b4 d4       	rcall	.+2408   	; 0xe30 <motor_speed>
	uint16_t enc_val = 0, prev_enc_val = -1;
	
	//Go left until two equal values are measured
	while(enc_val != prev_enc_val){
		enc_val = motor_encoder_read();
     4c8:	e3 d4       	rcall	.+2502   	; 0xe90 <motor_encoder_read>
     4ca:	ec 01       	movw	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4cc:	87 ea       	ldi	r24, 0xA7	; 167
     4ce:	91 e6       	ldi	r25, 0x61	; 97
     4d0:	01 97       	sbiw	r24, 0x01	; 1
     4d2:	f1 f7       	brne	.-4      	; 0x4d0 <pid_encoder_max_value+0x12>
     4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <pid_encoder_max_value+0x18>
     4d6:	00 00       	nop
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
     4d8:	db d4       	rcall	.+2486   	; 0xe90 <motor_encoder_read>
uint16_t pid_encoder_max_value(void){
	motor_speed(125);
	uint16_t enc_val = 0, prev_enc_val = -1;
	
	//Go left until two equal values are measured
	while(enc_val != prev_enc_val){
     4da:	c8 17       	cp	r28, r24
     4dc:	d9 07       	cpc	r29, r25
     4de:	a1 f7       	brne	.-24     	; 0x4c8 <pid_encoder_max_value+0xa>
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
	}
	
	//Set position as 0 in the encoder
	motor_speed(0);
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	a5 d4       	rcall	.+2378   	; 0xe30 <motor_speed>
	motor_encoder_reset();
     4e6:	8f d4       	rcall	.+2334   	; 0xe06 <motor_encoder_reset>
     4e8:	9f e3       	ldi	r25, 0x3F	; 63
     4ea:	2d e0       	ldi	r18, 0x0D	; 13
     4ec:	83 e0       	ldi	r24, 0x03	; 3
     4ee:	91 50       	subi	r25, 0x01	; 1
     4f0:	20 40       	sbci	r18, 0x00	; 0
     4f2:	80 40       	sbci	r24, 0x00	; 0
     4f4:	e1 f7       	brne	.-8      	; 0x4ee <pid_encoder_max_value+0x30>
     4f6:	00 c0       	rjmp	.+0      	; 0x4f8 <pid_encoder_max_value+0x3a>
     4f8:	00 00       	nop
	_delay_ms(1000);
	
	//Travel to the other end.
	motor_speed(-125);
     4fa:	83 e8       	ldi	r24, 0x83	; 131
     4fc:	9f ef       	ldi	r25, 0xFF	; 255
     4fe:	98 d4       	rcall	.+2352   	; 0xe30 <motor_speed>
	enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
		enc_val = motor_encoder_read();
     500:	c7 d4       	rcall	.+2446   	; 0xe90 <motor_encoder_read>
     502:	ec 01       	movw	r28, r24
     504:	87 ea       	ldi	r24, 0xA7	; 167
     506:	91 e6       	ldi	r25, 0x61	; 97
     508:	01 97       	sbiw	r24, 0x01	; 1
     50a:	f1 f7       	brne	.-4      	; 0x508 <pid_encoder_max_value+0x4a>
     50c:	00 c0       	rjmp	.+0      	; 0x50e <pid_encoder_max_value+0x50>
     50e:	00 00       	nop
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
     510:	bf d4       	rcall	.+2430   	; 0xe90 <motor_encoder_read>
	_delay_ms(1000);
	
	//Travel to the other end.
	motor_speed(-125);
	enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
     512:	c8 17       	cp	r28, r24
     514:	d9 07       	cpc	r29, r25
     516:	a1 f7       	brne	.-24     	; 0x500 <pid_encoder_max_value+0x42>
		enc_val = motor_encoder_read();
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
	}
	motor_speed(0);
     518:	80 e0       	ldi	r24, 0x00	; 0
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	89 d4       	rcall	.+2322   	; 0xe30 <motor_speed>
	
	//Find max value of encoder.
	return enc_val;
}
     51e:	ce 01       	movw	r24, r28
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	08 95       	ret

00000526 <can_init>:
}

void can_handle_joystick_message(can_message msg){
	printf("joy %d\n", msg.data[0]);
	pwm_set_servo(msg.data[0]);
}
     526:	49 d3       	rcall	.+1682   	; 0xbba <mcp_init>
     528:	4f ef       	ldi	r20, 0xFF	; 255
     52a:	64 e6       	ldi	r22, 0x64	; 100
     52c:	80 e6       	ldi	r24, 0x60	; 96
     52e:	2d d3       	rcall	.+1626   	; 0xb8a <mcp_bitModify>
     530:	4f ef       	ldi	r20, 0xFF	; 255
     532:	64 e6       	ldi	r22, 0x64	; 100
     534:	80 e7       	ldi	r24, 0x70	; 112
     536:	29 d3       	rcall	.+1618   	; 0xb8a <mcp_bitModify>
     538:	4f ef       	ldi	r20, 0xFF	; 255
     53a:	63 e0       	ldi	r22, 0x03	; 3
     53c:	8e e2       	ldi	r24, 0x2E	; 46
     53e:	25 d3       	rcall	.+1610   	; 0xb8a <mcp_bitModify>
     540:	40 e0       	ldi	r20, 0x00	; 0
     542:	60 ee       	ldi	r22, 0xE0	; 224
     544:	8f e0       	ldi	r24, 0x0F	; 15
     546:	21 c3       	rjmp	.+1602   	; 0xb8a <mcp_bitModify>
     548:	08 95       	ret

0000054a <can_read>:
     54a:	8f 92       	push	r8
     54c:	9f 92       	push	r9
     54e:	af 92       	push	r10
     550:	bf 92       	push	r11
     552:	cf 92       	push	r12
     554:	df 92       	push	r13
     556:	ef 92       	push	r14
     558:	ff 92       	push	r15
     55a:	0f 93       	push	r16
     55c:	1f 93       	push	r17
     55e:	cf 93       	push	r28
     560:	df 93       	push	r29
     562:	cd b7       	in	r28, 0x3d	; 61
     564:	de b7       	in	r29, 0x3e	; 62
     566:	2b 97       	sbiw	r28, 0x0b	; 11
     568:	0f b6       	in	r0, 0x3f	; 63
     56a:	f8 94       	cli
     56c:	de bf       	out	0x3e, r29	; 62
     56e:	0f be       	out	0x3f, r0	; 63
     570:	cd bf       	out	0x3d, r28	; 61
     572:	6c 01       	movw	r12, r24
     574:	16 2f       	mov	r17, r22
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	86 0f       	add	r24, r22
     57a:	e7 d2       	rcall	.+1486   	; 0xb4a <mcp_read>
     57c:	a8 2e       	mov	r10, r24
     57e:	82 e0       	ldi	r24, 0x02	; 2
     580:	81 0f       	add	r24, r17
     582:	e3 d2       	rcall	.+1478   	; 0xb4a <mcp_read>
     584:	82 95       	swap	r24
     586:	86 95       	lsr	r24
     588:	87 70       	andi	r24, 0x07	; 7
     58a:	b1 2c       	mov	r11, r1
     58c:	aa 0c       	add	r10, r10
     58e:	bb 1c       	adc	r11, r11
     590:	aa 0c       	add	r10, r10
     592:	bb 1c       	adc	r11, r11
     594:	aa 0c       	add	r10, r10
     596:	bb 1c       	adc	r11, r11
     598:	a8 2a       	or	r10, r24
     59a:	85 e0       	ldi	r24, 0x05	; 5
     59c:	81 0f       	add	r24, r17
     59e:	d5 d2       	rcall	.+1450   	; 0xb4a <mcp_read>
     5a0:	8f 70       	andi	r24, 0x0F	; 15
     5a2:	88 2e       	mov	r8, r24
     5a4:	a1 f0       	breq	.+40     	; 0x5ce <can_read+0x84>
     5a6:	0f 2e       	mov	r0, r31
     5a8:	f6 e0       	ldi	r31, 0x06	; 6
     5aa:	9f 2e       	mov	r9, r31
     5ac:	f0 2d       	mov	r31, r0
     5ae:	91 0e       	add	r9, r17
     5b0:	8e 01       	movw	r16, r28
     5b2:	0c 5f       	subi	r16, 0xFC	; 252
     5b4:	1f 4f       	sbci	r17, 0xFF	; 255
     5b6:	78 01       	movw	r14, r16
     5b8:	e8 0e       	add	r14, r24
     5ba:	f1 1c       	adc	r15, r1
     5bc:	89 2d       	mov	r24, r9
     5be:	c5 d2       	rcall	.+1418   	; 0xb4a <mcp_read>
     5c0:	f8 01       	movw	r30, r16
     5c2:	81 93       	st	Z+, r24
     5c4:	8f 01       	movw	r16, r30
     5c6:	93 94       	inc	r9
     5c8:	ee 15       	cp	r30, r14
     5ca:	ff 05       	cpc	r31, r15
     5cc:	b9 f7       	brne	.-18     	; 0x5bc <can_read+0x72>
     5ce:	40 e0       	ldi	r20, 0x00	; 0
     5d0:	61 e0       	ldi	r22, 0x01	; 1
     5d2:	8c e2       	ldi	r24, 0x2C	; 44
     5d4:	da d2       	rcall	.+1460   	; 0xb8a <mcp_bitModify>
     5d6:	ba 82       	std	Y+2, r11	; 0x02
     5d8:	a9 82       	std	Y+1, r10	; 0x01
     5da:	8b 82       	std	Y+3, r8	; 0x03
     5dc:	8b e0       	ldi	r24, 0x0B	; 11
     5de:	fe 01       	movw	r30, r28
     5e0:	31 96       	adiw	r30, 0x01	; 1
     5e2:	d6 01       	movw	r26, r12
     5e4:	01 90       	ld	r0, Z+
     5e6:	0d 92       	st	X+, r0
     5e8:	8a 95       	dec	r24
     5ea:	e1 f7       	brne	.-8      	; 0x5e4 <can_read+0x9a>
     5ec:	c6 01       	movw	r24, r12
     5ee:	2b 96       	adiw	r28, 0x0b	; 11
     5f0:	0f b6       	in	r0, 0x3f	; 63
     5f2:	f8 94       	cli
     5f4:	de bf       	out	0x3e, r29	; 62
     5f6:	0f be       	out	0x3f, r0	; 63
     5f8:	cd bf       	out	0x3d, r28	; 61
     5fa:	df 91       	pop	r29
     5fc:	cf 91       	pop	r28
     5fe:	1f 91       	pop	r17
     600:	0f 91       	pop	r16
     602:	ff 90       	pop	r15
     604:	ef 90       	pop	r14
     606:	df 90       	pop	r13
     608:	cf 90       	pop	r12
     60a:	bf 90       	pop	r11
     60c:	af 90       	pop	r10
     60e:	9f 90       	pop	r9
     610:	8f 90       	pop	r8
     612:	08 95       	ret

00000614 <new_can_message>:
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	cd b7       	in	r28, 0x3d	; 61
     61a:	de b7       	in	r29, 0x3e	; 62
     61c:	2b 97       	sbiw	r28, 0x0b	; 11
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	f8 94       	cli
     622:	de bf       	out	0x3e, r29	; 62
     624:	0f be       	out	0x3f, r0	; 63
     626:	cd bf       	out	0x3d, r28	; 61
     628:	44 23       	and	r20, r20
     62a:	61 f0       	breq	.+24     	; 0x644 <new_can_message+0x30>
     62c:	a2 2f       	mov	r26, r18
     62e:	b3 2f       	mov	r27, r19
     630:	fe 01       	movw	r30, r28
     632:	34 96       	adiw	r30, 0x04	; 4
     634:	9f 01       	movw	r18, r30
     636:	24 0f       	add	r18, r20
     638:	31 1d       	adc	r19, r1
     63a:	5d 91       	ld	r21, X+
     63c:	51 93       	st	Z+, r21
     63e:	e2 17       	cp	r30, r18
     640:	f3 07       	cpc	r31, r19
     642:	d9 f7       	brne	.-10     	; 0x63a <new_can_message+0x26>
     644:	7a 83       	std	Y+2, r23	; 0x02
     646:	69 83       	std	Y+1, r22	; 0x01
     648:	4b 83       	std	Y+3, r20	; 0x03
     64a:	2b e0       	ldi	r18, 0x0B	; 11
     64c:	fe 01       	movw	r30, r28
     64e:	31 96       	adiw	r30, 0x01	; 1
     650:	dc 01       	movw	r26, r24
     652:	01 90       	ld	r0, Z+
     654:	0d 92       	st	X+, r0
     656:	2a 95       	dec	r18
     658:	e1 f7       	brne	.-8      	; 0x652 <new_can_message+0x3e>
     65a:	2b 96       	adiw	r28, 0x0b	; 11
     65c:	0f b6       	in	r0, 0x3f	; 63
     65e:	f8 94       	cli
     660:	de bf       	out	0x3e, r29	; 62
     662:	0f be       	out	0x3f, r0	; 63
     664:	cd bf       	out	0x3d, r28	; 61
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	08 95       	ret

0000066c <can_write>:
     66c:	cf 92       	push	r12
     66e:	df 92       	push	r13
     670:	ef 92       	push	r14
     672:	ff 92       	push	r15
     674:	0f 93       	push	r16
     676:	1f 93       	push	r17
     678:	cf 93       	push	r28
     67a:	df 93       	push	r29
     67c:	cd b7       	in	r28, 0x3d	; 61
     67e:	de b7       	in	r29, 0x3e	; 62
     680:	2b 97       	sbiw	r28, 0x0b	; 11
     682:	0f b6       	in	r0, 0x3f	; 63
     684:	f8 94       	cli
     686:	de bf       	out	0x3e, r29	; 62
     688:	0f be       	out	0x3f, r0	; 63
     68a:	cd bf       	out	0x3d, r28	; 61
     68c:	e9 82       	std	Y+1, r14	; 0x01
     68e:	fa 82       	std	Y+2, r15	; 0x02
     690:	0b 83       	std	Y+3, r16	; 0x03
     692:	1c 83       	std	Y+4, r17	; 0x04
     694:	2d 83       	std	Y+5, r18	; 0x05
     696:	3e 83       	std	Y+6, r19	; 0x06
     698:	4f 83       	std	Y+7, r20	; 0x07
     69a:	58 87       	std	Y+8, r21	; 0x08
     69c:	69 87       	std	Y+9, r22	; 0x09
     69e:	7a 87       	std	Y+10, r23	; 0x0a
     6a0:	8b 87       	std	Y+11, r24	; 0x0b
     6a2:	e9 80       	ldd	r14, Y+1	; 0x01
     6a4:	fa 80       	ldd	r15, Y+2	; 0x02
     6a6:	8c 2d       	mov	r24, r12
     6a8:	50 d2       	rcall	.+1184   	; 0xb4a <mcp_read>
     6aa:	83 fd       	sbrc	r24, 3
     6ac:	fc cf       	rjmp	.-8      	; 0x6a6 <can_write+0x3a>
     6ae:	b7 01       	movw	r22, r14
     6b0:	76 95       	lsr	r23
     6b2:	67 95       	ror	r22
     6b4:	76 95       	lsr	r23
     6b6:	67 95       	ror	r22
     6b8:	76 95       	lsr	r23
     6ba:	67 95       	ror	r22
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	8c 0d       	add	r24, r12
     6c0:	50 d2       	rcall	.+1184   	; 0xb62 <mcp_write>
     6c2:	6e 2d       	mov	r22, r14
     6c4:	62 95       	swap	r22
     6c6:	66 0f       	add	r22, r22
     6c8:	60 7e       	andi	r22, 0xE0	; 224
     6ca:	82 e0       	ldi	r24, 0x02	; 2
     6cc:	8c 0d       	add	r24, r12
     6ce:	49 d2       	rcall	.+1170   	; 0xb62 <mcp_write>
     6d0:	60 2f       	mov	r22, r16
     6d2:	6f 70       	andi	r22, 0x0F	; 15
     6d4:	85 e0       	ldi	r24, 0x05	; 5
     6d6:	8c 0d       	add	r24, r12
     6d8:	44 d2       	rcall	.+1160   	; 0xb62 <mcp_write>
     6da:	00 23       	and	r16, r16
     6dc:	b1 f0       	breq	.+44     	; 0x70a <can_write+0x9e>
     6de:	7e 01       	movw	r14, r28
     6e0:	84 e0       	ldi	r24, 0x04	; 4
     6e2:	e8 0e       	add	r14, r24
     6e4:	f1 1c       	adc	r15, r1
     6e6:	0f 2e       	mov	r0, r31
     6e8:	f6 e0       	ldi	r31, 0x06	; 6
     6ea:	df 2e       	mov	r13, r31
     6ec:	f0 2d       	mov	r31, r0
     6ee:	dc 0c       	add	r13, r12
     6f0:	f7 01       	movw	r30, r14
     6f2:	e0 0f       	add	r30, r16
     6f4:	f1 1d       	adc	r31, r1
     6f6:	8f 01       	movw	r16, r30
     6f8:	f7 01       	movw	r30, r14
     6fa:	61 91       	ld	r22, Z+
     6fc:	7f 01       	movw	r14, r30
     6fe:	8d 2d       	mov	r24, r13
     700:	30 d2       	rcall	.+1120   	; 0xb62 <mcp_write>
     702:	d3 94       	inc	r13
     704:	e0 16       	cp	r14, r16
     706:	f1 06       	cpc	r15, r17
     708:	b9 f7       	brne	.-18     	; 0x6f8 <can_write+0x8c>
     70a:	8c 2d       	mov	r24, r12
     70c:	82 95       	swap	r24
     70e:	8f 70       	andi	r24, 0x0F	; 15
     710:	82 58       	subi	r24, 0x82	; 130
     712:	4f d2       	rcall	.+1182   	; 0xbb2 <mcp_requestToSend>
     714:	2b 96       	adiw	r28, 0x0b	; 11
     716:	0f b6       	in	r0, 0x3f	; 63
     718:	f8 94       	cli
     71a:	de bf       	out	0x3e, r29	; 62
     71c:	0f be       	out	0x3f, r0	; 63
     71e:	cd bf       	out	0x3d, r28	; 61
     720:	df 91       	pop	r29
     722:	cf 91       	pop	r28
     724:	1f 91       	pop	r17
     726:	0f 91       	pop	r16
     728:	ff 90       	pop	r15
     72a:	ef 90       	pop	r14
     72c:	df 90       	pop	r13
     72e:	cf 90       	pop	r12
     730:	08 95       	ret

00000732 <can_pollInterrupt>:
     732:	80 b1       	in	r24, 0x00	; 0
     734:	8c e2       	ldi	r24, 0x2C	; 44
     736:	09 d2       	rcall	.+1042   	; 0xb4a <mcp_read>
     738:	80 ff       	sbrs	r24, 0
     73a:	06 c0       	rjmp	.+12     	; 0x748 <can_pollInterrupt+0x16>
     73c:	4f ef       	ldi	r20, 0xFF	; 255
     73e:	61 e0       	ldi	r22, 0x01	; 1
     740:	8c e2       	ldi	r24, 0x2C	; 44
     742:	23 d2       	rcall	.+1094   	; 0xb8a <mcp_bitModify>
     744:	90 e6       	ldi	r25, 0x60	; 96
     746:	09 c0       	rjmp	.+18     	; 0x75a <can_pollInterrupt+0x28>
     748:	98 2f       	mov	r25, r24
     74a:	92 70       	andi	r25, 0x02	; 2
     74c:	81 ff       	sbrs	r24, 1
     74e:	05 c0       	rjmp	.+10     	; 0x75a <can_pollInterrupt+0x28>
     750:	4f ef       	ldi	r20, 0xFF	; 255
     752:	62 e0       	ldi	r22, 0x02	; 2
     754:	8c e2       	ldi	r24, 0x2C	; 44
     756:	19 d2       	rcall	.+1074   	; 0xb8a <mcp_bitModify>
     758:	90 e7       	ldi	r25, 0x70	; 112
     75a:	89 2f       	mov	r24, r25
     75c:	08 95       	ret

0000075e <can_handle_solenoid_message>:
void can_handle_solenoid_message(can_message msg){
     75e:	ef 92       	push	r14
     760:	ff 92       	push	r15
     762:	0f 93       	push	r16
     764:	1f 93       	push	r17
     766:	cf 93       	push	r28
     768:	df 93       	push	r29
     76a:	cd b7       	in	r28, 0x3d	; 61
     76c:	de b7       	in	r29, 0x3e	; 62
     76e:	2b 97       	sbiw	r28, 0x0b	; 11
     770:	0f b6       	in	r0, 0x3f	; 63
     772:	f8 94       	cli
     774:	de bf       	out	0x3e, r29	; 62
     776:	0f be       	out	0x3f, r0	; 63
     778:	cd bf       	out	0x3d, r28	; 61
     77a:	e9 82       	std	Y+1, r14	; 0x01
     77c:	fa 82       	std	Y+2, r15	; 0x02
     77e:	0b 83       	std	Y+3, r16	; 0x03
     780:	1c 83       	std	Y+4, r17	; 0x04
     782:	2d 83       	std	Y+5, r18	; 0x05
     784:	3e 83       	std	Y+6, r19	; 0x06
     786:	4f 83       	std	Y+7, r20	; 0x07
     788:	58 87       	std	Y+8, r21	; 0x08
     78a:	69 87       	std	Y+9, r22	; 0x09
     78c:	7a 87       	std	Y+10, r23	; 0x0a
     78e:	8b 87       	std	Y+11, r24	; 0x0b
	if(msg.data[0]){
     790:	11 23       	and	r17, r17
     792:	11 f0       	breq	.+4      	; 0x798 <can_handle_solenoid_message+0x3a>
		PORTA &= ~(1<<PA2); //activate relay
     794:	12 98       	cbi	0x02, 2	; 2
     796:	01 c0       	rjmp	.+2      	; 0x79a <can_handle_solenoid_message+0x3c>
	}
	else{
		PORTA |= (1<<PA2); //stop relay
     798:	12 9a       	sbi	0x02, 2	; 2
	}
}
     79a:	2b 96       	adiw	r28, 0x0b	; 11
     79c:	0f b6       	in	r0, 0x3f	; 63
     79e:	f8 94       	cli
     7a0:	de bf       	out	0x3e, r29	; 62
     7a2:	0f be       	out	0x3f, r0	; 63
     7a4:	cd bf       	out	0x3d, r28	; 61
     7a6:	df 91       	pop	r29
     7a8:	cf 91       	pop	r28
     7aa:	1f 91       	pop	r17
     7ac:	0f 91       	pop	r16
     7ae:	ff 90       	pop	r15
     7b0:	ef 90       	pop	r14
     7b2:	08 95       	ret

000007b4 <can_handle_slider_message>:
void can_handle_slider_message(can_message msg, uint16_t max_encoder_value){
     7b4:	8f 92       	push	r8
     7b6:	9f 92       	push	r9
     7b8:	af 92       	push	r10
     7ba:	bf 92       	push	r11
     7bc:	cf 92       	push	r12
     7be:	df 92       	push	r13
     7c0:	ef 92       	push	r14
     7c2:	ff 92       	push	r15
     7c4:	0f 93       	push	r16
     7c6:	1f 93       	push	r17
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
     7cc:	cd b7       	in	r28, 0x3d	; 61
     7ce:	de b7       	in	r29, 0x3e	; 62
     7d0:	2b 97       	sbiw	r28, 0x0b	; 11
     7d2:	0f b6       	in	r0, 0x3f	; 63
     7d4:	f8 94       	cli
     7d6:	de bf       	out	0x3e, r29	; 62
     7d8:	0f be       	out	0x3f, r0	; 63
     7da:	cd bf       	out	0x3d, r28	; 61
	uint8_t slider_value = msg.data[0];
	
	//Reverse the slider values and convert to encoder values
	float r = (255 - slider_value)*(max_encoder_value/255.0);
     7dc:	6f ef       	ldi	r22, 0xFF	; 255
     7de:	70 e0       	ldi	r23, 0x00	; 0
     7e0:	61 1b       	sub	r22, r17
     7e2:	71 09       	sbc	r23, r1
     7e4:	88 27       	eor	r24, r24
     7e6:	77 fd       	sbrc	r23, 7
     7e8:	80 95       	com	r24
     7ea:	98 2f       	mov	r25, r24
     7ec:	a0 d5       	rcall	.+2880   	; 0x132e <__floatsisf>
     7ee:	4b 01       	movw	r8, r22
     7f0:	5c 01       	movw	r10, r24
     7f2:	b6 01       	movw	r22, r12
     7f4:	80 e0       	ldi	r24, 0x00	; 0
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	98 d5       	rcall	.+2864   	; 0x132a <__floatunsisf>
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	4f e7       	ldi	r20, 0x7F	; 127
     800:	53 e4       	ldi	r21, 0x43	; 67
     802:	fa d4       	rcall	.+2548   	; 0x11f8 <__divsf3>
     804:	9b 01       	movw	r18, r22
     806:	ac 01       	movw	r20, r24
     808:	c5 01       	movw	r24, r10
     80a:	b4 01       	movw	r22, r8
     80c:	1c d6       	rcall	.+3128   	; 0x1446 <__mulsf3>
     80e:	4b 01       	movw	r8, r22
     810:	5c 01       	movw	r10, r24
	float y = motor_encoder_read();
     812:	3e d3       	rcall	.+1660   	; 0xe90 <motor_encoder_read>
     814:	bc 01       	movw	r22, r24
     816:	88 27       	eor	r24, r24
     818:	77 fd       	sbrc	r23, 7
     81a:	80 95       	com	r24
     81c:	98 2f       	mov	r25, r24
     81e:	87 d5       	rcall	.+2830   	; 0x132e <__floatsisf>
     820:	9b 01       	movw	r18, r22
     822:	ac 01       	movw	r20, r24
	
	//Convert to speed-values
	float u = pid_generate(r, y, 0.01) / ((max_encoder_value+1)/255);
     824:	1a e0       	ldi	r17, 0x0A	; 10
     826:	e1 2e       	mov	r14, r17
     828:	17 ed       	ldi	r17, 0xD7	; 215
     82a:	f1 2e       	mov	r15, r17
     82c:	03 e2       	ldi	r16, 0x23	; 35
     82e:	1c e3       	ldi	r17, 0x3C	; 60
     830:	c5 01       	movw	r24, r10
     832:	b4 01       	movw	r22, r8
     834:	c4 dd       	rcall	.-1144   	; 0x3be <pid_generate>
     836:	4b 01       	movw	r8, r22
     838:	5c 01       	movw	r10, r24
     83a:	96 01       	movw	r18, r12
     83c:	2f 5f       	subi	r18, 0xFF	; 255
     83e:	3f 4f       	sbci	r19, 0xFF	; 255
     840:	a1 e8       	ldi	r26, 0x81	; 129
     842:	b0 e8       	ldi	r27, 0x80	; 128
     844:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <__umulhisi3>
     848:	88 0f       	add	r24, r24
     84a:	89 2f       	mov	r24, r25
     84c:	88 1f       	adc	r24, r24
     84e:	99 0b       	sbc	r25, r25
     850:	91 95       	neg	r25
     852:	bc 01       	movw	r22, r24
     854:	80 e0       	ldi	r24, 0x00	; 0
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	68 d5       	rcall	.+2768   	; 0x132a <__floatunsisf>
     85a:	9b 01       	movw	r18, r22
     85c:	ac 01       	movw	r20, r24
     85e:	c5 01       	movw	r24, r10
     860:	b4 01       	movw	r22, r8
     862:	ca d4       	rcall	.+2452   	; 0x11f8 <__divsf3>
	motor_speed(u);
     864:	31 d5       	rcall	.+2658   	; 0x12c8 <__fixsfsi>
     866:	cb 01       	movw	r24, r22
     868:	e3 d2       	rcall	.+1478   	; 0xe30 <motor_speed>
}
     86a:	2b 96       	adiw	r28, 0x0b	; 11
     86c:	0f b6       	in	r0, 0x3f	; 63
     86e:	f8 94       	cli
     870:	de bf       	out	0x3e, r29	; 62
     872:	0f be       	out	0x3f, r0	; 63
     874:	cd bf       	out	0x3d, r28	; 61
     876:	df 91       	pop	r29
     878:	cf 91       	pop	r28
     87a:	1f 91       	pop	r17
     87c:	0f 91       	pop	r16
     87e:	ff 90       	pop	r15
     880:	ef 90       	pop	r14
     882:	df 90       	pop	r13
     884:	cf 90       	pop	r12
     886:	bf 90       	pop	r11
     888:	af 90       	pop	r10
     88a:	9f 90       	pop	r9
     88c:	8f 90       	pop	r8
     88e:	08 95       	ret

00000890 <can_handle_pid_message>:

//Sets difficulty. Sends parameters in scientific notation.
void can_handle_pid_message(can_message msg){
     890:	3f 92       	push	r3
     892:	4f 92       	push	r4
     894:	5f 92       	push	r5
     896:	6f 92       	push	r6
     898:	7f 92       	push	r7
     89a:	8f 92       	push	r8
     89c:	9f 92       	push	r9
     89e:	af 92       	push	r10
     8a0:	bf 92       	push	r11
     8a2:	cf 92       	push	r12
     8a4:	df 92       	push	r13
     8a6:	ef 92       	push	r14
     8a8:	ff 92       	push	r15
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	cf 93       	push	r28
     8b0:	df 93       	push	r29
     8b2:	cd b7       	in	r28, 0x3d	; 61
     8b4:	de b7       	in	r29, 0x3e	; 62
     8b6:	2b 97       	sbiw	r28, 0x0b	; 11
     8b8:	0f b6       	in	r0, 0x3f	; 63
     8ba:	f8 94       	cli
     8bc:	de bf       	out	0x3e, r29	; 62
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	cd bf       	out	0x3d, r28	; 61
     8c2:	72 2e       	mov	r7, r18
     8c4:	03 2f       	mov	r16, r19
     8c6:	b4 2e       	mov	r11, r20
     8c8:	35 2e       	mov	r3, r21
	pid_init(-msg.data[0]*pow(10, -msg.data[1]), -msg.data[2]*pow(10, -msg.data[3]), -msg.data[4]*pow(10, -msg.data[5]));
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	71 95       	neg	r23
     8ce:	61 95       	neg	r22
     8d0:	71 09       	sbc	r23, r1
     8d2:	88 27       	eor	r24, r24
     8d4:	77 fd       	sbrc	r23, 7
     8d6:	80 95       	com	r24
     8d8:	98 2f       	mov	r25, r24
     8da:	29 d5       	rcall	.+2642   	; 0x132e <__floatsisf>
     8dc:	9b 01       	movw	r18, r22
     8de:	ac 01       	movw	r20, r24
     8e0:	60 e0       	ldi	r22, 0x00	; 0
     8e2:	70 e0       	ldi	r23, 0x00	; 0
     8e4:	80 e2       	ldi	r24, 0x20	; 32
     8e6:	91 e4       	ldi	r25, 0x41	; 65
     8e8:	11 d6       	rcall	.+3106   	; 0x150c <pow>
     8ea:	6b 01       	movw	r12, r22
     8ec:	7c 01       	movw	r14, r24
     8ee:	6b 2d       	mov	r22, r11
     8f0:	70 e0       	ldi	r23, 0x00	; 0
     8f2:	71 95       	neg	r23
     8f4:	61 95       	neg	r22
     8f6:	71 09       	sbc	r23, r1
     8f8:	88 27       	eor	r24, r24
     8fa:	77 fd       	sbrc	r23, 7
     8fc:	80 95       	com	r24
     8fe:	98 2f       	mov	r25, r24
     900:	16 d5       	rcall	.+2604   	; 0x132e <__floatsisf>
     902:	9b 01       	movw	r18, r22
     904:	ac 01       	movw	r20, r24
     906:	60 e0       	ldi	r22, 0x00	; 0
     908:	70 e0       	ldi	r23, 0x00	; 0
     90a:	80 e2       	ldi	r24, 0x20	; 32
     90c:	91 e4       	ldi	r25, 0x41	; 65
     90e:	fe d5       	rcall	.+3068   	; 0x150c <pow>
     910:	4b 01       	movw	r8, r22
     912:	5c 01       	movw	r10, r24
     914:	67 2d       	mov	r22, r7
     916:	70 e0       	ldi	r23, 0x00	; 0
     918:	71 95       	neg	r23
     91a:	61 95       	neg	r22
     91c:	71 09       	sbc	r23, r1
     91e:	88 27       	eor	r24, r24
     920:	77 fd       	sbrc	r23, 7
     922:	80 95       	com	r24
     924:	98 2f       	mov	r25, r24
     926:	03 d5       	rcall	.+2566   	; 0x132e <__floatsisf>
     928:	9b 01       	movw	r18, r22
     92a:	ac 01       	movw	r20, r24
     92c:	60 e0       	ldi	r22, 0x00	; 0
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	80 e2       	ldi	r24, 0x20	; 32
     932:	91 e4       	ldi	r25, 0x41	; 65
     934:	eb d5       	rcall	.+3030   	; 0x150c <pow>
     936:	2b 01       	movw	r4, r22
     938:	3c 01       	movw	r6, r24
     93a:	63 2d       	mov	r22, r3
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	71 95       	neg	r23
     940:	61 95       	neg	r22
     942:	71 09       	sbc	r23, r1
     944:	88 27       	eor	r24, r24
     946:	77 fd       	sbrc	r23, 7
     948:	80 95       	com	r24
     94a:	98 2f       	mov	r25, r24
     94c:	f0 d4       	rcall	.+2528   	; 0x132e <__floatsisf>
     94e:	a7 01       	movw	r20, r14
     950:	96 01       	movw	r18, r12
     952:	79 d5       	rcall	.+2802   	; 0x1446 <__mulsf3>
     954:	6b 01       	movw	r12, r22
     956:	7c 01       	movw	r14, r24
     958:	60 2f       	mov	r22, r16
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	71 95       	neg	r23
     95e:	61 95       	neg	r22
     960:	71 09       	sbc	r23, r1
     962:	88 27       	eor	r24, r24
     964:	77 fd       	sbrc	r23, 7
     966:	80 95       	com	r24
     968:	98 2f       	mov	r25, r24
     96a:	e1 d4       	rcall	.+2498   	; 0x132e <__floatsisf>
     96c:	a5 01       	movw	r20, r10
     96e:	94 01       	movw	r18, r8
     970:	6a d5       	rcall	.+2772   	; 0x1446 <__mulsf3>
     972:	4b 01       	movw	r8, r22
     974:	5c 01       	movw	r10, r24
     976:	61 2f       	mov	r22, r17
     978:	70 e0       	ldi	r23, 0x00	; 0
     97a:	71 95       	neg	r23
     97c:	61 95       	neg	r22
     97e:	71 09       	sbc	r23, r1
     980:	88 27       	eor	r24, r24
     982:	77 fd       	sbrc	r23, 7
     984:	80 95       	com	r24
     986:	98 2f       	mov	r25, r24
     988:	d2 d4       	rcall	.+2468   	; 0x132e <__floatsisf>
     98a:	a3 01       	movw	r20, r6
     98c:	92 01       	movw	r18, r4
     98e:	5b d5       	rcall	.+2742   	; 0x1446 <__mulsf3>
     990:	87 01       	movw	r16, r14
     992:	76 01       	movw	r14, r12
     994:	a5 01       	movw	r20, r10
     996:	94 01       	movw	r18, r8
     998:	d9 dc       	rcall	.-1614   	; 0x34c <pid_init>
}
     99a:	2b 96       	adiw	r28, 0x0b	; 11
     99c:	0f b6       	in	r0, 0x3f	; 63
     99e:	f8 94       	cli
     9a0:	de bf       	out	0x3e, r29	; 62
     9a2:	0f be       	out	0x3f, r0	; 63
     9a4:	cd bf       	out	0x3d, r28	; 61
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	1f 91       	pop	r17
     9ac:	0f 91       	pop	r16
     9ae:	ff 90       	pop	r15
     9b0:	ef 90       	pop	r14
     9b2:	df 90       	pop	r13
     9b4:	cf 90       	pop	r12
     9b6:	bf 90       	pop	r11
     9b8:	af 90       	pop	r10
     9ba:	9f 90       	pop	r9
     9bc:	8f 90       	pop	r8
     9be:	7f 90       	pop	r7
     9c0:	6f 90       	pop	r6
     9c2:	5f 90       	pop	r5
     9c4:	4f 90       	pop	r4
     9c6:	3f 90       	pop	r3
     9c8:	08 95       	ret

000009ca <can_handle_message>:
void can_handle_message(can_message msg, uint16_t max_encoder_value){
     9ca:	cf 92       	push	r12
     9cc:	df 92       	push	r13
     9ce:	ef 92       	push	r14
     9d0:	ff 92       	push	r15
     9d2:	0f 93       	push	r16
     9d4:	1f 93       	push	r17
     9d6:	cf 93       	push	r28
     9d8:	df 93       	push	r29
     9da:	cd b7       	in	r28, 0x3d	; 61
     9dc:	de b7       	in	r29, 0x3e	; 62
     9de:	2b 97       	sbiw	r28, 0x0b	; 11
     9e0:	0f b6       	in	r0, 0x3f	; 63
     9e2:	f8 94       	cli
     9e4:	de bf       	out	0x3e, r29	; 62
     9e6:	0f be       	out	0x3f, r0	; 63
     9e8:	cd bf       	out	0x3d, r28	; 61
     9ea:	e9 82       	std	Y+1, r14	; 0x01
     9ec:	fa 82       	std	Y+2, r15	; 0x02
     9ee:	0b 83       	std	Y+3, r16	; 0x03
     9f0:	1c 83       	std	Y+4, r17	; 0x04
     9f2:	2d 83       	std	Y+5, r18	; 0x05
     9f4:	3e 83       	std	Y+6, r19	; 0x06
     9f6:	4f 83       	std	Y+7, r20	; 0x07
     9f8:	58 87       	std	Y+8, r21	; 0x08
     9fa:	69 87       	std	Y+9, r22	; 0x09
     9fc:	7a 87       	std	Y+10, r23	; 0x0a
     9fe:	8b 87       	std	Y+11, r24	; 0x0b
	switch(msg.id){
     a00:	89 81       	ldd	r24, Y+1	; 0x01
     a02:	9a 81       	ldd	r25, Y+2	; 0x02
     a04:	87 37       	cpi	r24, 0x77	; 119
     a06:	91 05       	cpc	r25, r1
     a08:	11 f1       	breq	.+68     	; 0xa4e <can_handle_message+0x84>
     a0a:	20 f4       	brcc	.+8      	; 0xa14 <can_handle_message+0x4a>
     a0c:	85 35       	cpi	r24, 0x55	; 85
     a0e:	91 05       	cpc	r25, r1
     a10:	41 f0       	breq	.+16     	; 0xa22 <can_handle_message+0x58>
     a12:	55 c0       	rjmp	.+170    	; 0xabe <can_handle_message+0xf4>
     a14:	88 38       	cpi	r24, 0x88	; 136
     a16:	91 05       	cpc	r25, r1
     a18:	39 f1       	breq	.+78     	; 0xa68 <can_handle_message+0x9e>
     a1a:	89 39       	cpi	r24, 0x99	; 153
     a1c:	91 05       	cpc	r25, r1
     a1e:	c1 f1       	breq	.+112    	; 0xa90 <can_handle_message+0xc6>
     a20:	4e c0       	rjmp	.+156    	; 0xabe <can_handle_message+0xf4>
		case MCP_JOYSTICK_MESSAGE:
			printf("Joy\n");
     a22:	8f e0       	ldi	r24, 0x0F	; 15
     a24:	92 e0       	ldi	r25, 0x02	; 2
     a26:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
     a2a:	8c 81       	ldd	r24, Y+4	; 0x04
	}
	printf("\n");
}

void can_handle_joystick_message(can_message msg){
	printf("joy %d\n", msg.data[0]);
     a2c:	c8 2e       	mov	r12, r24
     a2e:	d1 2c       	mov	r13, r1
     a30:	1f 92       	push	r1
     a32:	8f 93       	push	r24
     a34:	27 e0       	ldi	r18, 0x07	; 7
     a36:	32 e0       	ldi	r19, 0x02	; 2
     a38:	3f 93       	push	r19
     a3a:	2f 93       	push	r18
     a3c:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <printf>
	pwm_set_servo(msg.data[0]);
     a40:	c6 01       	movw	r24, r12
     a42:	5e d2       	rcall	.+1212   	; 0xf00 <pwm_set_servo>
     a44:	0f 90       	pop	r0
     a46:	0f 90       	pop	r0
     a48:	0f 90       	pop	r0
     a4a:	0f 90       	pop	r0
     a4c:	38 c0       	rjmp	.+112    	; 0xabe <can_handle_message+0xf4>
			can_handle_joystick_message(msg);
			break;
		
		case MCP_SOLENOID_MESSAGE:
			//printf("Sol\n");
			can_handle_solenoid_message(msg);
     a4e:	e9 80       	ldd	r14, Y+1	; 0x01
     a50:	fa 80       	ldd	r15, Y+2	; 0x02
     a52:	0b 81       	ldd	r16, Y+3	; 0x03
     a54:	1c 81       	ldd	r17, Y+4	; 0x04
     a56:	2d 81       	ldd	r18, Y+5	; 0x05
     a58:	3e 81       	ldd	r19, Y+6	; 0x06
     a5a:	4f 81       	ldd	r20, Y+7	; 0x07
     a5c:	58 85       	ldd	r21, Y+8	; 0x08
     a5e:	69 85       	ldd	r22, Y+9	; 0x09
     a60:	7a 85       	ldd	r23, Y+10	; 0x0a
     a62:	8b 85       	ldd	r24, Y+11	; 0x0b
     a64:	7c de       	rcall	.-776    	; 0x75e <can_handle_solenoid_message>
			break;
     a66:	2b c0       	rjmp	.+86     	; 0xabe <can_handle_message+0xf4>
		
		case MCP_SLIDER_MESSAGE:
			printf("Slide\n");
     a68:	83 e1       	ldi	r24, 0x13	; 19
     a6a:	92 e0       	ldi	r25, 0x02	; 2
     a6c:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
			can_handle_slider_message(msg, max_encoder_value);
     a70:	88 e8       	ldi	r24, 0x88	; 136
     a72:	e8 2e       	mov	r14, r24
     a74:	89 83       	std	Y+1, r24	; 0x01
     a76:	1a 82       	std	Y+2, r1	; 0x02
     a78:	f1 2c       	mov	r15, r1
     a7a:	0b 81       	ldd	r16, Y+3	; 0x03
     a7c:	1c 81       	ldd	r17, Y+4	; 0x04
     a7e:	2d 81       	ldd	r18, Y+5	; 0x05
     a80:	3e 81       	ldd	r19, Y+6	; 0x06
     a82:	4f 81       	ldd	r20, Y+7	; 0x07
     a84:	58 85       	ldd	r21, Y+8	; 0x08
     a86:	69 85       	ldd	r22, Y+9	; 0x09
     a88:	7a 85       	ldd	r23, Y+10	; 0x0a
     a8a:	8b 85       	ldd	r24, Y+11	; 0x0b
     a8c:	93 de       	rcall	.-730    	; 0x7b4 <can_handle_slider_message>
			break;
     a8e:	17 c0       	rjmp	.+46     	; 0xabe <can_handle_message+0xf4>
			
		case MCP_PID_MESSAGE:
			//printf("Pid\n");
			printf("Message");
     a90:	89 e1       	ldi	r24, 0x19	; 25
     a92:	92 e0       	ldi	r25, 0x02	; 2
     a94:	9f 93       	push	r25
     a96:	8f 93       	push	r24
     a98:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <printf>
			can_handle_pid_message(msg);
     a9c:	89 e9       	ldi	r24, 0x99	; 153
     a9e:	e8 2e       	mov	r14, r24
     aa0:	89 83       	std	Y+1, r24	; 0x01
     aa2:	1a 82       	std	Y+2, r1	; 0x02
     aa4:	f1 2c       	mov	r15, r1
     aa6:	0b 81       	ldd	r16, Y+3	; 0x03
     aa8:	1c 81       	ldd	r17, Y+4	; 0x04
     aaa:	2d 81       	ldd	r18, Y+5	; 0x05
     aac:	3e 81       	ldd	r19, Y+6	; 0x06
     aae:	4f 81       	ldd	r20, Y+7	; 0x07
     ab0:	58 85       	ldd	r21, Y+8	; 0x08
     ab2:	69 85       	ldd	r22, Y+9	; 0x09
     ab4:	7a 85       	ldd	r23, Y+10	; 0x0a
     ab6:	8b 85       	ldd	r24, Y+11	; 0x0b
     ab8:	eb de       	rcall	.-554    	; 0x890 <can_handle_pid_message>
			break;
     aba:	0f 90       	pop	r0
     abc:	0f 90       	pop	r0
	}
}
     abe:	2b 96       	adiw	r28, 0x0b	; 11
     ac0:	0f b6       	in	r0, 0x3f	; 63
     ac2:	f8 94       	cli
     ac4:	de bf       	out	0x3e, r29	; 62
     ac6:	0f be       	out	0x3f, r0	; 63
     ac8:	cd bf       	out	0x3d, r28	; 61
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	1f 91       	pop	r17
     ad0:	0f 91       	pop	r16
     ad2:	ff 90       	pop	r15
     ad4:	ef 90       	pop	r14
     ad6:	df 90       	pop	r13
     ad8:	cf 90       	pop	r12
     ada:	08 95       	ret

00000adc <can_transmit_ir_value>:


void can_transmit_ir_value(uint8_t ir_value){
     adc:	cf 92       	push	r12
     ade:	ef 92       	push	r14
     ae0:	ff 92       	push	r15
     ae2:	0f 93       	push	r16
     ae4:	1f 93       	push	r17
     ae6:	cf 93       	push	r28
     ae8:	df 93       	push	r29
     aea:	cd b7       	in	r28, 0x3d	; 61
     aec:	de b7       	in	r29, 0x3e	; 62
     aee:	2c 97       	sbiw	r28, 0x0c	; 12
     af0:	0f b6       	in	r0, 0x3f	; 63
     af2:	f8 94       	cli
     af4:	de bf       	out	0x3e, r29	; 62
     af6:	0f be       	out	0x3f, r0	; 63
     af8:	cd bf       	out	0x3d, r28	; 61
     afa:	8c 87       	std	Y+12, r24	; 0x0c
	can_message msg;
	msg = new_can_message(MCP_IR_MESSAGE, 1, &ir_value);
     afc:	9e 01       	movw	r18, r28
     afe:	24 5f       	subi	r18, 0xF4	; 244
     b00:	3f 4f       	sbci	r19, 0xFF	; 255
     b02:	41 e0       	ldi	r20, 0x01	; 1
     b04:	66 e6       	ldi	r22, 0x66	; 102
     b06:	70 e0       	ldi	r23, 0x00	; 0
     b08:	ce 01       	movw	r24, r28
     b0a:	01 96       	adiw	r24, 0x01	; 1
     b0c:	83 dd       	rcall	.-1274   	; 0x614 <new_can_message>
	can_write(msg, MCP_TXB0CTRL);
     b0e:	0f 2e       	mov	r0, r31
     b10:	f0 e3       	ldi	r31, 0x30	; 48
     b12:	cf 2e       	mov	r12, r31
     b14:	f0 2d       	mov	r31, r0
     b16:	e9 80       	ldd	r14, Y+1	; 0x01
     b18:	fa 80       	ldd	r15, Y+2	; 0x02
     b1a:	0b 81       	ldd	r16, Y+3	; 0x03
     b1c:	1c 81       	ldd	r17, Y+4	; 0x04
     b1e:	2d 81       	ldd	r18, Y+5	; 0x05
     b20:	3e 81       	ldd	r19, Y+6	; 0x06
     b22:	4f 81       	ldd	r20, Y+7	; 0x07
     b24:	58 85       	ldd	r21, Y+8	; 0x08
     b26:	69 85       	ldd	r22, Y+9	; 0x09
     b28:	7a 85       	ldd	r23, Y+10	; 0x0a
     b2a:	8b 85       	ldd	r24, Y+11	; 0x0b
     b2c:	9f dd       	rcall	.-1218   	; 0x66c <can_write>
     b2e:	2c 96       	adiw	r28, 0x0c	; 12
     b30:	0f b6       	in	r0, 0x3f	; 63
     b32:	f8 94       	cli
     b34:	de bf       	out	0x3e, r29	; 62
     b36:	0f be       	out	0x3f, r0	; 63
     b38:	cd bf       	out	0x3d, r28	; 61
     b3a:	df 91       	pop	r29
     b3c:	cf 91       	pop	r28
     b3e:	1f 91       	pop	r17
     b40:	0f 91       	pop	r16
     b42:	ff 90       	pop	r15
     b44:	ef 90       	pop	r14
     b46:	cf 90       	pop	r12
     b48:	08 95       	ret

00000b4a <mcp_read>:
	SPI_transmit(MCP_READ_STATUS);
	uint8_t status = SPI_transmit(0x00);
	PORTB |= (1<< MCP_CS);
	
	return status;
}
     b4a:	cf 93       	push	r28
     b4c:	c8 2f       	mov	r28, r24
     b4e:	28 98       	cbi	0x05, 0	; 5
     b50:	83 e0       	ldi	r24, 0x03	; 3
     b52:	3c d0       	rcall	.+120    	; 0xbcc <SPI_transmit>
     b54:	8c 2f       	mov	r24, r28
     b56:	3a d0       	rcall	.+116    	; 0xbcc <SPI_transmit>
     b58:	80 e0       	ldi	r24, 0x00	; 0
     b5a:	38 d0       	rcall	.+112    	; 0xbcc <SPI_transmit>
     b5c:	28 9a       	sbi	0x05, 0	; 5
     b5e:	cf 91       	pop	r28
     b60:	08 95       	ret

00000b62 <mcp_write>:
     b62:	cf 93       	push	r28
     b64:	df 93       	push	r29
     b66:	d8 2f       	mov	r29, r24
     b68:	c6 2f       	mov	r28, r22
     b6a:	28 98       	cbi	0x05, 0	; 5
     b6c:	82 e0       	ldi	r24, 0x02	; 2
     b6e:	2e d0       	rcall	.+92     	; 0xbcc <SPI_transmit>
     b70:	8d 2f       	mov	r24, r29
     b72:	2c d0       	rcall	.+88     	; 0xbcc <SPI_transmit>
     b74:	8c 2f       	mov	r24, r28
     b76:	2a d0       	rcall	.+84     	; 0xbcc <SPI_transmit>
     b78:	28 9a       	sbi	0x05, 0	; 5
     b7a:	df 91       	pop	r29
     b7c:	cf 91       	pop	r28
     b7e:	08 95       	ret

00000b80 <mcp_reset>:
     b80:	28 98       	cbi	0x05, 0	; 5
     b82:	80 ec       	ldi	r24, 0xC0	; 192
     b84:	23 d0       	rcall	.+70     	; 0xbcc <SPI_transmit>
     b86:	28 9a       	sbi	0x05, 0	; 5
     b88:	08 95       	ret

00000b8a <mcp_bitModify>:
     b8a:	1f 93       	push	r17
     b8c:	cf 93       	push	r28
     b8e:	df 93       	push	r29
     b90:	18 2f       	mov	r17, r24
     b92:	d6 2f       	mov	r29, r22
     b94:	c4 2f       	mov	r28, r20
     b96:	28 98       	cbi	0x05, 0	; 5
     b98:	85 e0       	ldi	r24, 0x05	; 5
     b9a:	18 d0       	rcall	.+48     	; 0xbcc <SPI_transmit>
     b9c:	81 2f       	mov	r24, r17
     b9e:	16 d0       	rcall	.+44     	; 0xbcc <SPI_transmit>
     ba0:	8d 2f       	mov	r24, r29
     ba2:	14 d0       	rcall	.+40     	; 0xbcc <SPI_transmit>
     ba4:	8c 2f       	mov	r24, r28
     ba6:	12 d0       	rcall	.+36     	; 0xbcc <SPI_transmit>
     ba8:	28 9a       	sbi	0x05, 0	; 5
     baa:	df 91       	pop	r29
     bac:	cf 91       	pop	r28
     bae:	1f 91       	pop	r17
     bb0:	08 95       	ret

00000bb2 <mcp_requestToSend>:
     bb2:	28 98       	cbi	0x05, 0	; 5
     bb4:	0b d0       	rcall	.+22     	; 0xbcc <SPI_transmit>
     bb6:	28 9a       	sbi	0x05, 0	; 5
     bb8:	08 95       	ret

00000bba <mcp_init>:

void mcp_init(void){
	SPI_masterInit();
     bba:	02 d0       	rcall	.+4      	; 0xbc0 <SPI_masterInit>
	mcp_reset();
     bbc:	e1 cf       	rjmp	.-62     	; 0xb80 <mcp_reset>
     bbe:	08 95       	ret

00000bc0 <SPI_masterInit>:
#include <stdio.h>
#include <stdlib.h>

void SPI_masterInit(void){
	/* Set MOSI and SCK output, all others input */
	DDRB = (1 << PB2)|(1 << PB1)|(1 << PB0); //0 = SS, 3 = SI, 2 = SCK
     bc0:	87 e0       	ldi	r24, 0x07	; 7
     bc2:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //SO
     bc4:	23 98       	cbi	0x04, 3	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     bc6:	81 e5       	ldi	r24, 0x51	; 81
     bc8:	8c bd       	out	0x2c, r24	; 44
     bca:	08 95       	ret

00000bcc <SPI_transmit>:
}
uint8_t SPI_transmit(char cData){
	/* Start transmission */
	SPDR = cData;
     bcc:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     bce:	0d b4       	in	r0, 0x2d	; 45
     bd0:	07 fe       	sbrs	r0, 7
     bd2:	fd cf       	rjmp	.-6      	; 0xbce <SPI_transmit+0x2>
	return SPDR;
     bd4:	8e b5       	in	r24, 0x2e	; 46
     bd6:	08 95       	ret

00000bd8 <TWI_Master_Initialise>:
		{
			msg[ i ] = TWI_buf[ i ];
		}
	}
	return( TWI_statusReg.lastTransOK );
}
     bd8:	8c e0       	ldi	r24, 0x0C	; 12
     bda:	80 93 b8 00 	sts	0x00B8, r24
     bde:	8f ef       	ldi	r24, 0xFF	; 255
     be0:	80 93 bb 00 	sts	0x00BB, r24
     be4:	84 e0       	ldi	r24, 0x04	; 4
     be6:	80 93 bc 00 	sts	0x00BC, r24
     bea:	08 95       	ret

00000bec <TWI_Start_Transceiver_With_Data>:
     bec:	ec eb       	ldi	r30, 0xBC	; 188
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	20 81       	ld	r18, Z
     bf2:	20 fd       	sbrc	r18, 0
     bf4:	fd cf       	rjmp	.-6      	; 0xbf0 <TWI_Start_Transceiver_With_Data+0x4>
     bf6:	60 93 b4 02 	sts	0x02B4, r22
     bfa:	fc 01       	movw	r30, r24
     bfc:	20 81       	ld	r18, Z
     bfe:	20 93 b5 02 	sts	0x02B5, r18
     c02:	20 fd       	sbrc	r18, 0
     c04:	0c c0       	rjmp	.+24     	; 0xc1e <TWI_Start_Transceiver_With_Data+0x32>
     c06:	62 30       	cpi	r22, 0x02	; 2
     c08:	50 f0       	brcs	.+20     	; 0xc1e <TWI_Start_Transceiver_With_Data+0x32>
     c0a:	dc 01       	movw	r26, r24
     c0c:	11 96       	adiw	r26, 0x01	; 1
     c0e:	e6 eb       	ldi	r30, 0xB6	; 182
     c10:	f2 e0       	ldi	r31, 0x02	; 2
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	9d 91       	ld	r25, X+
     c16:	91 93       	st	Z+, r25
     c18:	8f 5f       	subi	r24, 0xFF	; 255
     c1a:	86 13       	cpse	r24, r22
     c1c:	fb cf       	rjmp	.-10     	; 0xc14 <TWI_Start_Transceiver_With_Data+0x28>
     c1e:	10 92 b3 02 	sts	0x02B3, r1
     c22:	88 ef       	ldi	r24, 0xF8	; 248
     c24:	80 93 06 02 	sts	0x0206, r24
     c28:	85 ea       	ldi	r24, 0xA5	; 165
     c2a:	80 93 bc 00 	sts	0x00BC, r24
     c2e:	08 95       	ret

00000c30 <__vector_39>:
This function is the Interrupt Service Routine (ISR), and called when the TWI interrupt is triggered;
that is whenever a TWI event has occurred. This function should not be called directly from the main
application.
****************************************************************************/
ISR(TWI_vect)
{
     c30:	1f 92       	push	r1
     c32:	0f 92       	push	r0
     c34:	0f b6       	in	r0, 0x3f	; 63
     c36:	0f 92       	push	r0
     c38:	11 24       	eor	r1, r1
     c3a:	0b b6       	in	r0, 0x3b	; 59
     c3c:	0f 92       	push	r0
     c3e:	2f 93       	push	r18
     c40:	3f 93       	push	r19
     c42:	8f 93       	push	r24
     c44:	9f 93       	push	r25
     c46:	af 93       	push	r26
     c48:	bf 93       	push	r27
     c4a:	ef 93       	push	r30
     c4c:	ff 93       	push	r31
	static unsigned char TWI_bufPtr;
	
	switch (TWSR)
     c4e:	80 91 b9 00 	lds	r24, 0x00B9
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	fc 01       	movw	r30, r24
     c56:	38 97       	sbiw	r30, 0x08	; 8
     c58:	e1 35       	cpi	r30, 0x51	; 81
     c5a:	f1 05       	cpc	r31, r1
     c5c:	08 f0       	brcs	.+2      	; 0xc60 <__vector_39+0x30>
     c5e:	56 c0       	rjmp	.+172    	; 0xd0c <__vector_39+0xdc>
     c60:	ee 58       	subi	r30, 0x8E	; 142
     c62:	ff 4f       	sbci	r31, 0xFF	; 255
     c64:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__tablejump2__>
	{
		case TWI_START:             // START has been transmitted
		case TWI_REP_START:         // Repeated START has been transmitted
		TWI_bufPtr = 0;                                     // Set buffer pointer to the TWI Address location
     c68:	10 92 b2 02 	sts	0x02B2, r1
		case TWI_MTX_ADR_ACK:       // SLA+W has been tramsmitted and ACK received
		case TWI_MTX_DATA_ACK:      // Data byte has been tramsmitted and ACK received
		if (TWI_bufPtr < TWI_msgSize)
     c6c:	e0 91 b2 02 	lds	r30, 0x02B2
     c70:	80 91 b4 02 	lds	r24, 0x02B4
     c74:	e8 17       	cp	r30, r24
     c76:	70 f4       	brcc	.+28     	; 0xc94 <__vector_39+0x64>
		{
			TWDR = TWI_buf[TWI_bufPtr++];
     c78:	81 e0       	ldi	r24, 0x01	; 1
     c7a:	8e 0f       	add	r24, r30
     c7c:	80 93 b2 02 	sts	0x02B2, r24
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	eb 54       	subi	r30, 0x4B	; 75
     c84:	fd 4f       	sbci	r31, 0xFD	; 253
     c86:	80 81       	ld	r24, Z
     c88:	80 93 bb 00 	sts	0x00BB, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     c8c:	85 e8       	ldi	r24, 0x85	; 133
     c8e:	80 93 bc 00 	sts	0x00BC, r24
     c92:	43 c0       	rjmp	.+134    	; 0xd1a <__vector_39+0xea>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to send byte
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           //
			(0<<TWWC);                                 //
		}else                    // Send STOP after last byte
		{
			TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     c94:	80 91 b3 02 	lds	r24, 0x02B3
     c98:	81 60       	ori	r24, 0x01	; 1
     c9a:	80 93 b3 02 	sts	0x02B3, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     c9e:	84 e9       	ldi	r24, 0x94	; 148
     ca0:	80 93 bc 00 	sts	0x00BC, r24
     ca4:	3a c0       	rjmp	.+116    	; 0xd1a <__vector_39+0xea>
			(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_ACK:      // Data byte has been received and ACK tramsmitted
		TWI_buf[TWI_bufPtr++] = TWDR;
     ca6:	e0 91 b2 02 	lds	r30, 0x02B2
     caa:	81 e0       	ldi	r24, 0x01	; 1
     cac:	8e 0f       	add	r24, r30
     cae:	80 93 b2 02 	sts	0x02B2, r24
     cb2:	80 91 bb 00 	lds	r24, 0x00BB
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	eb 54       	subi	r30, 0x4B	; 75
     cba:	fd 4f       	sbci	r31, 0xFD	; 253
     cbc:	80 83       	st	Z, r24
		case TWI_MRX_ADR_ACK:       // SLA+R has been tramsmitted and ACK received
		if (TWI_bufPtr < (TWI_msgSize-1) )                  // Detect the last byte to NACK it.
     cbe:	20 91 b2 02 	lds	r18, 0x02B2
     cc2:	30 e0       	ldi	r19, 0x00	; 0
     cc4:	80 91 b4 02 	lds	r24, 0x02B4
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	01 97       	sbiw	r24, 0x01	; 1
     ccc:	28 17       	cp	r18, r24
     cce:	39 07       	cpc	r19, r25
     cd0:	24 f4       	brge	.+8      	; 0xcda <__vector_39+0xaa>
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     cd2:	85 ec       	ldi	r24, 0xC5	; 197
     cd4:	80 93 bc 00 	sts	0x00BC, r24
     cd8:	20 c0       	rjmp	.+64     	; 0xd1a <__vector_39+0xea>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to read next byte
			(1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send ACK after reception
			(0<<TWWC);                                 //
		}else                    // Send NACK after next reception
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     cda:	85 e8       	ldi	r24, 0x85	; 133
     cdc:	80 93 bc 00 	sts	0x00BC, r24
     ce0:	1c c0       	rjmp	.+56     	; 0xd1a <__vector_39+0xea>
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send NACK after reception
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_NACK:     // Data byte has been received and NACK tramsmitted
		TWI_buf[TWI_bufPtr] = TWDR;
     ce2:	80 91 bb 00 	lds	r24, 0x00BB
     ce6:	e0 91 b2 02 	lds	r30, 0x02B2
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	eb 54       	subi	r30, 0x4B	; 75
     cee:	fd 4f       	sbci	r31, 0xFD	; 253
     cf0:	80 83       	st	Z, r24
		TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     cf2:	80 91 b3 02 	lds	r24, 0x02B3
     cf6:	81 60       	ori	r24, 0x01	; 1
     cf8:	80 93 b3 02 	sts	0x02B3, r24
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     cfc:	84 e9       	ldi	r24, 0x94	; 148
     cfe:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(1<<TWINT)|                      // Disable TWI Interrupt and clear the flag
		(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
		(0<<TWWC);                                 //
		break;
     d02:	0b c0       	rjmp	.+22     	; 0xd1a <__vector_39+0xea>
		case TWI_ARB_LOST:          // Arbitration lost
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     d04:	85 ea       	ldi	r24, 0xA5	; 165
     d06:	80 93 bc 00 	sts	0x00BC, r24
		(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag
		(0<<TWEA)|(1<<TWSTA)|(0<<TWSTO)|           // Initiate a (RE)START condition.
		(0<<TWWC);                                 //
		break;
     d0a:	07 c0       	rjmp	.+14     	; 0xd1a <__vector_39+0xea>
		case TWI_MRX_ADR_NACK:      // SLA+R has been tramsmitted and NACK received
		case TWI_MTX_DATA_NACK:     // Data byte has been tramsmitted and NACK received
		//    case TWI_NO_STATE              // No relevant state information available; TWINT = ?0?
		case TWI_BUS_ERROR:         // Bus error due to an illegal START or STOP condition
		default:
		TWI_state = TWSR;                                 // Store TWSR and automatically sets clears noErrors bit.
     d0c:	80 91 b9 00 	lds	r24, 0x00B9
     d10:	80 93 06 02 	sts	0x0206, r24
		// Reset TWI Interface
		TWCR = (1<<TWEN)|                                 // Enable TWI-interface and release TWI pins
     d14:	84 e0       	ldi	r24, 0x04	; 4
     d16:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(0<<TWINT)|                      // Disable Interupt
		(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // No Signal requests
		(0<<TWWC);                                 //
	}
     d1a:	ff 91       	pop	r31
     d1c:	ef 91       	pop	r30
     d1e:	bf 91       	pop	r27
     d20:	af 91       	pop	r26
     d22:	9f 91       	pop	r25
     d24:	8f 91       	pop	r24
     d26:	3f 91       	pop	r19
     d28:	2f 91       	pop	r18
     d2a:	0f 90       	pop	r0
     d2c:	0b be       	out	0x3b, r0	; 59
     d2e:	0f 90       	pop	r0
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	0f 90       	pop	r0
     d34:	1f 90       	pop	r1
     d36:	18 95       	reti

00000d38 <USART_Init>:
	_delay_ms(100);
}
void USART_Init(unsigned int ubrr)
{
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     d38:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     d3c:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
     d40:	e1 ec       	ldi	r30, 0xC1	; 193
     d42:	f0 e0       	ldi	r31, 0x00	; 0
     d44:	80 81       	ld	r24, Z
     d46:	88 61       	ori	r24, 0x18	; 24
     d48:	80 83       	st	Z, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C |= (3<<UCSZ00);
     d4a:	e2 ec       	ldi	r30, 0xC2	; 194
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	86 60       	ori	r24, 0x06	; 6
     d52:	80 83       	st	Z, r24
     d54:	08 95       	ret

00000d56 <USART_Transmit>:
}
void USART_Transmit(unsigned char data){
	/*Wait for empty transmit buffer*/
	while( !(UCSR0A & (1<<UDRE0)) );
     d56:	e0 ec       	ldi	r30, 0xC0	; 192
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	90 81       	ld	r25, Z
     d5c:	95 ff       	sbrs	r25, 5
     d5e:	fd cf       	rjmp	.-6      	; 0xd5a <USART_Transmit+0x4>
	
	/*Put data into buffer, sends the data*/
	UDR0 = data;
     d60:	80 93 c6 00 	sts	0x00C6, r24
     d64:	08 95       	ret

00000d66 <USART_Receive>:
}
unsigned char USART_Receive(void){
	/*Wait for data to be received*/
	while( !(UCSR0A & (1<<RXC0)) );
     d66:	e0 ec       	ldi	r30, 0xC0	; 192
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	80 81       	ld	r24, Z
     d6c:	88 23       	and	r24, r24
     d6e:	ec f7       	brge	.-6      	; 0xd6a <USART_Receive+0x4>
	
	
	/*Get and return received data from buffer*/
	return UDR0;
     d70:	80 91 c6 00 	lds	r24, 0x00C6
     d74:	08 95       	ret

00000d76 <adc_init>:
#include <avr/io.h>
#include <stdint.h>
void adc_init(void){
	ADCSRA	|= (1 << ADEN) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
     d76:	ea e7       	ldi	r30, 0x7A	; 122
     d78:	f0 e0       	ldi	r31, 0x00	; 0
     d7a:	80 81       	ld	r24, Z
     d7c:	87 68       	ori	r24, 0x87	; 135
     d7e:	80 83       	st	Z, r24
	ADMUX	|= (1<<REFS0);
     d80:	ec e7       	ldi	r30, 0x7C	; 124
     d82:	f0 e0       	ldi	r31, 0x00	; 0
     d84:	80 81       	ld	r24, Z
     d86:	80 64       	ori	r24, 0x40	; 64
     d88:	80 83       	st	Z, r24
	ADMUX	&= ~(1<<REFS1);
     d8a:	80 81       	ld	r24, Z
     d8c:	8f 77       	andi	r24, 0x7F	; 127
     d8e:	80 83       	st	Z, r24
     d90:	08 95       	ret

00000d92 <adc_read>:
}

uint16_t adc_read(uint8_t channel){
	ADMUX	|= ((1<<channel) & 0x03);
     d92:	ec e7       	ldi	r30, 0x7C	; 124
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	90 81       	ld	r25, Z
     d98:	21 e0       	ldi	r18, 0x01	; 1
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <adc_read+0x10>
     d9e:	22 0f       	add	r18, r18
     da0:	33 1f       	adc	r19, r19
     da2:	8a 95       	dec	r24
     da4:	e2 f7       	brpl	.-8      	; 0xd9e <adc_read+0xc>
     da6:	23 70       	andi	r18, 0x03	; 3
     da8:	92 2b       	or	r25, r18
     daa:	90 83       	st	Z, r25
	ADCSRA	|= (1 << ADSC);
     dac:	ea e7       	ldi	r30, 0x7A	; 122
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	80 81       	ld	r24, Z
     db2:	80 64       	ori	r24, 0x40	; 64
     db4:	80 83       	st	Z, r24

	while((ADCSRA & (1<<ADSC))){ ; }
     db6:	80 81       	ld	r24, Z
     db8:	86 fd       	sbrc	r24, 6
     dba:	fd cf       	rjmp	.-6      	; 0xdb6 <adc_read+0x24>

	return ADC;
     dbc:	80 91 78 00 	lds	r24, 0x0078
     dc0:	90 91 79 00 	lds	r25, 0x0079
     dc4:	08 95       	ret

00000dc6 <dac_initialize>:
#include <stdint.h>

#define MAX520_TWI_ADDR_BASE 0b01010000
static uint8_t twi_address = 0x00;

void dac_initialize(uint8_t MAX520_addr){
     dc6:	cf 93       	push	r28
     dc8:	c8 2f       	mov	r28, r24
	TWI_Master_Initialise();
     dca:	06 df       	rcall	.-500    	; 0xbd8 <TWI_Master_Initialise>
	sei();
     dcc:	78 94       	sei
	
	twi_address = MAX520_addr;
     dce:	c0 93 b9 02 	sts	0x02B9, r28
}	
     dd2:	cf 91       	pop	r28
     dd4:	08 95       	ret

00000dd6 <dac_write>:


void dac_write(uint8_t channel, uint8_t val){
     dd6:	cf 93       	push	r28
     dd8:	df 93       	push	r29
     dda:	00 d0       	rcall	.+0      	; 0xddc <dac_write+0x6>
     ddc:	cd b7       	in	r28, 0x3d	; 61
     dde:	de b7       	in	r29, 0x3e	; 62
	uint8_t message[3] = {	MAX520_TWI_ADDR_BASE | ((twi_address & 0x07) << 1), //Set address
     de0:	90 91 b9 02 	lds	r25, 0x02B9
     de4:	97 70       	andi	r25, 0x07	; 7
     de6:	99 0f       	add	r25, r25
     de8:	90 65       	ori	r25, 0x50	; 80
     dea:	99 83       	std	Y+1, r25	; 0x01
     dec:	87 70       	andi	r24, 0x07	; 7
     dee:	8a 83       	std	Y+2, r24	; 0x02
     df0:	6b 83       	std	Y+3, r22	; 0x03
							channel & 0x07, //Channel no higher than 0x07
							val		};
							
	TWI_Start_Transceiver_With_Data(message, 3);
     df2:	63 e0       	ldi	r22, 0x03	; 3
     df4:	ce 01       	movw	r24, r28
     df6:	01 96       	adiw	r24, 0x01	; 1
     df8:	f9 de       	rcall	.-526    	; 0xbec <TWI_Start_Transceiver_With_Data>
     dfa:	0f 90       	pop	r0
     dfc:	0f 90       	pop	r0
     dfe:	0f 90       	pop	r0
     e00:	df 91       	pop	r29
     e02:	cf 91       	pop	r28
     e04:	08 95       	ret

00000e06 <motor_encoder_reset>:
     e06:	8e 98       	cbi	0x11, 6	; 17
     e08:	8a e6       	ldi	r24, 0x6A	; 106
     e0a:	8a 95       	dec	r24
     e0c:	f1 f7       	brne	.-4      	; 0xe0a <motor_encoder_reset+0x4>
     e0e:	00 c0       	rjmp	.+0      	; 0xe10 <motor_encoder_reset+0xa>
     e10:	8e 9a       	sbi	0x11, 6	; 17
     e12:	08 95       	ret

00000e14 <motor_init>:
     e14:	80 b3       	in	r24, 0x10	; 16
     e16:	88 6f       	ori	r24, 0xF8	; 248
     e18:	80 bb       	out	0x10, r24	; 16
     e1a:	10 92 07 01 	sts	0x0107, r1
     e1e:	8c 9a       	sbi	0x11, 4	; 17
     e20:	f2 cf       	rjmp	.-28     	; 0xe06 <motor_encoder_reset>
     e22:	08 95       	ret

00000e24 <motor_direction>:
     e24:	89 2b       	or	r24, r25
     e26:	11 f0       	breq	.+4      	; 0xe2c <motor_direction+0x8>
     e28:	8b 98       	cbi	0x11, 3	; 17
     e2a:	08 95       	ret
     e2c:	8b 9a       	sbi	0x11, 3	; 17
     e2e:	08 95       	ret

00000e30 <motor_speed>:
     e30:	cf 93       	push	r28
     e32:	df 93       	push	r29
     e34:	ec 01       	movw	r28, r24
     e36:	18 16       	cp	r1, r24
     e38:	19 06       	cpc	r1, r25
     e3a:	24 f4       	brge	.+8      	; 0xe44 <motor_speed+0x14>
     e3c:	80 e0       	ldi	r24, 0x00	; 0
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	f1 df       	rcall	.-30     	; 0xe24 <motor_direction>
     e42:	08 c0       	rjmp	.+16     	; 0xe54 <motor_speed+0x24>
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	ed df       	rcall	.-38     	; 0xe24 <motor_direction>
     e4a:	dd 23       	and	r29, r29
     e4c:	1c f4       	brge	.+6      	; 0xe54 <motor_speed+0x24>
     e4e:	d1 95       	neg	r29
     e50:	c1 95       	neg	r28
     e52:	d1 09       	sbc	r29, r1
     e54:	be 01       	movw	r22, r28
     e56:	cf 3f       	cpi	r28, 0xFF	; 255
     e58:	d1 05       	cpc	r29, r1
     e5a:	19 f0       	breq	.+6      	; 0xe62 <motor_speed+0x32>
     e5c:	14 f0       	brlt	.+4      	; 0xe62 <motor_speed+0x32>
     e5e:	6f ef       	ldi	r22, 0xFF	; 255
     e60:	70 e0       	ldi	r23, 0x00	; 0
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	b8 df       	rcall	.-144    	; 0xdd6 <dac_write>
     e66:	df 91       	pop	r29
     e68:	cf 91       	pop	r28
     e6a:	08 95       	ret

00000e6c <reverse>:
	_delay_ms(500);

}

uint8_t reverse(uint8_t x){
	x = (((x & 0xaa) >> 1) | ((x & 0x55) << 1));
     e6c:	28 2f       	mov	r18, r24
     e6e:	25 75       	andi	r18, 0x55	; 85
     e70:	22 0f       	add	r18, r18
     e72:	98 2f       	mov	r25, r24
     e74:	9a 7a       	andi	r25, 0xAA	; 170
     e76:	96 95       	lsr	r25
     e78:	92 2b       	or	r25, r18
	x = (((x & 0xcc) >> 2) | ((x & 0x33) << 2));
     e7a:	29 2f       	mov	r18, r25
     e7c:	23 73       	andi	r18, 0x33	; 51
     e7e:	22 0f       	add	r18, r18
     e80:	22 0f       	add	r18, r18
     e82:	89 2f       	mov	r24, r25
     e84:	8c 7c       	andi	r24, 0xCC	; 204
     e86:	86 95       	lsr	r24
     e88:	86 95       	lsr	r24
     e8a:	82 2b       	or	r24, r18
	x = (((x & 0xf0) >> 4) | ((x & 0x0f) << 4));
	return x;
}
     e8c:	82 95       	swap	r24
     e8e:	08 95       	ret

00000e90 <motor_encoder_read>:
	PORTF |= (1 << MOTOR_EN);
	motor_encoder_reset();
	
}

int16_t motor_encoder_read(void){
     e90:	cf 93       	push	r28
     e92:	df 93       	push	r29
	uint16_t data;
	
	//Enable output and send high byte on PORT K
	PORTF &=	~((1 << MOTOR_OE) |
     e94:	81 b3       	in	r24, 0x11	; 17
     e96:	8f 75       	andi	r24, 0x5F	; 95
     e98:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e9a:	2a e6       	ldi	r18, 0x6A	; 106
     e9c:	2a 95       	dec	r18
     e9e:	f1 f7       	brne	.-4      	; 0xe9c <motor_encoder_read+0xc>
     ea0:	00 c0       	rjmp	.+0      	; 0xea2 <motor_encoder_read+0x12>
			(1 << MOTOR_SEL));
	_delay_us(20);
	data = (reverse(PINK) << 8);
     ea2:	80 91 06 01 	lds	r24, 0x0106
     ea6:	e2 df       	rcall	.-60     	; 0xe6c <reverse>
     ea8:	c8 2f       	mov	r28, r24
     eaa:	d0 e0       	ldi	r29, 0x00	; 0
     eac:	dc 2f       	mov	r29, r28
     eae:	cc 27       	eor	r28, r28
	
	//Send low byte on PORT K
	PORTF |= (1 << MOTOR_SEL);
     eb0:	8d 9a       	sbi	0x11, 5	; 17
     eb2:	3a e6       	ldi	r19, 0x6A	; 106
     eb4:	3a 95       	dec	r19
     eb6:	f1 f7       	brne	.-4      	; 0xeb4 <motor_encoder_read+0x24>
     eb8:	00 c0       	rjmp	.+0      	; 0xeba <motor_encoder_read+0x2a>
	_delay_us(20);
	data += reverse(PINK);
     eba:	80 91 06 01 	lds	r24, 0x0106
     ebe:	d6 df       	rcall	.-84     	; 0xe6c <reverse>
	
	//Disable output
	PORTF |= (1 << MOTOR_OE);
     ec0:	8f 9a       	sbi	0x11, 7	; 17
	
	return data;
}
     ec2:	9e 01       	movw	r18, r28
     ec4:	28 0f       	add	r18, r24
     ec6:	31 1d       	adc	r19, r1
     ec8:	c9 01       	movw	r24, r18
     eca:	df 91       	pop	r29
     ecc:	cf 91       	pop	r28
     ece:	08 95       	ret

00000ed0 <pwm_init>:
	
	ICR3 = 312;
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     ed0:	6b 9a       	sbi	0x0d, 3	; 13
     ed2:	e0 e9       	ldi	r30, 0x90	; 144
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	80 81       	ld	r24, Z
     ed8:	8e 7b       	andi	r24, 0xBE	; 190
     eda:	80 83       	st	Z, r24
     edc:	80 81       	ld	r24, Z
     ede:	82 68       	ori	r24, 0x82	; 130
     ee0:	80 83       	st	Z, r24
     ee2:	e1 e9       	ldi	r30, 0x91	; 145
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	80 81       	ld	r24, Z
     ee8:	8d 61       	ori	r24, 0x1D	; 29
     eea:	80 83       	st	Z, r24
     eec:	80 81       	ld	r24, Z
     eee:	8d 7f       	andi	r24, 0xFD	; 253
     ef0:	80 83       	st	Z, r24
     ef2:	88 e3       	ldi	r24, 0x38	; 56
     ef4:	91 e0       	ldi	r25, 0x01	; 1
     ef6:	90 93 97 00 	sts	0x0097, r25
     efa:	80 93 96 00 	sts	0x0096, r24
     efe:	08 95       	ret

00000f00 <pwm_set_servo>:
}

void pwm_set_servo(unsigned int val){
	//Step length between 18 and 19.
	val = (val*19)/255 + servo_min;
     f00:	43 e1       	ldi	r20, 0x13	; 19
     f02:	48 9f       	mul	r20, r24
     f04:	90 01       	movw	r18, r0
     f06:	49 9f       	mul	r20, r25
     f08:	30 0d       	add	r19, r0
     f0a:	11 24       	eor	r1, r1
     f0c:	a1 e8       	ldi	r26, 0x81	; 129
     f0e:	b0 e8       	ldi	r27, 0x80	; 128
     f10:	ef d7       	rcall	.+4062   	; 0x1ef0 <__umulhisi3>
     f12:	88 0f       	add	r24, r24
     f14:	89 2f       	mov	r24, r25
     f16:	88 1f       	adc	r24, r24
     f18:	99 0b       	sbc	r25, r25
     f1a:	91 95       	neg	r25
	
	//Fixes seizures in the servo
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
     f1c:	9c 01       	movw	r18, r24
     f1e:	2b 50       	subi	r18, 0x0B	; 11
     f20:	31 09       	sbc	r19, r1
     f22:	23 30       	cpi	r18, 0x03	; 3
     f24:	31 05       	cpc	r19, r1
     f26:	38 f4       	brcc	.+14     	; 0xf36 <pwm_set_servo+0x36>
	
	ICR3 = 312;
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     f28:	89 e1       	ldi	r24, 0x19	; 25
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	90 93 99 00 	sts	0x0099, r25
     f30:	80 93 98 00 	sts	0x0098, r24
     f34:	08 95       	ret
	//Fixes seizures in the servo
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
		pwm_set_value(servo_mid);
	}
	
	else if((val >= servo_min) && (val <= servo_max)){
     f36:	89 31       	cpi	r24, 0x19	; 25
     f38:	91 05       	cpc	r25, r1
     f3a:	30 f4       	brcc	.+12     	; 0xf48 <pwm_set_servo+0x48>
	OCR3A = val;
}

void pwm_set_servo(unsigned int val){
	//Step length between 18 and 19.
	val = (val*19)/255 + servo_min;
     f3c:	0d 96       	adiw	r24, 0x0d	; 13
	
	ICR3 = 312;
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     f3e:	90 93 99 00 	sts	0x0099, r25
     f42:	80 93 98 00 	sts	0x0098, r24
     f46:	08 95       	ret
     f48:	89 e1       	ldi	r24, 0x19	; 25
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	90 93 99 00 	sts	0x0099, r25
     f50:	80 93 98 00 	sts	0x0098, r24
     f54:	08 95       	ret

00000f56 <ir_init>:
#include "ir.h"
#include "../Communication/can/can.h"
#include "../Converters/adc/adc.h"
ir_state ir;

void ir_init(void){
     f56:	cf 93       	push	r28
     f58:	df 93       	push	r29
     f5a:	00 d0       	rcall	.+0      	; 0xf5c <ir_init+0x6>
     f5c:	1f 92       	push	r1
     f5e:	1f 92       	push	r1
     f60:	cd b7       	in	r28, 0x3d	; 61
     f62:	de b7       	in	r29, 0x3e	; 62
	ir = new_ir_state(0, 0, 0, 0);
     f64:	19 82       	std	Y+1, r1	; 0x01
     f66:	1b 82       	std	Y+3, r1	; 0x03
     f68:	1a 82       	std	Y+2, r1	; 0x02
     f6a:	1c 82       	std	Y+4, r1	; 0x04
     f6c:	85 e0       	ldi	r24, 0x05	; 5
     f6e:	fe 01       	movw	r30, r28
     f70:	31 96       	adiw	r30, 0x01	; 1
     f72:	a2 ed       	ldi	r26, 0xD2	; 210
     f74:	b2 e0       	ldi	r27, 0x02	; 2
     f76:	01 90       	ld	r0, Z+
     f78:	0d 92       	st	X+, r0
     f7a:	8a 95       	dec	r24
     f7c:	e1 f7       	brne	.-8      	; 0xf76 <ir_init+0x20>
}
     f7e:	0f 90       	pop	r0
     f80:	0f 90       	pop	r0
     f82:	0f 90       	pop	r0
     f84:	0f 90       	pop	r0
     f86:	0f 90       	pop	r0
     f88:	df 91       	pop	r29
     f8a:	cf 91       	pop	r28
     f8c:	08 95       	ret

00000f8e <ir_beam_blocked>:

//Calculates the mean of the IR
//over 20 samples. Ensures no double points
//for bounces.
uint8_t ir_beam_blocked(uint8_t ir_value){
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
	ir.sum += ir_value;
     f92:	e3 ed       	ldi	r30, 0xD3	; 211
     f94:	f2 e0       	ldi	r31, 0x02	; 2
     f96:	20 81       	ld	r18, Z
     f98:	31 81       	ldd	r19, Z+1	; 0x01
     f9a:	28 0f       	add	r18, r24
     f9c:	31 1d       	adc	r19, r1
     f9e:	31 83       	std	Z+1, r19	; 0x01
     fa0:	20 83       	st	Z, r18
	(ir.samples)++;
     fa2:	e2 ed       	ldi	r30, 0xD2	; 210
     fa4:	f2 e0       	ldi	r31, 0x02	; 2
     fa6:	80 81       	ld	r24, Z
     fa8:	8f 5f       	subi	r24, 0xFF	; 255
     faa:	80 83       	st	Z, r24
	
	//Check state every 20 measures by calculating mean
	if(ir.samples == 20){
     fac:	84 31       	cpi	r24, 0x14	; 20
     fae:	d1 f4       	brne	.+52     	; 0xfe4 <ir_beam_blocked+0x56>
		ir.sum = ir.sum/ir.samples;
     fb0:	ad ec       	ldi	r26, 0xCD	; 205
     fb2:	bc ec       	ldi	r27, 0xCC	; 204
     fb4:	9d d7       	rcall	.+3898   	; 0x1ef0 <__umulhisi3>
     fb6:	92 95       	swap	r25
     fb8:	82 95       	swap	r24
     fba:	8f 70       	andi	r24, 0x0F	; 15
     fbc:	89 27       	eor	r24, r25
     fbe:	9f 70       	andi	r25, 0x0F	; 15
     fc0:	89 27       	eor	r24, r25
     fc2:	90 93 d4 02 	sts	0x02D4, r25
     fc6:	80 93 d3 02 	sts	0x02D3, r24
		ir.samples = 1;
     fca:	21 e0       	ldi	r18, 0x01	; 1
     fcc:	20 93 d2 02 	sts	0x02D2, r18
		
		//IR beam blocked for more than 20 samples
		if(ir.sum < 50){
     fd0:	c2 97       	sbiw	r24, 0x32	; 50
     fd2:	20 f4       	brcc	.+8      	; 0xfdc <ir_beam_blocked+0x4e>
			ir.new_state = 1;
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	80 93 d6 02 	sts	0x02D6, r24
     fda:	04 c0       	rjmp	.+8      	; 0xfe4 <ir_beam_blocked+0x56>
		}
		
		else{
			ir.beam_blocked = 0;
     fdc:	10 92 d5 02 	sts	0x02D5, r1
			ir.new_state = 0;
     fe0:	10 92 d6 02 	sts	0x02D6, r1
		}
	}

	//Blocked now, but not blocked the last 20 samples
	if(!ir.beam_blocked && ir.new_state){
     fe4:	80 91 d5 02 	lds	r24, 0x02D5
     fe8:	81 11       	cpse	r24, r1
     fea:	14 c0       	rjmp	.+40     	; 0x1014 <ir_beam_blocked+0x86>
     fec:	80 91 d6 02 	lds	r24, 0x02D6
     ff0:	88 23       	and	r24, r24
     ff2:	81 f0       	breq	.+32     	; 0x1014 <ir_beam_blocked+0x86>
		ir.beam_blocked = 1;
     ff4:	c5 ed       	ldi	r28, 0xD5	; 213
     ff6:	d2 e0       	ldi	r29, 0x02	; 2
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	88 83       	st	Y, r24
		ir.new_state = 1;
     ffc:	80 93 d6 02 	sts	0x02D6, r24
		printf("Game lost.");
    1000:	81 e2       	ldi	r24, 0x21	; 33
    1002:	92 e0       	ldi	r25, 0x02	; 2
    1004:	9f 93       	push	r25
    1006:	8f 93       	push	r24
    1008:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <printf>
		can_transmit_ir_value(ir.beam_blocked);
    100c:	88 81       	ld	r24, Y
    100e:	66 dd       	rcall	.-1332   	; 0xadc <can_transmit_ir_value>
    1010:	0f 90       	pop	r0
    1012:	0f 90       	pop	r0
		
	}
	return 0;

}
    1014:	80 e0       	ldi	r24, 0x00	; 0
    1016:	df 91       	pop	r29
    1018:	cf 91       	pop	r28
    101a:	08 95       	ret

0000101c <main>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include <stdio.h>

int main(void)
{
    101c:	cf 93       	push	r28
    101e:	df 93       	push	r29
    1020:	cd b7       	in	r28, 0x3d	; 61
    1022:	de b7       	in	r29, 0x3e	; 62
    1024:	2b 97       	sbiw	r28, 0x0b	; 11
    1026:	0f b6       	in	r0, 0x3f	; 63
    1028:	f8 94       	cli
    102a:	de bf       	out	0x3e, r29	; 62
    102c:	0f be       	out	0x3f, r0	; 63
    102e:	cd bf       	out	0x3d, r28	; 61
	sei();
    1030:	78 94       	sei
	USART_Init(MYUBRR);
    1032:	87 e6       	ldi	r24, 0x67	; 103
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	80 de       	rcall	.-768    	; 0xd38 <USART_Init>
	fdevopen((int (*)(char,  struct __file *))USART_Transmit, (int (*)(struct __file *))USART_Receive);
    1038:	63 eb       	ldi	r22, 0xB3	; 179
    103a:	76 e0       	ldi	r23, 0x06	; 6
    103c:	8b ea       	ldi	r24, 0xAB	; 171
    103e:	96 e0       	ldi	r25, 0x06	; 6
    1040:	0e 94 75 10 	call	0x20ea	; 0x20ea <fdevopen>
	printf("UART setup done\n");
    1044:	8c e2       	ldi	r24, 0x2C	; 44
    1046:	92 e0       	ldi	r25, 0x02	; 2
    1048:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
	can_init();
    104c:	6c da       	rcall	.-2856   	; 0x526 <can_init>
	printf("CAN setup done\n");
    104e:	8c e3       	ldi	r24, 0x3C	; 60
    1050:	92 e0       	ldi	r25, 0x02	; 2
    1052:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
	pwm_init();
    1056:	3c df       	rcall	.-392    	; 0xed0 <pwm_init>
	printf("PWM setup done\n");
    1058:	8b e4       	ldi	r24, 0x4B	; 75
    105a:	92 e0       	ldi	r25, 0x02	; 2
    105c:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
	adc_init();
    1060:	8a de       	rcall	.-748    	; 0xd76 <adc_init>
	printf("ADC setup done\n");
    1062:	8a e5       	ldi	r24, 0x5A	; 90
    1064:	92 e0       	ldi	r25, 0x02	; 2
    1066:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
	motor_init();
    106a:	d4 de       	rcall	.-600    	; 0xe14 <motor_init>
	printf("Motor setup done\n");
    106c:	89 e6       	ldi	r24, 0x69	; 105
    106e:	92 e0       	ldi	r25, 0x02	; 2
    1070:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
	dac_initialize(0b111);
    1074:	87 e0       	ldi	r24, 0x07	; 7
    1076:	a7 de       	rcall	.-690    	; 0xdc6 <dac_initialize>
	printf("DAC setup done\n");
    1078:	8a e7       	ldi	r24, 0x7A	; 122
    107a:	92 e0       	ldi	r25, 0x02	; 2
    107c:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
	solenoid_init();
    1080:	53 d0       	rcall	.+166    	; 0x1128 <solenoid_init>
	printf("Solenoid setup done\n");
    1082:	89 e8       	ldi	r24, 0x89	; 137
    1084:	92 e0       	ldi	r25, 0x02	; 2
    1086:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
	printf("Initialization done\n");
    108a:	8d e9       	ldi	r24, 0x9D	; 157
    108c:	92 e0       	ldi	r25, 0x02	; 2
    108e:	0e 94 02 11 	call	0x2204	; 0x2204 <puts>
	ir_init();
    1092:	61 df       	rcall	.-318    	; 0xf56 <ir_init>
	solenoid_init();
    1094:	49 d0       	rcall	.+146    	; 0x1128 <solenoid_init>
	pid_init(-0.7, -1.5, -0.0);
    1096:	e1 2c       	mov	r14, r1
    1098:	f1 2c       	mov	r15, r1
    109a:	00 e0       	ldi	r16, 0x00	; 0
    109c:	10 e8       	ldi	r17, 0x80	; 128
    109e:	20 e0       	ldi	r18, 0x00	; 0
    10a0:	30 e0       	ldi	r19, 0x00	; 0
    10a2:	40 ec       	ldi	r20, 0xC0	; 192
    10a4:	5f eb       	ldi	r21, 0xBF	; 191
    10a6:	63 e3       	ldi	r22, 0x33	; 51
    10a8:	73 e3       	ldi	r23, 0x33	; 51
    10aa:	83 e3       	ldi	r24, 0x33	; 51
    10ac:	9f eb       	ldi	r25, 0xBF	; 191
    10ae:	4e d9       	rcall	.-3428   	; 0x34c <pid_init>
	DDRF |= ~(1 << PF0);
    10b0:	80 b3       	in	r24, 0x10	; 16
    10b2:	8e 6f       	ori	r24, 0xFE	; 254
    10b4:	80 bb       	out	0x10, r24	; 16
	can_message msg = {0};
    10b6:	fe 01       	movw	r30, r28
    10b8:	31 96       	adiw	r30, 0x01	; 1
    10ba:	8b e0       	ldi	r24, 0x0B	; 11
    10bc:	df 01       	movw	r26, r30
    10be:	1d 92       	st	X+, r1
    10c0:	8a 95       	dec	r24
    10c2:	e9 f7       	brne	.-6      	; 0x10be <main+0xa2>
	uint16_t max_encoder_value = pid_encoder_max_value();
    10c4:	fc d9       	rcall	.-3080   	; 0x4be <pid_encoder_max_value>
    10c6:	4c 01       	movw	r8, r24
		bufferSelect = can_pollInterrupt();
		if(bufferSelect){
			msg = can_read(bufferSelect);
		}
		can_handle_message(msg, max_encoder_value);
		printf("%d\n", adc_read(0));
    10c8:	0f 2e       	mov	r0, r31
    10ca:	fb e0       	ldi	r31, 0x0B	; 11
    10cc:	af 2e       	mov	r10, r31
    10ce:	f2 e0       	ldi	r31, 0x02	; 2
    10d0:	bf 2e       	mov	r11, r31
    10d2:	f0 2d       	mov	r31, r0
	can_message msg = {0};
	uint16_t max_encoder_value = pid_encoder_max_value();
	uint8_t bufferSelect;
	while(1)
	{
		bufferSelect = can_pollInterrupt();
    10d4:	2e db       	rcall	.-2468   	; 0x732 <can_pollInterrupt>
		if(bufferSelect){
    10d6:	88 23       	and	r24, r24
    10d8:	21 f0       	breq	.+8      	; 0x10e2 <main+0xc6>
			msg = can_read(bufferSelect);
    10da:	68 2f       	mov	r22, r24
    10dc:	ce 01       	movw	r24, r28
    10de:	01 96       	adiw	r24, 0x01	; 1
    10e0:	34 da       	rcall	.-2968   	; 0x54a <can_read>
		}
		can_handle_message(msg, max_encoder_value);
    10e2:	64 01       	movw	r12, r8
    10e4:	e9 80       	ldd	r14, Y+1	; 0x01
    10e6:	fa 80       	ldd	r15, Y+2	; 0x02
    10e8:	0b 81       	ldd	r16, Y+3	; 0x03
    10ea:	1c 81       	ldd	r17, Y+4	; 0x04
    10ec:	2d 81       	ldd	r18, Y+5	; 0x05
    10ee:	3e 81       	ldd	r19, Y+6	; 0x06
    10f0:	4f 81       	ldd	r20, Y+7	; 0x07
    10f2:	58 85       	ldd	r21, Y+8	; 0x08
    10f4:	69 85       	ldd	r22, Y+9	; 0x09
    10f6:	7a 85       	ldd	r23, Y+10	; 0x0a
    10f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    10fa:	67 dc       	rcall	.-1842   	; 0x9ca <can_handle_message>
		printf("%d\n", adc_read(0));
    10fc:	80 e0       	ldi	r24, 0x00	; 0
    10fe:	49 de       	rcall	.-878    	; 0xd92 <adc_read>
    1100:	9f 93       	push	r25
    1102:	8f 93       	push	r24
    1104:	bf 92       	push	r11
    1106:	af 92       	push	r10
    1108:	0e 94 f1 10 	call	0x21e2	; 0x21e2 <printf>
		ir_beam_blocked(adc_read(0));
    110c:	80 e0       	ldi	r24, 0x00	; 0
    110e:	41 de       	rcall	.-894    	; 0xd92 <adc_read>
    1110:	3e df       	rcall	.-388    	; 0xf8e <ir_beam_blocked>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1112:	8f e3       	ldi	r24, 0x3F	; 63
    1114:	9c e9       	ldi	r25, 0x9C	; 156
    1116:	01 97       	sbiw	r24, 0x01	; 1
    1118:	f1 f7       	brne	.-4      	; 0x1116 <main+0xfa>
    111a:	00 c0       	rjmp	.+0      	; 0x111c <main+0x100>
    111c:	00 00       	nop
    111e:	0f 90       	pop	r0
    1120:	0f 90       	pop	r0
    1122:	0f 90       	pop	r0
    1124:	0f 90       	pop	r0
    1126:	d6 cf       	rjmp	.-84     	; 0x10d4 <main+0xb8>

00001128 <solenoid_init>:
#include "solenoid.h"
#include <avr/io.h>

void solenoid_init(){
	DDRA |=(1<<PA2);
    1128:	0a 9a       	sbi	0x01, 2	; 1
	PORTA |= (1 << PA2);	
    112a:	12 9a       	sbi	0x02, 2	; 2
    112c:	08 95       	ret

0000112e <__subsf3>:
    112e:	50 58       	subi	r21, 0x80	; 128

00001130 <__addsf3>:
    1130:	bb 27       	eor	r27, r27
    1132:	aa 27       	eor	r26, r26
    1134:	0e d0       	rcall	.+28     	; 0x1152 <__addsf3x>
    1136:	4d c1       	rjmp	.+666    	; 0x13d2 <__fp_round>
    1138:	3e d1       	rcall	.+636    	; 0x13b6 <__fp_pscA>
    113a:	30 f0       	brcs	.+12     	; 0x1148 <__addsf3+0x18>
    113c:	43 d1       	rcall	.+646    	; 0x13c4 <__fp_pscB>
    113e:	20 f0       	brcs	.+8      	; 0x1148 <__addsf3+0x18>
    1140:	31 f4       	brne	.+12     	; 0x114e <__addsf3+0x1e>
    1142:	9f 3f       	cpi	r25, 0xFF	; 255
    1144:	11 f4       	brne	.+4      	; 0x114a <__addsf3+0x1a>
    1146:	1e f4       	brtc	.+6      	; 0x114e <__addsf3+0x1e>
    1148:	33 c1       	rjmp	.+614    	; 0x13b0 <__fp_nan>
    114a:	0e f4       	brtc	.+2      	; 0x114e <__addsf3+0x1e>
    114c:	e0 95       	com	r30
    114e:	e7 fb       	bst	r30, 7
    1150:	29 c1       	rjmp	.+594    	; 0x13a4 <__fp_inf>

00001152 <__addsf3x>:
    1152:	e9 2f       	mov	r30, r25
    1154:	4f d1       	rcall	.+670    	; 0x13f4 <__fp_split3>
    1156:	80 f3       	brcs	.-32     	; 0x1138 <__addsf3+0x8>
    1158:	ba 17       	cp	r27, r26
    115a:	62 07       	cpc	r22, r18
    115c:	73 07       	cpc	r23, r19
    115e:	84 07       	cpc	r24, r20
    1160:	95 07       	cpc	r25, r21
    1162:	18 f0       	brcs	.+6      	; 0x116a <__addsf3x+0x18>
    1164:	71 f4       	brne	.+28     	; 0x1182 <__addsf3x+0x30>
    1166:	9e f5       	brtc	.+102    	; 0x11ce <__addsf3x+0x7c>
    1168:	67 c1       	rjmp	.+718    	; 0x1438 <__fp_zero>
    116a:	0e f4       	brtc	.+2      	; 0x116e <__addsf3x+0x1c>
    116c:	e0 95       	com	r30
    116e:	0b 2e       	mov	r0, r27
    1170:	ba 2f       	mov	r27, r26
    1172:	a0 2d       	mov	r26, r0
    1174:	0b 01       	movw	r0, r22
    1176:	b9 01       	movw	r22, r18
    1178:	90 01       	movw	r18, r0
    117a:	0c 01       	movw	r0, r24
    117c:	ca 01       	movw	r24, r20
    117e:	a0 01       	movw	r20, r0
    1180:	11 24       	eor	r1, r1
    1182:	ff 27       	eor	r31, r31
    1184:	59 1b       	sub	r21, r25
    1186:	99 f0       	breq	.+38     	; 0x11ae <__addsf3x+0x5c>
    1188:	59 3f       	cpi	r21, 0xF9	; 249
    118a:	50 f4       	brcc	.+20     	; 0x11a0 <__addsf3x+0x4e>
    118c:	50 3e       	cpi	r21, 0xE0	; 224
    118e:	68 f1       	brcs	.+90     	; 0x11ea <__addsf3x+0x98>
    1190:	1a 16       	cp	r1, r26
    1192:	f0 40       	sbci	r31, 0x00	; 0
    1194:	a2 2f       	mov	r26, r18
    1196:	23 2f       	mov	r18, r19
    1198:	34 2f       	mov	r19, r20
    119a:	44 27       	eor	r20, r20
    119c:	58 5f       	subi	r21, 0xF8	; 248
    119e:	f3 cf       	rjmp	.-26     	; 0x1186 <__addsf3x+0x34>
    11a0:	46 95       	lsr	r20
    11a2:	37 95       	ror	r19
    11a4:	27 95       	ror	r18
    11a6:	a7 95       	ror	r26
    11a8:	f0 40       	sbci	r31, 0x00	; 0
    11aa:	53 95       	inc	r21
    11ac:	c9 f7       	brne	.-14     	; 0x11a0 <__addsf3x+0x4e>
    11ae:	7e f4       	brtc	.+30     	; 0x11ce <__addsf3x+0x7c>
    11b0:	1f 16       	cp	r1, r31
    11b2:	ba 0b       	sbc	r27, r26
    11b4:	62 0b       	sbc	r22, r18
    11b6:	73 0b       	sbc	r23, r19
    11b8:	84 0b       	sbc	r24, r20
    11ba:	ba f0       	brmi	.+46     	; 0x11ea <__addsf3x+0x98>
    11bc:	91 50       	subi	r25, 0x01	; 1
    11be:	a1 f0       	breq	.+40     	; 0x11e8 <__addsf3x+0x96>
    11c0:	ff 0f       	add	r31, r31
    11c2:	bb 1f       	adc	r27, r27
    11c4:	66 1f       	adc	r22, r22
    11c6:	77 1f       	adc	r23, r23
    11c8:	88 1f       	adc	r24, r24
    11ca:	c2 f7       	brpl	.-16     	; 0x11bc <__addsf3x+0x6a>
    11cc:	0e c0       	rjmp	.+28     	; 0x11ea <__addsf3x+0x98>
    11ce:	ba 0f       	add	r27, r26
    11d0:	62 1f       	adc	r22, r18
    11d2:	73 1f       	adc	r23, r19
    11d4:	84 1f       	adc	r24, r20
    11d6:	48 f4       	brcc	.+18     	; 0x11ea <__addsf3x+0x98>
    11d8:	87 95       	ror	r24
    11da:	77 95       	ror	r23
    11dc:	67 95       	ror	r22
    11de:	b7 95       	ror	r27
    11e0:	f7 95       	ror	r31
    11e2:	9e 3f       	cpi	r25, 0xFE	; 254
    11e4:	08 f0       	brcs	.+2      	; 0x11e8 <__addsf3x+0x96>
    11e6:	b3 cf       	rjmp	.-154    	; 0x114e <__addsf3+0x1e>
    11e8:	93 95       	inc	r25
    11ea:	88 0f       	add	r24, r24
    11ec:	08 f0       	brcs	.+2      	; 0x11f0 <__addsf3x+0x9e>
    11ee:	99 27       	eor	r25, r25
    11f0:	ee 0f       	add	r30, r30
    11f2:	97 95       	ror	r25
    11f4:	87 95       	ror	r24
    11f6:	08 95       	ret

000011f8 <__divsf3>:
    11f8:	0c d0       	rcall	.+24     	; 0x1212 <__divsf3x>
    11fa:	eb c0       	rjmp	.+470    	; 0x13d2 <__fp_round>
    11fc:	e3 d0       	rcall	.+454    	; 0x13c4 <__fp_pscB>
    11fe:	40 f0       	brcs	.+16     	; 0x1210 <__divsf3+0x18>
    1200:	da d0       	rcall	.+436    	; 0x13b6 <__fp_pscA>
    1202:	30 f0       	brcs	.+12     	; 0x1210 <__divsf3+0x18>
    1204:	21 f4       	brne	.+8      	; 0x120e <__divsf3+0x16>
    1206:	5f 3f       	cpi	r21, 0xFF	; 255
    1208:	19 f0       	breq	.+6      	; 0x1210 <__divsf3+0x18>
    120a:	cc c0       	rjmp	.+408    	; 0x13a4 <__fp_inf>
    120c:	51 11       	cpse	r21, r1
    120e:	15 c1       	rjmp	.+554    	; 0x143a <__fp_szero>
    1210:	cf c0       	rjmp	.+414    	; 0x13b0 <__fp_nan>

00001212 <__divsf3x>:
    1212:	f0 d0       	rcall	.+480    	; 0x13f4 <__fp_split3>
    1214:	98 f3       	brcs	.-26     	; 0x11fc <__divsf3+0x4>

00001216 <__divsf3_pse>:
    1216:	99 23       	and	r25, r25
    1218:	c9 f3       	breq	.-14     	; 0x120c <__divsf3+0x14>
    121a:	55 23       	and	r21, r21
    121c:	b1 f3       	breq	.-20     	; 0x120a <__divsf3+0x12>
    121e:	95 1b       	sub	r25, r21
    1220:	55 0b       	sbc	r21, r21
    1222:	bb 27       	eor	r27, r27
    1224:	aa 27       	eor	r26, r26
    1226:	62 17       	cp	r22, r18
    1228:	73 07       	cpc	r23, r19
    122a:	84 07       	cpc	r24, r20
    122c:	38 f0       	brcs	.+14     	; 0x123c <__divsf3_pse+0x26>
    122e:	9f 5f       	subi	r25, 0xFF	; 255
    1230:	5f 4f       	sbci	r21, 0xFF	; 255
    1232:	22 0f       	add	r18, r18
    1234:	33 1f       	adc	r19, r19
    1236:	44 1f       	adc	r20, r20
    1238:	aa 1f       	adc	r26, r26
    123a:	a9 f3       	breq	.-22     	; 0x1226 <__divsf3_pse+0x10>
    123c:	33 d0       	rcall	.+102    	; 0x12a4 <__divsf3_pse+0x8e>
    123e:	0e 2e       	mov	r0, r30
    1240:	3a f0       	brmi	.+14     	; 0x1250 <__divsf3_pse+0x3a>
    1242:	e0 e8       	ldi	r30, 0x80	; 128
    1244:	30 d0       	rcall	.+96     	; 0x12a6 <__divsf3_pse+0x90>
    1246:	91 50       	subi	r25, 0x01	; 1
    1248:	50 40       	sbci	r21, 0x00	; 0
    124a:	e6 95       	lsr	r30
    124c:	00 1c       	adc	r0, r0
    124e:	ca f7       	brpl	.-14     	; 0x1242 <__divsf3_pse+0x2c>
    1250:	29 d0       	rcall	.+82     	; 0x12a4 <__divsf3_pse+0x8e>
    1252:	fe 2f       	mov	r31, r30
    1254:	27 d0       	rcall	.+78     	; 0x12a4 <__divsf3_pse+0x8e>
    1256:	66 0f       	add	r22, r22
    1258:	77 1f       	adc	r23, r23
    125a:	88 1f       	adc	r24, r24
    125c:	bb 1f       	adc	r27, r27
    125e:	26 17       	cp	r18, r22
    1260:	37 07       	cpc	r19, r23
    1262:	48 07       	cpc	r20, r24
    1264:	ab 07       	cpc	r26, r27
    1266:	b0 e8       	ldi	r27, 0x80	; 128
    1268:	09 f0       	breq	.+2      	; 0x126c <__divsf3_pse+0x56>
    126a:	bb 0b       	sbc	r27, r27
    126c:	80 2d       	mov	r24, r0
    126e:	bf 01       	movw	r22, r30
    1270:	ff 27       	eor	r31, r31
    1272:	93 58       	subi	r25, 0x83	; 131
    1274:	5f 4f       	sbci	r21, 0xFF	; 255
    1276:	2a f0       	brmi	.+10     	; 0x1282 <__divsf3_pse+0x6c>
    1278:	9e 3f       	cpi	r25, 0xFE	; 254
    127a:	51 05       	cpc	r21, r1
    127c:	68 f0       	brcs	.+26     	; 0x1298 <__divsf3_pse+0x82>
    127e:	92 c0       	rjmp	.+292    	; 0x13a4 <__fp_inf>
    1280:	dc c0       	rjmp	.+440    	; 0x143a <__fp_szero>
    1282:	5f 3f       	cpi	r21, 0xFF	; 255
    1284:	ec f3       	brlt	.-6      	; 0x1280 <__divsf3_pse+0x6a>
    1286:	98 3e       	cpi	r25, 0xE8	; 232
    1288:	dc f3       	brlt	.-10     	; 0x1280 <__divsf3_pse+0x6a>
    128a:	86 95       	lsr	r24
    128c:	77 95       	ror	r23
    128e:	67 95       	ror	r22
    1290:	b7 95       	ror	r27
    1292:	f7 95       	ror	r31
    1294:	9f 5f       	subi	r25, 0xFF	; 255
    1296:	c9 f7       	brne	.-14     	; 0x128a <__divsf3_pse+0x74>
    1298:	88 0f       	add	r24, r24
    129a:	91 1d       	adc	r25, r1
    129c:	96 95       	lsr	r25
    129e:	87 95       	ror	r24
    12a0:	97 f9       	bld	r25, 7
    12a2:	08 95       	ret
    12a4:	e1 e0       	ldi	r30, 0x01	; 1
    12a6:	66 0f       	add	r22, r22
    12a8:	77 1f       	adc	r23, r23
    12aa:	88 1f       	adc	r24, r24
    12ac:	bb 1f       	adc	r27, r27
    12ae:	62 17       	cp	r22, r18
    12b0:	73 07       	cpc	r23, r19
    12b2:	84 07       	cpc	r24, r20
    12b4:	ba 07       	cpc	r27, r26
    12b6:	20 f0       	brcs	.+8      	; 0x12c0 <__divsf3_pse+0xaa>
    12b8:	62 1b       	sub	r22, r18
    12ba:	73 0b       	sbc	r23, r19
    12bc:	84 0b       	sbc	r24, r20
    12be:	ba 0b       	sbc	r27, r26
    12c0:	ee 1f       	adc	r30, r30
    12c2:	88 f7       	brcc	.-30     	; 0x12a6 <__divsf3_pse+0x90>
    12c4:	e0 95       	com	r30
    12c6:	08 95       	ret

000012c8 <__fixsfsi>:
    12c8:	04 d0       	rcall	.+8      	; 0x12d2 <__fixunssfsi>
    12ca:	68 94       	set
    12cc:	b1 11       	cpse	r27, r1
    12ce:	b5 c0       	rjmp	.+362    	; 0x143a <__fp_szero>
    12d0:	08 95       	ret

000012d2 <__fixunssfsi>:
    12d2:	98 d0       	rcall	.+304    	; 0x1404 <__fp_splitA>
    12d4:	88 f0       	brcs	.+34     	; 0x12f8 <__fixunssfsi+0x26>
    12d6:	9f 57       	subi	r25, 0x7F	; 127
    12d8:	90 f0       	brcs	.+36     	; 0x12fe <__fixunssfsi+0x2c>
    12da:	b9 2f       	mov	r27, r25
    12dc:	99 27       	eor	r25, r25
    12de:	b7 51       	subi	r27, 0x17	; 23
    12e0:	a0 f0       	brcs	.+40     	; 0x130a <__fixunssfsi+0x38>
    12e2:	d1 f0       	breq	.+52     	; 0x1318 <__fixunssfsi+0x46>
    12e4:	66 0f       	add	r22, r22
    12e6:	77 1f       	adc	r23, r23
    12e8:	88 1f       	adc	r24, r24
    12ea:	99 1f       	adc	r25, r25
    12ec:	1a f0       	brmi	.+6      	; 0x12f4 <__fixunssfsi+0x22>
    12ee:	ba 95       	dec	r27
    12f0:	c9 f7       	brne	.-14     	; 0x12e4 <__fixunssfsi+0x12>
    12f2:	12 c0       	rjmp	.+36     	; 0x1318 <__fixunssfsi+0x46>
    12f4:	b1 30       	cpi	r27, 0x01	; 1
    12f6:	81 f0       	breq	.+32     	; 0x1318 <__fixunssfsi+0x46>
    12f8:	9f d0       	rcall	.+318    	; 0x1438 <__fp_zero>
    12fa:	b1 e0       	ldi	r27, 0x01	; 1
    12fc:	08 95       	ret
    12fe:	9c c0       	rjmp	.+312    	; 0x1438 <__fp_zero>
    1300:	67 2f       	mov	r22, r23
    1302:	78 2f       	mov	r23, r24
    1304:	88 27       	eor	r24, r24
    1306:	b8 5f       	subi	r27, 0xF8	; 248
    1308:	39 f0       	breq	.+14     	; 0x1318 <__fixunssfsi+0x46>
    130a:	b9 3f       	cpi	r27, 0xF9	; 249
    130c:	cc f3       	brlt	.-14     	; 0x1300 <__fixunssfsi+0x2e>
    130e:	86 95       	lsr	r24
    1310:	77 95       	ror	r23
    1312:	67 95       	ror	r22
    1314:	b3 95       	inc	r27
    1316:	d9 f7       	brne	.-10     	; 0x130e <__fixunssfsi+0x3c>
    1318:	3e f4       	brtc	.+14     	; 0x1328 <__fixunssfsi+0x56>
    131a:	90 95       	com	r25
    131c:	80 95       	com	r24
    131e:	70 95       	com	r23
    1320:	61 95       	neg	r22
    1322:	7f 4f       	sbci	r23, 0xFF	; 255
    1324:	8f 4f       	sbci	r24, 0xFF	; 255
    1326:	9f 4f       	sbci	r25, 0xFF	; 255
    1328:	08 95       	ret

0000132a <__floatunsisf>:
    132a:	e8 94       	clt
    132c:	09 c0       	rjmp	.+18     	; 0x1340 <__floatsisf+0x12>

0000132e <__floatsisf>:
    132e:	97 fb       	bst	r25, 7
    1330:	3e f4       	brtc	.+14     	; 0x1340 <__floatsisf+0x12>
    1332:	90 95       	com	r25
    1334:	80 95       	com	r24
    1336:	70 95       	com	r23
    1338:	61 95       	neg	r22
    133a:	7f 4f       	sbci	r23, 0xFF	; 255
    133c:	8f 4f       	sbci	r24, 0xFF	; 255
    133e:	9f 4f       	sbci	r25, 0xFF	; 255
    1340:	99 23       	and	r25, r25
    1342:	a9 f0       	breq	.+42     	; 0x136e <__floatsisf+0x40>
    1344:	f9 2f       	mov	r31, r25
    1346:	96 e9       	ldi	r25, 0x96	; 150
    1348:	bb 27       	eor	r27, r27
    134a:	93 95       	inc	r25
    134c:	f6 95       	lsr	r31
    134e:	87 95       	ror	r24
    1350:	77 95       	ror	r23
    1352:	67 95       	ror	r22
    1354:	b7 95       	ror	r27
    1356:	f1 11       	cpse	r31, r1
    1358:	f8 cf       	rjmp	.-16     	; 0x134a <__floatsisf+0x1c>
    135a:	fa f4       	brpl	.+62     	; 0x139a <__floatsisf+0x6c>
    135c:	bb 0f       	add	r27, r27
    135e:	11 f4       	brne	.+4      	; 0x1364 <__floatsisf+0x36>
    1360:	60 ff       	sbrs	r22, 0
    1362:	1b c0       	rjmp	.+54     	; 0x139a <__floatsisf+0x6c>
    1364:	6f 5f       	subi	r22, 0xFF	; 255
    1366:	7f 4f       	sbci	r23, 0xFF	; 255
    1368:	8f 4f       	sbci	r24, 0xFF	; 255
    136a:	9f 4f       	sbci	r25, 0xFF	; 255
    136c:	16 c0       	rjmp	.+44     	; 0x139a <__floatsisf+0x6c>
    136e:	88 23       	and	r24, r24
    1370:	11 f0       	breq	.+4      	; 0x1376 <__floatsisf+0x48>
    1372:	96 e9       	ldi	r25, 0x96	; 150
    1374:	11 c0       	rjmp	.+34     	; 0x1398 <__floatsisf+0x6a>
    1376:	77 23       	and	r23, r23
    1378:	21 f0       	breq	.+8      	; 0x1382 <__floatsisf+0x54>
    137a:	9e e8       	ldi	r25, 0x8E	; 142
    137c:	87 2f       	mov	r24, r23
    137e:	76 2f       	mov	r23, r22
    1380:	05 c0       	rjmp	.+10     	; 0x138c <__floatsisf+0x5e>
    1382:	66 23       	and	r22, r22
    1384:	71 f0       	breq	.+28     	; 0x13a2 <__floatsisf+0x74>
    1386:	96 e8       	ldi	r25, 0x86	; 134
    1388:	86 2f       	mov	r24, r22
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	2a f0       	brmi	.+10     	; 0x139a <__floatsisf+0x6c>
    1390:	9a 95       	dec	r25
    1392:	66 0f       	add	r22, r22
    1394:	77 1f       	adc	r23, r23
    1396:	88 1f       	adc	r24, r24
    1398:	da f7       	brpl	.-10     	; 0x1390 <__floatsisf+0x62>
    139a:	88 0f       	add	r24, r24
    139c:	96 95       	lsr	r25
    139e:	87 95       	ror	r24
    13a0:	97 f9       	bld	r25, 7
    13a2:	08 95       	ret

000013a4 <__fp_inf>:
    13a4:	97 f9       	bld	r25, 7
    13a6:	9f 67       	ori	r25, 0x7F	; 127
    13a8:	80 e8       	ldi	r24, 0x80	; 128
    13aa:	70 e0       	ldi	r23, 0x00	; 0
    13ac:	60 e0       	ldi	r22, 0x00	; 0
    13ae:	08 95       	ret

000013b0 <__fp_nan>:
    13b0:	9f ef       	ldi	r25, 0xFF	; 255
    13b2:	80 ec       	ldi	r24, 0xC0	; 192
    13b4:	08 95       	ret

000013b6 <__fp_pscA>:
    13b6:	00 24       	eor	r0, r0
    13b8:	0a 94       	dec	r0
    13ba:	16 16       	cp	r1, r22
    13bc:	17 06       	cpc	r1, r23
    13be:	18 06       	cpc	r1, r24
    13c0:	09 06       	cpc	r0, r25
    13c2:	08 95       	ret

000013c4 <__fp_pscB>:
    13c4:	00 24       	eor	r0, r0
    13c6:	0a 94       	dec	r0
    13c8:	12 16       	cp	r1, r18
    13ca:	13 06       	cpc	r1, r19
    13cc:	14 06       	cpc	r1, r20
    13ce:	05 06       	cpc	r0, r21
    13d0:	08 95       	ret

000013d2 <__fp_round>:
    13d2:	09 2e       	mov	r0, r25
    13d4:	03 94       	inc	r0
    13d6:	00 0c       	add	r0, r0
    13d8:	11 f4       	brne	.+4      	; 0x13de <__fp_round+0xc>
    13da:	88 23       	and	r24, r24
    13dc:	52 f0       	brmi	.+20     	; 0x13f2 <__fp_round+0x20>
    13de:	bb 0f       	add	r27, r27
    13e0:	40 f4       	brcc	.+16     	; 0x13f2 <__fp_round+0x20>
    13e2:	bf 2b       	or	r27, r31
    13e4:	11 f4       	brne	.+4      	; 0x13ea <__fp_round+0x18>
    13e6:	60 ff       	sbrs	r22, 0
    13e8:	04 c0       	rjmp	.+8      	; 0x13f2 <__fp_round+0x20>
    13ea:	6f 5f       	subi	r22, 0xFF	; 255
    13ec:	7f 4f       	sbci	r23, 0xFF	; 255
    13ee:	8f 4f       	sbci	r24, 0xFF	; 255
    13f0:	9f 4f       	sbci	r25, 0xFF	; 255
    13f2:	08 95       	ret

000013f4 <__fp_split3>:
    13f4:	57 fd       	sbrc	r21, 7
    13f6:	90 58       	subi	r25, 0x80	; 128
    13f8:	44 0f       	add	r20, r20
    13fa:	55 1f       	adc	r21, r21
    13fc:	59 f0       	breq	.+22     	; 0x1414 <__fp_splitA+0x10>
    13fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1400:	71 f0       	breq	.+28     	; 0x141e <__fp_splitA+0x1a>
    1402:	47 95       	ror	r20

00001404 <__fp_splitA>:
    1404:	88 0f       	add	r24, r24
    1406:	97 fb       	bst	r25, 7
    1408:	99 1f       	adc	r25, r25
    140a:	61 f0       	breq	.+24     	; 0x1424 <__fp_splitA+0x20>
    140c:	9f 3f       	cpi	r25, 0xFF	; 255
    140e:	79 f0       	breq	.+30     	; 0x142e <__fp_splitA+0x2a>
    1410:	87 95       	ror	r24
    1412:	08 95       	ret
    1414:	12 16       	cp	r1, r18
    1416:	13 06       	cpc	r1, r19
    1418:	14 06       	cpc	r1, r20
    141a:	55 1f       	adc	r21, r21
    141c:	f2 cf       	rjmp	.-28     	; 0x1402 <__fp_split3+0xe>
    141e:	46 95       	lsr	r20
    1420:	f1 df       	rcall	.-30     	; 0x1404 <__fp_splitA>
    1422:	08 c0       	rjmp	.+16     	; 0x1434 <__fp_splitA+0x30>
    1424:	16 16       	cp	r1, r22
    1426:	17 06       	cpc	r1, r23
    1428:	18 06       	cpc	r1, r24
    142a:	99 1f       	adc	r25, r25
    142c:	f1 cf       	rjmp	.-30     	; 0x1410 <__fp_splitA+0xc>
    142e:	86 95       	lsr	r24
    1430:	71 05       	cpc	r23, r1
    1432:	61 05       	cpc	r22, r1
    1434:	08 94       	sec
    1436:	08 95       	ret

00001438 <__fp_zero>:
    1438:	e8 94       	clt

0000143a <__fp_szero>:
    143a:	bb 27       	eor	r27, r27
    143c:	66 27       	eor	r22, r22
    143e:	77 27       	eor	r23, r23
    1440:	cb 01       	movw	r24, r22
    1442:	97 f9       	bld	r25, 7
    1444:	08 95       	ret

00001446 <__mulsf3>:
    1446:	0b d0       	rcall	.+22     	; 0x145e <__mulsf3x>
    1448:	c4 cf       	rjmp	.-120    	; 0x13d2 <__fp_round>
    144a:	b5 df       	rcall	.-150    	; 0x13b6 <__fp_pscA>
    144c:	28 f0       	brcs	.+10     	; 0x1458 <__mulsf3+0x12>
    144e:	ba df       	rcall	.-140    	; 0x13c4 <__fp_pscB>
    1450:	18 f0       	brcs	.+6      	; 0x1458 <__mulsf3+0x12>
    1452:	95 23       	and	r25, r21
    1454:	09 f0       	breq	.+2      	; 0x1458 <__mulsf3+0x12>
    1456:	a6 cf       	rjmp	.-180    	; 0x13a4 <__fp_inf>
    1458:	ab cf       	rjmp	.-170    	; 0x13b0 <__fp_nan>
    145a:	11 24       	eor	r1, r1
    145c:	ee cf       	rjmp	.-36     	; 0x143a <__fp_szero>

0000145e <__mulsf3x>:
    145e:	ca df       	rcall	.-108    	; 0x13f4 <__fp_split3>
    1460:	a0 f3       	brcs	.-24     	; 0x144a <__mulsf3+0x4>

00001462 <__mulsf3_pse>:
    1462:	95 9f       	mul	r25, r21
    1464:	d1 f3       	breq	.-12     	; 0x145a <__mulsf3+0x14>
    1466:	95 0f       	add	r25, r21
    1468:	50 e0       	ldi	r21, 0x00	; 0
    146a:	55 1f       	adc	r21, r21
    146c:	62 9f       	mul	r22, r18
    146e:	f0 01       	movw	r30, r0
    1470:	72 9f       	mul	r23, r18
    1472:	bb 27       	eor	r27, r27
    1474:	f0 0d       	add	r31, r0
    1476:	b1 1d       	adc	r27, r1
    1478:	63 9f       	mul	r22, r19
    147a:	aa 27       	eor	r26, r26
    147c:	f0 0d       	add	r31, r0
    147e:	b1 1d       	adc	r27, r1
    1480:	aa 1f       	adc	r26, r26
    1482:	64 9f       	mul	r22, r20
    1484:	66 27       	eor	r22, r22
    1486:	b0 0d       	add	r27, r0
    1488:	a1 1d       	adc	r26, r1
    148a:	66 1f       	adc	r22, r22
    148c:	82 9f       	mul	r24, r18
    148e:	22 27       	eor	r18, r18
    1490:	b0 0d       	add	r27, r0
    1492:	a1 1d       	adc	r26, r1
    1494:	62 1f       	adc	r22, r18
    1496:	73 9f       	mul	r23, r19
    1498:	b0 0d       	add	r27, r0
    149a:	a1 1d       	adc	r26, r1
    149c:	62 1f       	adc	r22, r18
    149e:	83 9f       	mul	r24, r19
    14a0:	a0 0d       	add	r26, r0
    14a2:	61 1d       	adc	r22, r1
    14a4:	22 1f       	adc	r18, r18
    14a6:	74 9f       	mul	r23, r20
    14a8:	33 27       	eor	r19, r19
    14aa:	a0 0d       	add	r26, r0
    14ac:	61 1d       	adc	r22, r1
    14ae:	23 1f       	adc	r18, r19
    14b0:	84 9f       	mul	r24, r20
    14b2:	60 0d       	add	r22, r0
    14b4:	21 1d       	adc	r18, r1
    14b6:	82 2f       	mov	r24, r18
    14b8:	76 2f       	mov	r23, r22
    14ba:	6a 2f       	mov	r22, r26
    14bc:	11 24       	eor	r1, r1
    14be:	9f 57       	subi	r25, 0x7F	; 127
    14c0:	50 40       	sbci	r21, 0x00	; 0
    14c2:	8a f0       	brmi	.+34     	; 0x14e6 <__mulsf3_pse+0x84>
    14c4:	e1 f0       	breq	.+56     	; 0x14fe <__mulsf3_pse+0x9c>
    14c6:	88 23       	and	r24, r24
    14c8:	4a f0       	brmi	.+18     	; 0x14dc <__mulsf3_pse+0x7a>
    14ca:	ee 0f       	add	r30, r30
    14cc:	ff 1f       	adc	r31, r31
    14ce:	bb 1f       	adc	r27, r27
    14d0:	66 1f       	adc	r22, r22
    14d2:	77 1f       	adc	r23, r23
    14d4:	88 1f       	adc	r24, r24
    14d6:	91 50       	subi	r25, 0x01	; 1
    14d8:	50 40       	sbci	r21, 0x00	; 0
    14da:	a9 f7       	brne	.-22     	; 0x14c6 <__mulsf3_pse+0x64>
    14dc:	9e 3f       	cpi	r25, 0xFE	; 254
    14de:	51 05       	cpc	r21, r1
    14e0:	70 f0       	brcs	.+28     	; 0x14fe <__mulsf3_pse+0x9c>
    14e2:	60 cf       	rjmp	.-320    	; 0x13a4 <__fp_inf>
    14e4:	aa cf       	rjmp	.-172    	; 0x143a <__fp_szero>
    14e6:	5f 3f       	cpi	r21, 0xFF	; 255
    14e8:	ec f3       	brlt	.-6      	; 0x14e4 <__mulsf3_pse+0x82>
    14ea:	98 3e       	cpi	r25, 0xE8	; 232
    14ec:	dc f3       	brlt	.-10     	; 0x14e4 <__mulsf3_pse+0x82>
    14ee:	86 95       	lsr	r24
    14f0:	77 95       	ror	r23
    14f2:	67 95       	ror	r22
    14f4:	b7 95       	ror	r27
    14f6:	f7 95       	ror	r31
    14f8:	e7 95       	ror	r30
    14fa:	9f 5f       	subi	r25, 0xFF	; 255
    14fc:	c1 f7       	brne	.-16     	; 0x14ee <__mulsf3_pse+0x8c>
    14fe:	fe 2b       	or	r31, r30
    1500:	88 0f       	add	r24, r24
    1502:	91 1d       	adc	r25, r1
    1504:	96 95       	lsr	r25
    1506:	87 95       	ror	r24
    1508:	97 f9       	bld	r25, 7
    150a:	08 95       	ret

0000150c <pow>:
    150c:	fa 01       	movw	r30, r20
    150e:	ee 0f       	add	r30, r30
    1510:	ff 1f       	adc	r31, r31
    1512:	30 96       	adiw	r30, 0x00	; 0
    1514:	21 05       	cpc	r18, r1
    1516:	31 05       	cpc	r19, r1
    1518:	99 f1       	breq	.+102    	; 0x1580 <pow+0x74>
    151a:	61 15       	cp	r22, r1
    151c:	71 05       	cpc	r23, r1
    151e:	61 f4       	brne	.+24     	; 0x1538 <pow+0x2c>
    1520:	80 38       	cpi	r24, 0x80	; 128
    1522:	bf e3       	ldi	r27, 0x3F	; 63
    1524:	9b 07       	cpc	r25, r27
    1526:	49 f1       	breq	.+82     	; 0x157a <pow+0x6e>
    1528:	68 94       	set
    152a:	90 38       	cpi	r25, 0x80	; 128
    152c:	81 05       	cpc	r24, r1
    152e:	61 f0       	breq	.+24     	; 0x1548 <pow+0x3c>
    1530:	80 38       	cpi	r24, 0x80	; 128
    1532:	bf ef       	ldi	r27, 0xFF	; 255
    1534:	9b 07       	cpc	r25, r27
    1536:	41 f0       	breq	.+16     	; 0x1548 <pow+0x3c>
    1538:	99 23       	and	r25, r25
    153a:	42 f5       	brpl	.+80     	; 0x158c <pow+0x80>
    153c:	ff 3f       	cpi	r31, 0xFF	; 255
    153e:	e1 05       	cpc	r30, r1
    1540:	31 05       	cpc	r19, r1
    1542:	21 05       	cpc	r18, r1
    1544:	11 f1       	breq	.+68     	; 0x158a <pow+0x7e>
    1546:	e8 94       	clt
    1548:	08 94       	sec
    154a:	e7 95       	ror	r30
    154c:	d9 01       	movw	r26, r18
    154e:	aa 23       	and	r26, r26
    1550:	29 f4       	brne	.+10     	; 0x155c <pow+0x50>
    1552:	ab 2f       	mov	r26, r27
    1554:	be 2f       	mov	r27, r30
    1556:	f8 5f       	subi	r31, 0xF8	; 248
    1558:	d0 f3       	brcs	.-12     	; 0x154e <pow+0x42>
    155a:	10 c0       	rjmp	.+32     	; 0x157c <pow+0x70>
    155c:	ff 5f       	subi	r31, 0xFF	; 255
    155e:	70 f4       	brcc	.+28     	; 0x157c <pow+0x70>
    1560:	a6 95       	lsr	r26
    1562:	e0 f7       	brcc	.-8      	; 0x155c <pow+0x50>
    1564:	f7 39       	cpi	r31, 0x97	; 151
    1566:	50 f0       	brcs	.+20     	; 0x157c <pow+0x70>
    1568:	19 f0       	breq	.+6      	; 0x1570 <pow+0x64>
    156a:	ff 3a       	cpi	r31, 0xAF	; 175
    156c:	38 f4       	brcc	.+14     	; 0x157c <pow+0x70>
    156e:	9f 77       	andi	r25, 0x7F	; 127
    1570:	9f 93       	push	r25
    1572:	0c d0       	rcall	.+24     	; 0x158c <pow+0x80>
    1574:	0f 90       	pop	r0
    1576:	07 fc       	sbrc	r0, 7
    1578:	90 58       	subi	r25, 0x80	; 128
    157a:	08 95       	ret
    157c:	3e f0       	brts	.+14     	; 0x158c <pow+0x80>
    157e:	18 cf       	rjmp	.-464    	; 0x13b0 <__fp_nan>
    1580:	60 e0       	ldi	r22, 0x00	; 0
    1582:	70 e0       	ldi	r23, 0x00	; 0
    1584:	80 e8       	ldi	r24, 0x80	; 128
    1586:	9f e3       	ldi	r25, 0x3F	; 63
    1588:	08 95       	ret
    158a:	4f e7       	ldi	r20, 0x7F	; 127
    158c:	9f 77       	andi	r25, 0x7F	; 127
    158e:	5f 93       	push	r21
    1590:	4f 93       	push	r20
    1592:	3f 93       	push	r19
    1594:	2f 93       	push	r18
    1596:	9e d0       	rcall	.+316    	; 0x16d4 <log>
    1598:	2f 91       	pop	r18
    159a:	3f 91       	pop	r19
    159c:	4f 91       	pop	r20
    159e:	5f 91       	pop	r21
    15a0:	52 df       	rcall	.-348    	; 0x1446 <__mulsf3>
    15a2:	05 c0       	rjmp	.+10     	; 0x15ae <exp>
    15a4:	19 f4       	brne	.+6      	; 0x15ac <pow+0xa0>
    15a6:	0e f0       	brts	.+2      	; 0x15aa <pow+0x9e>
    15a8:	fd ce       	rjmp	.-518    	; 0x13a4 <__fp_inf>
    15aa:	46 cf       	rjmp	.-372    	; 0x1438 <__fp_zero>
    15ac:	01 cf       	rjmp	.-510    	; 0x13b0 <__fp_nan>

000015ae <exp>:
    15ae:	2a df       	rcall	.-428    	; 0x1404 <__fp_splitA>
    15b0:	c8 f3       	brcs	.-14     	; 0x15a4 <pow+0x98>
    15b2:	96 38       	cpi	r25, 0x86	; 134
    15b4:	c0 f7       	brcc	.-16     	; 0x15a6 <pow+0x9a>
    15b6:	07 f8       	bld	r0, 7
    15b8:	0f 92       	push	r0
    15ba:	e8 94       	clt
    15bc:	2b e3       	ldi	r18, 0x3B	; 59
    15be:	3a ea       	ldi	r19, 0xAA	; 170
    15c0:	48 eb       	ldi	r20, 0xB8	; 184
    15c2:	5f e7       	ldi	r21, 0x7F	; 127
    15c4:	4e df       	rcall	.-356    	; 0x1462 <__mulsf3_pse>
    15c6:	0f 92       	push	r0
    15c8:	0f 92       	push	r0
    15ca:	0f 92       	push	r0
    15cc:	4d b7       	in	r20, 0x3d	; 61
    15ce:	5e b7       	in	r21, 0x3e	; 62
    15d0:	0f 92       	push	r0
    15d2:	c0 d0       	rcall	.+384    	; 0x1754 <modf>
    15d4:	e6 e8       	ldi	r30, 0x86	; 134
    15d6:	f1 e0       	ldi	r31, 0x01	; 1
    15d8:	16 d0       	rcall	.+44     	; 0x1606 <__fp_powser>
    15da:	4f 91       	pop	r20
    15dc:	5f 91       	pop	r21
    15de:	ef 91       	pop	r30
    15e0:	ff 91       	pop	r31
    15e2:	e5 95       	asr	r30
    15e4:	ee 1f       	adc	r30, r30
    15e6:	ff 1f       	adc	r31, r31
    15e8:	49 f0       	breq	.+18     	; 0x15fc <exp+0x4e>
    15ea:	fe 57       	subi	r31, 0x7E	; 126
    15ec:	e0 68       	ori	r30, 0x80	; 128
    15ee:	44 27       	eor	r20, r20
    15f0:	ee 0f       	add	r30, r30
    15f2:	44 1f       	adc	r20, r20
    15f4:	fa 95       	dec	r31
    15f6:	e1 f7       	brne	.-8      	; 0x15f0 <exp+0x42>
    15f8:	41 95       	neg	r20
    15fa:	55 0b       	sbc	r21, r21
    15fc:	32 d0       	rcall	.+100    	; 0x1662 <ldexp>
    15fe:	0f 90       	pop	r0
    1600:	07 fe       	sbrs	r0, 7
    1602:	26 c0       	rjmp	.+76     	; 0x1650 <inverse>
    1604:	08 95       	ret

00001606 <__fp_powser>:
    1606:	df 93       	push	r29
    1608:	cf 93       	push	r28
    160a:	1f 93       	push	r17
    160c:	0f 93       	push	r16
    160e:	ff 92       	push	r15
    1610:	ef 92       	push	r14
    1612:	df 92       	push	r13
    1614:	7b 01       	movw	r14, r22
    1616:	8c 01       	movw	r16, r24
    1618:	68 94       	set
    161a:	05 c0       	rjmp	.+10     	; 0x1626 <__fp_powser+0x20>
    161c:	da 2e       	mov	r13, r26
    161e:	ef 01       	movw	r28, r30
    1620:	1e df       	rcall	.-452    	; 0x145e <__mulsf3x>
    1622:	fe 01       	movw	r30, r28
    1624:	e8 94       	clt
    1626:	a5 91       	lpm	r26, Z+
    1628:	25 91       	lpm	r18, Z+
    162a:	35 91       	lpm	r19, Z+
    162c:	45 91       	lpm	r20, Z+
    162e:	55 91       	lpm	r21, Z+
    1630:	ae f3       	brts	.-22     	; 0x161c <__fp_powser+0x16>
    1632:	ef 01       	movw	r28, r30
    1634:	8e dd       	rcall	.-1252   	; 0x1152 <__addsf3x>
    1636:	fe 01       	movw	r30, r28
    1638:	97 01       	movw	r18, r14
    163a:	a8 01       	movw	r20, r16
    163c:	da 94       	dec	r13
    163e:	79 f7       	brne	.-34     	; 0x161e <__fp_powser+0x18>
    1640:	df 90       	pop	r13
    1642:	ef 90       	pop	r14
    1644:	ff 90       	pop	r15
    1646:	0f 91       	pop	r16
    1648:	1f 91       	pop	r17
    164a:	cf 91       	pop	r28
    164c:	df 91       	pop	r29
    164e:	08 95       	ret

00001650 <inverse>:
    1650:	9b 01       	movw	r18, r22
    1652:	ac 01       	movw	r20, r24
    1654:	60 e0       	ldi	r22, 0x00	; 0
    1656:	70 e0       	ldi	r23, 0x00	; 0
    1658:	80 e8       	ldi	r24, 0x80	; 128
    165a:	9f e3       	ldi	r25, 0x3F	; 63
    165c:	cd cd       	rjmp	.-1126   	; 0x11f8 <__divsf3>
    165e:	a2 ce       	rjmp	.-700    	; 0x13a4 <__fp_inf>
    1660:	ac c0       	rjmp	.+344    	; 0x17ba <__fp_mpack>

00001662 <ldexp>:
    1662:	d0 de       	rcall	.-608    	; 0x1404 <__fp_splitA>
    1664:	e8 f3       	brcs	.-6      	; 0x1660 <inverse+0x10>
    1666:	99 23       	and	r25, r25
    1668:	d9 f3       	breq	.-10     	; 0x1660 <inverse+0x10>
    166a:	94 0f       	add	r25, r20
    166c:	51 1d       	adc	r21, r1
    166e:	bb f3       	brvs	.-18     	; 0x165e <inverse+0xe>
    1670:	91 50       	subi	r25, 0x01	; 1
    1672:	50 40       	sbci	r21, 0x00	; 0
    1674:	94 f0       	brlt	.+36     	; 0x169a <ldexp+0x38>
    1676:	59 f0       	breq	.+22     	; 0x168e <ldexp+0x2c>
    1678:	88 23       	and	r24, r24
    167a:	32 f0       	brmi	.+12     	; 0x1688 <ldexp+0x26>
    167c:	66 0f       	add	r22, r22
    167e:	77 1f       	adc	r23, r23
    1680:	88 1f       	adc	r24, r24
    1682:	91 50       	subi	r25, 0x01	; 1
    1684:	50 40       	sbci	r21, 0x00	; 0
    1686:	c1 f7       	brne	.-16     	; 0x1678 <ldexp+0x16>
    1688:	9e 3f       	cpi	r25, 0xFE	; 254
    168a:	51 05       	cpc	r21, r1
    168c:	44 f7       	brge	.-48     	; 0x165e <inverse+0xe>
    168e:	88 0f       	add	r24, r24
    1690:	91 1d       	adc	r25, r1
    1692:	96 95       	lsr	r25
    1694:	87 95       	ror	r24
    1696:	97 f9       	bld	r25, 7
    1698:	08 95       	ret
    169a:	5f 3f       	cpi	r21, 0xFF	; 255
    169c:	ac f0       	brlt	.+42     	; 0x16c8 <ldexp+0x66>
    169e:	98 3e       	cpi	r25, 0xE8	; 232
    16a0:	9c f0       	brlt	.+38     	; 0x16c8 <ldexp+0x66>
    16a2:	bb 27       	eor	r27, r27
    16a4:	86 95       	lsr	r24
    16a6:	77 95       	ror	r23
    16a8:	67 95       	ror	r22
    16aa:	b7 95       	ror	r27
    16ac:	08 f4       	brcc	.+2      	; 0x16b0 <ldexp+0x4e>
    16ae:	b1 60       	ori	r27, 0x01	; 1
    16b0:	93 95       	inc	r25
    16b2:	c1 f7       	brne	.-16     	; 0x16a4 <ldexp+0x42>
    16b4:	bb 0f       	add	r27, r27
    16b6:	58 f7       	brcc	.-42     	; 0x168e <ldexp+0x2c>
    16b8:	11 f4       	brne	.+4      	; 0x16be <ldexp+0x5c>
    16ba:	60 ff       	sbrs	r22, 0
    16bc:	e8 cf       	rjmp	.-48     	; 0x168e <ldexp+0x2c>
    16be:	6f 5f       	subi	r22, 0xFF	; 255
    16c0:	7f 4f       	sbci	r23, 0xFF	; 255
    16c2:	8f 4f       	sbci	r24, 0xFF	; 255
    16c4:	9f 4f       	sbci	r25, 0xFF	; 255
    16c6:	e3 cf       	rjmp	.-58     	; 0x168e <ldexp+0x2c>
    16c8:	b8 ce       	rjmp	.-656    	; 0x143a <__fp_szero>
    16ca:	0e f0       	brts	.+2      	; 0x16ce <ldexp+0x6c>
    16cc:	76 c0       	rjmp	.+236    	; 0x17ba <__fp_mpack>
    16ce:	70 ce       	rjmp	.-800    	; 0x13b0 <__fp_nan>
    16d0:	68 94       	set
    16d2:	68 ce       	rjmp	.-816    	; 0x13a4 <__fp_inf>

000016d4 <log>:
    16d4:	97 de       	rcall	.-722    	; 0x1404 <__fp_splitA>
    16d6:	c8 f3       	brcs	.-14     	; 0x16ca <ldexp+0x68>
    16d8:	99 23       	and	r25, r25
    16da:	d1 f3       	breq	.-12     	; 0x16d0 <ldexp+0x6e>
    16dc:	c6 f3       	brts	.-16     	; 0x16ce <ldexp+0x6c>
    16de:	df 93       	push	r29
    16e0:	cf 93       	push	r28
    16e2:	1f 93       	push	r17
    16e4:	0f 93       	push	r16
    16e6:	ff 92       	push	r15
    16e8:	c9 2f       	mov	r28, r25
    16ea:	dd 27       	eor	r29, r29
    16ec:	88 23       	and	r24, r24
    16ee:	2a f0       	brmi	.+10     	; 0x16fa <log+0x26>
    16f0:	21 97       	sbiw	r28, 0x01	; 1
    16f2:	66 0f       	add	r22, r22
    16f4:	77 1f       	adc	r23, r23
    16f6:	88 1f       	adc	r24, r24
    16f8:	da f7       	brpl	.-10     	; 0x16f0 <log+0x1c>
    16fa:	20 e0       	ldi	r18, 0x00	; 0
    16fc:	30 e0       	ldi	r19, 0x00	; 0
    16fe:	40 e8       	ldi	r20, 0x80	; 128
    1700:	5f eb       	ldi	r21, 0xBF	; 191
    1702:	9f e3       	ldi	r25, 0x3F	; 63
    1704:	88 39       	cpi	r24, 0x98	; 152
    1706:	20 f0       	brcs	.+8      	; 0x1710 <log+0x3c>
    1708:	80 3e       	cpi	r24, 0xE0	; 224
    170a:	30 f0       	brcs	.+12     	; 0x1718 <log+0x44>
    170c:	21 96       	adiw	r28, 0x01	; 1
    170e:	8f 77       	andi	r24, 0x7F	; 127
    1710:	0f dd       	rcall	.-1506   	; 0x1130 <__addsf3>
    1712:	ee ea       	ldi	r30, 0xAE	; 174
    1714:	f1 e0       	ldi	r31, 0x01	; 1
    1716:	03 c0       	rjmp	.+6      	; 0x171e <log+0x4a>
    1718:	0b dd       	rcall	.-1514   	; 0x1130 <__addsf3>
    171a:	eb ed       	ldi	r30, 0xDB	; 219
    171c:	f1 e0       	ldi	r31, 0x01	; 1
    171e:	73 df       	rcall	.-282    	; 0x1606 <__fp_powser>
    1720:	8b 01       	movw	r16, r22
    1722:	be 01       	movw	r22, r28
    1724:	ec 01       	movw	r28, r24
    1726:	fb 2e       	mov	r15, r27
    1728:	6f 57       	subi	r22, 0x7F	; 127
    172a:	71 09       	sbc	r23, r1
    172c:	75 95       	asr	r23
    172e:	77 1f       	adc	r23, r23
    1730:	88 0b       	sbc	r24, r24
    1732:	99 0b       	sbc	r25, r25
    1734:	fc dd       	rcall	.-1032   	; 0x132e <__floatsisf>
    1736:	28 e1       	ldi	r18, 0x18	; 24
    1738:	32 e7       	ldi	r19, 0x72	; 114
    173a:	41 e3       	ldi	r20, 0x31	; 49
    173c:	5f e3       	ldi	r21, 0x3F	; 63
    173e:	8f de       	rcall	.-738    	; 0x145e <__mulsf3x>
    1740:	af 2d       	mov	r26, r15
    1742:	98 01       	movw	r18, r16
    1744:	ae 01       	movw	r20, r28
    1746:	ff 90       	pop	r15
    1748:	0f 91       	pop	r16
    174a:	1f 91       	pop	r17
    174c:	cf 91       	pop	r28
    174e:	df 91       	pop	r29
    1750:	00 dd       	rcall	.-1536   	; 0x1152 <__addsf3x>
    1752:	3f ce       	rjmp	.-898    	; 0x13d2 <__fp_round>

00001754 <modf>:
    1754:	fa 01       	movw	r30, r20
    1756:	dc 01       	movw	r26, r24
    1758:	aa 0f       	add	r26, r26
    175a:	bb 1f       	adc	r27, r27
    175c:	9b 01       	movw	r18, r22
    175e:	ac 01       	movw	r20, r24
    1760:	bf 57       	subi	r27, 0x7F	; 127
    1762:	28 f4       	brcc	.+10     	; 0x176e <modf+0x1a>
    1764:	22 27       	eor	r18, r18
    1766:	33 27       	eor	r19, r19
    1768:	44 27       	eor	r20, r20
    176a:	50 78       	andi	r21, 0x80	; 128
    176c:	1f c0       	rjmp	.+62     	; 0x17ac <modf+0x58>
    176e:	b7 51       	subi	r27, 0x17	; 23
    1770:	88 f4       	brcc	.+34     	; 0x1794 <modf+0x40>
    1772:	ab 2f       	mov	r26, r27
    1774:	00 24       	eor	r0, r0
    1776:	46 95       	lsr	r20
    1778:	37 95       	ror	r19
    177a:	27 95       	ror	r18
    177c:	01 1c       	adc	r0, r1
    177e:	a3 95       	inc	r26
    1780:	d2 f3       	brmi	.-12     	; 0x1776 <modf+0x22>
    1782:	00 20       	and	r0, r0
    1784:	69 f0       	breq	.+26     	; 0x17a0 <modf+0x4c>
    1786:	22 0f       	add	r18, r18
    1788:	33 1f       	adc	r19, r19
    178a:	44 1f       	adc	r20, r20
    178c:	b3 95       	inc	r27
    178e:	da f3       	brmi	.-10     	; 0x1786 <modf+0x32>
    1790:	0d d0       	rcall	.+26     	; 0x17ac <modf+0x58>
    1792:	cd cc       	rjmp	.-1638   	; 0x112e <__subsf3>
    1794:	61 30       	cpi	r22, 0x01	; 1
    1796:	71 05       	cpc	r23, r1
    1798:	a0 e8       	ldi	r26, 0x80	; 128
    179a:	8a 07       	cpc	r24, r26
    179c:	b9 46       	sbci	r27, 0x69	; 105
    179e:	30 f4       	brcc	.+12     	; 0x17ac <modf+0x58>
    17a0:	9b 01       	movw	r18, r22
    17a2:	ac 01       	movw	r20, r24
    17a4:	66 27       	eor	r22, r22
    17a6:	77 27       	eor	r23, r23
    17a8:	88 27       	eor	r24, r24
    17aa:	90 78       	andi	r25, 0x80	; 128
    17ac:	30 96       	adiw	r30, 0x00	; 0
    17ae:	21 f0       	breq	.+8      	; 0x17b8 <modf+0x64>
    17b0:	20 83       	st	Z, r18
    17b2:	31 83       	std	Z+1, r19	; 0x01
    17b4:	42 83       	std	Z+2, r20	; 0x02
    17b6:	53 83       	std	Z+3, r21	; 0x03
    17b8:	08 95       	ret

000017ba <__fp_mpack>:
    17ba:	9f 3f       	cpi	r25, 0xFF	; 255
    17bc:	31 f0       	breq	.+12     	; 0x17ca <__fp_mpack_finite+0xc>

000017be <__fp_mpack_finite>:
    17be:	91 50       	subi	r25, 0x01	; 1
    17c0:	20 f4       	brcc	.+8      	; 0x17ca <__fp_mpack_finite+0xc>
    17c2:	87 95       	ror	r24
    17c4:	77 95       	ror	r23
    17c6:	67 95       	ror	r22
    17c8:	b7 95       	ror	r27
    17ca:	88 0f       	add	r24, r24
    17cc:	91 1d       	adc	r25, r1
    17ce:	96 95       	lsr	r25
    17d0:	87 95       	ror	r24
    17d2:	97 f9       	bld	r25, 7
    17d4:	08 95       	ret

000017d6 <vfprintf>:
    17d6:	2f 92       	push	r2
    17d8:	3f 92       	push	r3
    17da:	4f 92       	push	r4
    17dc:	5f 92       	push	r5
    17de:	6f 92       	push	r6
    17e0:	7f 92       	push	r7
    17e2:	8f 92       	push	r8
    17e4:	9f 92       	push	r9
    17e6:	af 92       	push	r10
    17e8:	bf 92       	push	r11
    17ea:	cf 92       	push	r12
    17ec:	df 92       	push	r13
    17ee:	ef 92       	push	r14
    17f0:	ff 92       	push	r15
    17f2:	0f 93       	push	r16
    17f4:	1f 93       	push	r17
    17f6:	cf 93       	push	r28
    17f8:	df 93       	push	r29
    17fa:	cd b7       	in	r28, 0x3d	; 61
    17fc:	de b7       	in	r29, 0x3e	; 62
    17fe:	63 97       	sbiw	r28, 0x13	; 19
    1800:	0f b6       	in	r0, 0x3f	; 63
    1802:	f8 94       	cli
    1804:	de bf       	out	0x3e, r29	; 62
    1806:	0f be       	out	0x3f, r0	; 63
    1808:	cd bf       	out	0x3d, r28	; 61
    180a:	7c 01       	movw	r14, r24
    180c:	1b 01       	movw	r2, r22
    180e:	6a 01       	movw	r12, r20
    1810:	fc 01       	movw	r30, r24
    1812:	17 82       	std	Z+7, r1	; 0x07
    1814:	16 82       	std	Z+6, r1	; 0x06
    1816:	83 81       	ldd	r24, Z+3	; 0x03
    1818:	81 ff       	sbrs	r24, 1
    181a:	49 c3       	rjmp	.+1682   	; 0x1eae <vfprintf+0x6d8>
    181c:	be 01       	movw	r22, r28
    181e:	6f 5f       	subi	r22, 0xFF	; 255
    1820:	7f 4f       	sbci	r23, 0xFF	; 255
    1822:	4b 01       	movw	r8, r22
    1824:	f7 01       	movw	r30, r14
    1826:	93 81       	ldd	r25, Z+3	; 0x03
    1828:	f1 01       	movw	r30, r2
    182a:	93 fd       	sbrc	r25, 3
    182c:	85 91       	lpm	r24, Z+
    182e:	93 ff       	sbrs	r25, 3
    1830:	81 91       	ld	r24, Z+
    1832:	1f 01       	movw	r2, r30
    1834:	88 23       	and	r24, r24
    1836:	09 f4       	brne	.+2      	; 0x183a <vfprintf+0x64>
    1838:	36 c3       	rjmp	.+1644   	; 0x1ea6 <vfprintf+0x6d0>
    183a:	85 32       	cpi	r24, 0x25	; 37
    183c:	39 f4       	brne	.+14     	; 0x184c <vfprintf+0x76>
    183e:	93 fd       	sbrc	r25, 3
    1840:	85 91       	lpm	r24, Z+
    1842:	93 ff       	sbrs	r25, 3
    1844:	81 91       	ld	r24, Z+
    1846:	1f 01       	movw	r2, r30
    1848:	85 32       	cpi	r24, 0x25	; 37
    184a:	31 f4       	brne	.+12     	; 0x1858 <vfprintf+0x82>
    184c:	b7 01       	movw	r22, r14
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	96 d4       	rcall	.+2348   	; 0x217e <fputc>
    1852:	56 01       	movw	r10, r12
    1854:	65 01       	movw	r12, r10
    1856:	e6 cf       	rjmp	.-52     	; 0x1824 <vfprintf+0x4e>
    1858:	10 e0       	ldi	r17, 0x00	; 0
    185a:	51 2c       	mov	r5, r1
    185c:	20 e0       	ldi	r18, 0x00	; 0
    185e:	20 32       	cpi	r18, 0x20	; 32
    1860:	a0 f4       	brcc	.+40     	; 0x188a <vfprintf+0xb4>
    1862:	8b 32       	cpi	r24, 0x2B	; 43
    1864:	69 f0       	breq	.+26     	; 0x1880 <vfprintf+0xaa>
    1866:	30 f4       	brcc	.+12     	; 0x1874 <vfprintf+0x9e>
    1868:	80 32       	cpi	r24, 0x20	; 32
    186a:	59 f0       	breq	.+22     	; 0x1882 <vfprintf+0xac>
    186c:	83 32       	cpi	r24, 0x23	; 35
    186e:	69 f4       	brne	.+26     	; 0x188a <vfprintf+0xb4>
    1870:	20 61       	ori	r18, 0x10	; 16
    1872:	2c c0       	rjmp	.+88     	; 0x18cc <vfprintf+0xf6>
    1874:	8d 32       	cpi	r24, 0x2D	; 45
    1876:	39 f0       	breq	.+14     	; 0x1886 <vfprintf+0xb0>
    1878:	80 33       	cpi	r24, 0x30	; 48
    187a:	39 f4       	brne	.+14     	; 0x188a <vfprintf+0xb4>
    187c:	21 60       	ori	r18, 0x01	; 1
    187e:	26 c0       	rjmp	.+76     	; 0x18cc <vfprintf+0xf6>
    1880:	22 60       	ori	r18, 0x02	; 2
    1882:	24 60       	ori	r18, 0x04	; 4
    1884:	23 c0       	rjmp	.+70     	; 0x18cc <vfprintf+0xf6>
    1886:	28 60       	ori	r18, 0x08	; 8
    1888:	21 c0       	rjmp	.+66     	; 0x18cc <vfprintf+0xf6>
    188a:	27 fd       	sbrc	r18, 7
    188c:	27 c0       	rjmp	.+78     	; 0x18dc <vfprintf+0x106>
    188e:	30 ed       	ldi	r19, 0xD0	; 208
    1890:	38 0f       	add	r19, r24
    1892:	3a 30       	cpi	r19, 0x0A	; 10
    1894:	78 f4       	brcc	.+30     	; 0x18b4 <vfprintf+0xde>
    1896:	26 ff       	sbrs	r18, 6
    1898:	06 c0       	rjmp	.+12     	; 0x18a6 <vfprintf+0xd0>
    189a:	fa e0       	ldi	r31, 0x0A	; 10
    189c:	1f 9f       	mul	r17, r31
    189e:	30 0d       	add	r19, r0
    18a0:	11 24       	eor	r1, r1
    18a2:	13 2f       	mov	r17, r19
    18a4:	13 c0       	rjmp	.+38     	; 0x18cc <vfprintf+0xf6>
    18a6:	6a e0       	ldi	r22, 0x0A	; 10
    18a8:	56 9e       	mul	r5, r22
    18aa:	30 0d       	add	r19, r0
    18ac:	11 24       	eor	r1, r1
    18ae:	53 2e       	mov	r5, r19
    18b0:	20 62       	ori	r18, 0x20	; 32
    18b2:	0c c0       	rjmp	.+24     	; 0x18cc <vfprintf+0xf6>
    18b4:	8e 32       	cpi	r24, 0x2E	; 46
    18b6:	21 f4       	brne	.+8      	; 0x18c0 <vfprintf+0xea>
    18b8:	26 fd       	sbrc	r18, 6
    18ba:	f5 c2       	rjmp	.+1514   	; 0x1ea6 <vfprintf+0x6d0>
    18bc:	20 64       	ori	r18, 0x40	; 64
    18be:	06 c0       	rjmp	.+12     	; 0x18cc <vfprintf+0xf6>
    18c0:	8c 36       	cpi	r24, 0x6C	; 108
    18c2:	11 f4       	brne	.+4      	; 0x18c8 <vfprintf+0xf2>
    18c4:	20 68       	ori	r18, 0x80	; 128
    18c6:	02 c0       	rjmp	.+4      	; 0x18cc <vfprintf+0xf6>
    18c8:	88 36       	cpi	r24, 0x68	; 104
    18ca:	41 f4       	brne	.+16     	; 0x18dc <vfprintf+0x106>
    18cc:	f1 01       	movw	r30, r2
    18ce:	93 fd       	sbrc	r25, 3
    18d0:	85 91       	lpm	r24, Z+
    18d2:	93 ff       	sbrs	r25, 3
    18d4:	81 91       	ld	r24, Z+
    18d6:	1f 01       	movw	r2, r30
    18d8:	81 11       	cpse	r24, r1
    18da:	c1 cf       	rjmp	.-126    	; 0x185e <vfprintf+0x88>
    18dc:	9b eb       	ldi	r25, 0xBB	; 187
    18de:	98 0f       	add	r25, r24
    18e0:	93 30       	cpi	r25, 0x03	; 3
    18e2:	18 f4       	brcc	.+6      	; 0x18ea <vfprintf+0x114>
    18e4:	20 61       	ori	r18, 0x10	; 16
    18e6:	80 5e       	subi	r24, 0xE0	; 224
    18e8:	06 c0       	rjmp	.+12     	; 0x18f6 <vfprintf+0x120>
    18ea:	9b e9       	ldi	r25, 0x9B	; 155
    18ec:	98 0f       	add	r25, r24
    18ee:	93 30       	cpi	r25, 0x03	; 3
    18f0:	08 f0       	brcs	.+2      	; 0x18f4 <vfprintf+0x11e>
    18f2:	9a c1       	rjmp	.+820    	; 0x1c28 <vfprintf+0x452>
    18f4:	2f 7e       	andi	r18, 0xEF	; 239
    18f6:	26 ff       	sbrs	r18, 6
    18f8:	16 e0       	ldi	r17, 0x06	; 6
    18fa:	2f 73       	andi	r18, 0x3F	; 63
    18fc:	72 2e       	mov	r7, r18
    18fe:	85 36       	cpi	r24, 0x65	; 101
    1900:	21 f4       	brne	.+8      	; 0x190a <vfprintf+0x134>
    1902:	f2 2f       	mov	r31, r18
    1904:	f0 64       	ori	r31, 0x40	; 64
    1906:	7f 2e       	mov	r7, r31
    1908:	08 c0       	rjmp	.+16     	; 0x191a <vfprintf+0x144>
    190a:	86 36       	cpi	r24, 0x66	; 102
    190c:	21 f4       	brne	.+8      	; 0x1916 <vfprintf+0x140>
    190e:	62 2f       	mov	r22, r18
    1910:	60 68       	ori	r22, 0x80	; 128
    1912:	76 2e       	mov	r7, r22
    1914:	02 c0       	rjmp	.+4      	; 0x191a <vfprintf+0x144>
    1916:	11 11       	cpse	r17, r1
    1918:	11 50       	subi	r17, 0x01	; 1
    191a:	77 fe       	sbrs	r7, 7
    191c:	07 c0       	rjmp	.+14     	; 0x192c <vfprintf+0x156>
    191e:	1c 33       	cpi	r17, 0x3C	; 60
    1920:	48 f4       	brcc	.+18     	; 0x1934 <vfprintf+0x15e>
    1922:	44 24       	eor	r4, r4
    1924:	43 94       	inc	r4
    1926:	41 0e       	add	r4, r17
    1928:	27 e0       	ldi	r18, 0x07	; 7
    192a:	0b c0       	rjmp	.+22     	; 0x1942 <vfprintf+0x16c>
    192c:	18 30       	cpi	r17, 0x08	; 8
    192e:	30 f4       	brcc	.+12     	; 0x193c <vfprintf+0x166>
    1930:	21 2f       	mov	r18, r17
    1932:	06 c0       	rjmp	.+12     	; 0x1940 <vfprintf+0x16a>
    1934:	27 e0       	ldi	r18, 0x07	; 7
    1936:	4c e3       	ldi	r20, 0x3C	; 60
    1938:	44 2e       	mov	r4, r20
    193a:	03 c0       	rjmp	.+6      	; 0x1942 <vfprintf+0x16c>
    193c:	27 e0       	ldi	r18, 0x07	; 7
    193e:	17 e0       	ldi	r17, 0x07	; 7
    1940:	41 2c       	mov	r4, r1
    1942:	56 01       	movw	r10, r12
    1944:	74 e0       	ldi	r23, 0x04	; 4
    1946:	a7 0e       	add	r10, r23
    1948:	b1 1c       	adc	r11, r1
    194a:	f6 01       	movw	r30, r12
    194c:	60 81       	ld	r22, Z
    194e:	71 81       	ldd	r23, Z+1	; 0x01
    1950:	82 81       	ldd	r24, Z+2	; 0x02
    1952:	93 81       	ldd	r25, Z+3	; 0x03
    1954:	04 2d       	mov	r16, r4
    1956:	a4 01       	movw	r20, r8
    1958:	da d2       	rcall	.+1460   	; 0x1f0e <__ftoa_engine>
    195a:	6c 01       	movw	r12, r24
    195c:	09 81       	ldd	r16, Y+1	; 0x01
    195e:	00 ff       	sbrs	r16, 0
    1960:	02 c0       	rjmp	.+4      	; 0x1966 <vfprintf+0x190>
    1962:	03 ff       	sbrs	r16, 3
    1964:	06 c0       	rjmp	.+12     	; 0x1972 <vfprintf+0x19c>
    1966:	71 fc       	sbrc	r7, 1
    1968:	07 c0       	rjmp	.+14     	; 0x1978 <vfprintf+0x1a2>
    196a:	72 fc       	sbrc	r7, 2
    196c:	08 c0       	rjmp	.+16     	; 0x197e <vfprintf+0x1a8>
    196e:	61 2c       	mov	r6, r1
    1970:	08 c0       	rjmp	.+16     	; 0x1982 <vfprintf+0x1ac>
    1972:	3d e2       	ldi	r19, 0x2D	; 45
    1974:	63 2e       	mov	r6, r19
    1976:	05 c0       	rjmp	.+10     	; 0x1982 <vfprintf+0x1ac>
    1978:	2b e2       	ldi	r18, 0x2B	; 43
    197a:	62 2e       	mov	r6, r18
    197c:	02 c0       	rjmp	.+4      	; 0x1982 <vfprintf+0x1ac>
    197e:	90 e2       	ldi	r25, 0x20	; 32
    1980:	69 2e       	mov	r6, r25
    1982:	80 2f       	mov	r24, r16
    1984:	8c 70       	andi	r24, 0x0C	; 12
    1986:	81 f1       	breq	.+96     	; 0x19e8 <vfprintf+0x212>
    1988:	66 20       	and	r6, r6
    198a:	11 f0       	breq	.+4      	; 0x1990 <vfprintf+0x1ba>
    198c:	84 e0       	ldi	r24, 0x04	; 4
    198e:	01 c0       	rjmp	.+2      	; 0x1992 <vfprintf+0x1bc>
    1990:	83 e0       	ldi	r24, 0x03	; 3
    1992:	85 15       	cp	r24, r5
    1994:	10 f0       	brcs	.+4      	; 0x199a <vfprintf+0x1c4>
    1996:	51 2c       	mov	r5, r1
    1998:	0a c0       	rjmp	.+20     	; 0x19ae <vfprintf+0x1d8>
    199a:	58 1a       	sub	r5, r24
    199c:	73 fc       	sbrc	r7, 3
    199e:	07 c0       	rjmp	.+14     	; 0x19ae <vfprintf+0x1d8>
    19a0:	b7 01       	movw	r22, r14
    19a2:	80 e2       	ldi	r24, 0x20	; 32
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	eb d3       	rcall	.+2006   	; 0x217e <fputc>
    19a8:	5a 94       	dec	r5
    19aa:	d1 f7       	brne	.-12     	; 0x19a0 <vfprintf+0x1ca>
    19ac:	f4 cf       	rjmp	.-24     	; 0x1996 <vfprintf+0x1c0>
    19ae:	66 20       	and	r6, r6
    19b0:	21 f0       	breq	.+8      	; 0x19ba <vfprintf+0x1e4>
    19b2:	b7 01       	movw	r22, r14
    19b4:	86 2d       	mov	r24, r6
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	e2 d3       	rcall	.+1988   	; 0x217e <fputc>
    19ba:	03 fd       	sbrc	r16, 3
    19bc:	03 c0       	rjmp	.+6      	; 0x19c4 <vfprintf+0x1ee>
    19be:	0c e0       	ldi	r16, 0x0C	; 12
    19c0:	12 e0       	ldi	r17, 0x02	; 2
    19c2:	02 c0       	rjmp	.+4      	; 0x19c8 <vfprintf+0x1f2>
    19c4:	08 e0       	ldi	r16, 0x08	; 8
    19c6:	12 e0       	ldi	r17, 0x02	; 2
    19c8:	f7 2d       	mov	r31, r7
    19ca:	f0 71       	andi	r31, 0x10	; 16
    19cc:	7f 2e       	mov	r7, r31
    19ce:	f8 01       	movw	r30, r16
    19d0:	84 91       	lpm	r24, Z
    19d2:	88 23       	and	r24, r24
    19d4:	09 f4       	brne	.+2      	; 0x19d8 <vfprintf+0x202>
    19d6:	5e c2       	rjmp	.+1212   	; 0x1e94 <vfprintf+0x6be>
    19d8:	71 10       	cpse	r7, r1
    19da:	80 52       	subi	r24, 0x20	; 32
    19dc:	b7 01       	movw	r22, r14
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	ce d3       	rcall	.+1948   	; 0x217e <fputc>
    19e2:	0f 5f       	subi	r16, 0xFF	; 255
    19e4:	1f 4f       	sbci	r17, 0xFF	; 255
    19e6:	f3 cf       	rjmp	.-26     	; 0x19ce <vfprintf+0x1f8>
    19e8:	77 fe       	sbrs	r7, 7
    19ea:	0f c0       	rjmp	.+30     	; 0x1a0a <vfprintf+0x234>
    19ec:	4c 0c       	add	r4, r12
    19ee:	04 ff       	sbrs	r16, 4
    19f0:	04 c0       	rjmp	.+8      	; 0x19fa <vfprintf+0x224>
    19f2:	8a 81       	ldd	r24, Y+2	; 0x02
    19f4:	81 33       	cpi	r24, 0x31	; 49
    19f6:	09 f4       	brne	.+2      	; 0x19fa <vfprintf+0x224>
    19f8:	4a 94       	dec	r4
    19fa:	14 14       	cp	r1, r4
    19fc:	74 f5       	brge	.+92     	; 0x1a5a <vfprintf+0x284>
    19fe:	f8 e0       	ldi	r31, 0x08	; 8
    1a00:	f4 15       	cp	r31, r4
    1a02:	78 f5       	brcc	.+94     	; 0x1a62 <vfprintf+0x28c>
    1a04:	88 e0       	ldi	r24, 0x08	; 8
    1a06:	48 2e       	mov	r4, r24
    1a08:	2c c0       	rjmp	.+88     	; 0x1a62 <vfprintf+0x28c>
    1a0a:	76 fc       	sbrc	r7, 6
    1a0c:	2a c0       	rjmp	.+84     	; 0x1a62 <vfprintf+0x28c>
    1a0e:	81 2f       	mov	r24, r17
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	8c 15       	cp	r24, r12
    1a14:	9d 05       	cpc	r25, r13
    1a16:	9c f0       	brlt	.+38     	; 0x1a3e <vfprintf+0x268>
    1a18:	6c ef       	ldi	r22, 0xFC	; 252
    1a1a:	c6 16       	cp	r12, r22
    1a1c:	6f ef       	ldi	r22, 0xFF	; 255
    1a1e:	d6 06       	cpc	r13, r22
    1a20:	74 f0       	brlt	.+28     	; 0x1a3e <vfprintf+0x268>
    1a22:	77 2d       	mov	r23, r7
    1a24:	70 68       	ori	r23, 0x80	; 128
    1a26:	77 2e       	mov	r7, r23
    1a28:	0a c0       	rjmp	.+20     	; 0x1a3e <vfprintf+0x268>
    1a2a:	e2 e0       	ldi	r30, 0x02	; 2
    1a2c:	f0 e0       	ldi	r31, 0x00	; 0
    1a2e:	ec 0f       	add	r30, r28
    1a30:	fd 1f       	adc	r31, r29
    1a32:	e1 0f       	add	r30, r17
    1a34:	f1 1d       	adc	r31, r1
    1a36:	80 81       	ld	r24, Z
    1a38:	80 33       	cpi	r24, 0x30	; 48
    1a3a:	19 f4       	brne	.+6      	; 0x1a42 <vfprintf+0x26c>
    1a3c:	11 50       	subi	r17, 0x01	; 1
    1a3e:	11 11       	cpse	r17, r1
    1a40:	f4 cf       	rjmp	.-24     	; 0x1a2a <vfprintf+0x254>
    1a42:	77 fe       	sbrs	r7, 7
    1a44:	0e c0       	rjmp	.+28     	; 0x1a62 <vfprintf+0x28c>
    1a46:	44 24       	eor	r4, r4
    1a48:	43 94       	inc	r4
    1a4a:	41 0e       	add	r4, r17
    1a4c:	81 2f       	mov	r24, r17
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	c8 16       	cp	r12, r24
    1a52:	d9 06       	cpc	r13, r25
    1a54:	2c f4       	brge	.+10     	; 0x1a60 <vfprintf+0x28a>
    1a56:	1c 19       	sub	r17, r12
    1a58:	04 c0       	rjmp	.+8      	; 0x1a62 <vfprintf+0x28c>
    1a5a:	44 24       	eor	r4, r4
    1a5c:	43 94       	inc	r4
    1a5e:	01 c0       	rjmp	.+2      	; 0x1a62 <vfprintf+0x28c>
    1a60:	10 e0       	ldi	r17, 0x00	; 0
    1a62:	77 fe       	sbrs	r7, 7
    1a64:	07 c0       	rjmp	.+14     	; 0x1a74 <vfprintf+0x29e>
    1a66:	1c 14       	cp	r1, r12
    1a68:	1d 04       	cpc	r1, r13
    1a6a:	3c f4       	brge	.+14     	; 0x1a7a <vfprintf+0x2a4>
    1a6c:	96 01       	movw	r18, r12
    1a6e:	2f 5f       	subi	r18, 0xFF	; 255
    1a70:	3f 4f       	sbci	r19, 0xFF	; 255
    1a72:	05 c0       	rjmp	.+10     	; 0x1a7e <vfprintf+0x2a8>
    1a74:	25 e0       	ldi	r18, 0x05	; 5
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	02 c0       	rjmp	.+4      	; 0x1a7e <vfprintf+0x2a8>
    1a7a:	21 e0       	ldi	r18, 0x01	; 1
    1a7c:	30 e0       	ldi	r19, 0x00	; 0
    1a7e:	66 20       	and	r6, r6
    1a80:	11 f0       	breq	.+4      	; 0x1a86 <vfprintf+0x2b0>
    1a82:	2f 5f       	subi	r18, 0xFF	; 255
    1a84:	3f 4f       	sbci	r19, 0xFF	; 255
    1a86:	11 23       	and	r17, r17
    1a88:	31 f0       	breq	.+12     	; 0x1a96 <vfprintf+0x2c0>
    1a8a:	41 2f       	mov	r20, r17
    1a8c:	50 e0       	ldi	r21, 0x00	; 0
    1a8e:	4f 5f       	subi	r20, 0xFF	; 255
    1a90:	5f 4f       	sbci	r21, 0xFF	; 255
    1a92:	24 0f       	add	r18, r20
    1a94:	35 1f       	adc	r19, r21
    1a96:	45 2d       	mov	r20, r5
    1a98:	50 e0       	ldi	r21, 0x00	; 0
    1a9a:	24 17       	cp	r18, r20
    1a9c:	35 07       	cpc	r19, r21
    1a9e:	14 f4       	brge	.+4      	; 0x1aa4 <vfprintf+0x2ce>
    1aa0:	52 1a       	sub	r5, r18
    1aa2:	01 c0       	rjmp	.+2      	; 0x1aa6 <vfprintf+0x2d0>
    1aa4:	51 2c       	mov	r5, r1
    1aa6:	87 2d       	mov	r24, r7
    1aa8:	89 70       	andi	r24, 0x09	; 9
    1aaa:	41 f4       	brne	.+16     	; 0x1abc <vfprintf+0x2e6>
    1aac:	55 20       	and	r5, r5
    1aae:	31 f0       	breq	.+12     	; 0x1abc <vfprintf+0x2e6>
    1ab0:	b7 01       	movw	r22, r14
    1ab2:	80 e2       	ldi	r24, 0x20	; 32
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	63 d3       	rcall	.+1734   	; 0x217e <fputc>
    1ab8:	5a 94       	dec	r5
    1aba:	f8 cf       	rjmp	.-16     	; 0x1aac <vfprintf+0x2d6>
    1abc:	66 20       	and	r6, r6
    1abe:	21 f0       	breq	.+8      	; 0x1ac8 <vfprintf+0x2f2>
    1ac0:	b7 01       	movw	r22, r14
    1ac2:	86 2d       	mov	r24, r6
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	5b d3       	rcall	.+1718   	; 0x217e <fputc>
    1ac8:	73 fc       	sbrc	r7, 3
    1aca:	08 c0       	rjmp	.+16     	; 0x1adc <vfprintf+0x306>
    1acc:	55 20       	and	r5, r5
    1ace:	31 f0       	breq	.+12     	; 0x1adc <vfprintf+0x306>
    1ad0:	b7 01       	movw	r22, r14
    1ad2:	80 e3       	ldi	r24, 0x30	; 48
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	53 d3       	rcall	.+1702   	; 0x217e <fputc>
    1ad8:	5a 94       	dec	r5
    1ada:	f8 cf       	rjmp	.-16     	; 0x1acc <vfprintf+0x2f6>
    1adc:	77 fe       	sbrs	r7, 7
    1ade:	5d c0       	rjmp	.+186    	; 0x1b9a <vfprintf+0x3c4>
    1ae0:	9c 2d       	mov	r25, r12
    1ae2:	8d 2d       	mov	r24, r13
    1ae4:	d7 fe       	sbrs	r13, 7
    1ae6:	02 c0       	rjmp	.+4      	; 0x1aec <vfprintf+0x316>
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	80 e0       	ldi	r24, 0x00	; 0
    1aec:	69 2e       	mov	r6, r25
    1aee:	78 2e       	mov	r7, r24
    1af0:	40 e0       	ldi	r20, 0x00	; 0
    1af2:	50 e0       	ldi	r21, 0x00	; 0
    1af4:	c6 01       	movw	r24, r12
    1af6:	84 19       	sub	r24, r4
    1af8:	91 09       	sbc	r25, r1
    1afa:	9d 87       	std	Y+13, r25	; 0x0d
    1afc:	8c 87       	std	Y+12, r24	; 0x0c
    1afe:	96 01       	movw	r18, r12
    1b00:	26 19       	sub	r18, r6
    1b02:	37 09       	sbc	r19, r7
    1b04:	28 0d       	add	r18, r8
    1b06:	39 1d       	adc	r19, r9
    1b08:	81 2f       	mov	r24, r17
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	ee 27       	eor	r30, r30
    1b0e:	ff 27       	eor	r31, r31
    1b10:	e8 1b       	sub	r30, r24
    1b12:	f9 0b       	sbc	r31, r25
    1b14:	ff 87       	std	Y+15, r31	; 0x0f
    1b16:	ee 87       	std	Y+14, r30	; 0x0e
    1b18:	ff ef       	ldi	r31, 0xFF	; 255
    1b1a:	6f 16       	cp	r6, r31
    1b1c:	7f 06       	cpc	r7, r31
    1b1e:	61 f4       	brne	.+24     	; 0x1b38 <vfprintf+0x362>
    1b20:	b7 01       	movw	r22, r14
    1b22:	8e e2       	ldi	r24, 0x2E	; 46
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	2b 8b       	std	Y+19, r18	; 0x13
    1b28:	3a 8b       	std	Y+18, r19	; 0x12
    1b2a:	48 8b       	std	Y+16, r20	; 0x10
    1b2c:	59 8b       	std	Y+17, r21	; 0x11
    1b2e:	27 d3       	rcall	.+1614   	; 0x217e <fputc>
    1b30:	59 89       	ldd	r21, Y+17	; 0x11
    1b32:	48 89       	ldd	r20, Y+16	; 0x10
    1b34:	3a 89       	ldd	r19, Y+18	; 0x12
    1b36:	2b 89       	ldd	r18, Y+19	; 0x13
    1b38:	c6 14       	cp	r12, r6
    1b3a:	d7 04       	cpc	r13, r7
    1b3c:	54 f0       	brlt	.+20     	; 0x1b52 <vfprintf+0x37c>
    1b3e:	6c 85       	ldd	r22, Y+12	; 0x0c
    1b40:	7d 85       	ldd	r23, Y+13	; 0x0d
    1b42:	66 15       	cp	r22, r6
    1b44:	77 05       	cpc	r23, r7
    1b46:	2c f4       	brge	.+10     	; 0x1b52 <vfprintf+0x37c>
    1b48:	f9 01       	movw	r30, r18
    1b4a:	e4 0f       	add	r30, r20
    1b4c:	f5 1f       	adc	r31, r21
    1b4e:	81 81       	ldd	r24, Z+1	; 0x01
    1b50:	01 c0       	rjmp	.+2      	; 0x1b54 <vfprintf+0x37e>
    1b52:	80 e3       	ldi	r24, 0x30	; 48
    1b54:	71 e0       	ldi	r23, 0x01	; 1
    1b56:	67 1a       	sub	r6, r23
    1b58:	71 08       	sbc	r7, r1
    1b5a:	4f 5f       	subi	r20, 0xFF	; 255
    1b5c:	5f 4f       	sbci	r21, 0xFF	; 255
    1b5e:	ee 85       	ldd	r30, Y+14	; 0x0e
    1b60:	ff 85       	ldd	r31, Y+15	; 0x0f
    1b62:	6e 16       	cp	r6, r30
    1b64:	7f 06       	cpc	r7, r31
    1b66:	64 f0       	brlt	.+24     	; 0x1b80 <vfprintf+0x3aa>
    1b68:	b7 01       	movw	r22, r14
    1b6a:	90 e0       	ldi	r25, 0x00	; 0
    1b6c:	2b 8b       	std	Y+19, r18	; 0x13
    1b6e:	3a 8b       	std	Y+18, r19	; 0x12
    1b70:	48 8b       	std	Y+16, r20	; 0x10
    1b72:	59 8b       	std	Y+17, r21	; 0x11
    1b74:	04 d3       	rcall	.+1544   	; 0x217e <fputc>
    1b76:	2b 89       	ldd	r18, Y+19	; 0x13
    1b78:	3a 89       	ldd	r19, Y+18	; 0x12
    1b7a:	48 89       	ldd	r20, Y+16	; 0x10
    1b7c:	59 89       	ldd	r21, Y+17	; 0x11
    1b7e:	cc cf       	rjmp	.-104    	; 0x1b18 <vfprintf+0x342>
    1b80:	6c 14       	cp	r6, r12
    1b82:	7d 04       	cpc	r7, r13
    1b84:	39 f4       	brne	.+14     	; 0x1b94 <vfprintf+0x3be>
    1b86:	9a 81       	ldd	r25, Y+2	; 0x02
    1b88:	96 33       	cpi	r25, 0x36	; 54
    1b8a:	18 f4       	brcc	.+6      	; 0x1b92 <vfprintf+0x3bc>
    1b8c:	95 33       	cpi	r25, 0x35	; 53
    1b8e:	11 f4       	brne	.+4      	; 0x1b94 <vfprintf+0x3be>
    1b90:	04 ff       	sbrs	r16, 4
    1b92:	81 e3       	ldi	r24, 0x31	; 49
    1b94:	b7 01       	movw	r22, r14
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	45 c0       	rjmp	.+138    	; 0x1c24 <vfprintf+0x44e>
    1b9a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b9c:	81 33       	cpi	r24, 0x31	; 49
    1b9e:	09 f0       	breq	.+2      	; 0x1ba2 <vfprintf+0x3cc>
    1ba0:	0f 7e       	andi	r16, 0xEF	; 239
    1ba2:	b7 01       	movw	r22, r14
    1ba4:	90 e0       	ldi	r25, 0x00	; 0
    1ba6:	eb d2       	rcall	.+1494   	; 0x217e <fputc>
    1ba8:	11 11       	cpse	r17, r1
    1baa:	05 c0       	rjmp	.+10     	; 0x1bb6 <vfprintf+0x3e0>
    1bac:	74 fe       	sbrs	r7, 4
    1bae:	16 c0       	rjmp	.+44     	; 0x1bdc <vfprintf+0x406>
    1bb0:	85 e4       	ldi	r24, 0x45	; 69
    1bb2:	90 e0       	ldi	r25, 0x00	; 0
    1bb4:	15 c0       	rjmp	.+42     	; 0x1be0 <vfprintf+0x40a>
    1bb6:	b7 01       	movw	r22, r14
    1bb8:	8e e2       	ldi	r24, 0x2E	; 46
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	e0 d2       	rcall	.+1472   	; 0x217e <fputc>
    1bbe:	82 e0       	ldi	r24, 0x02	; 2
    1bc0:	66 24       	eor	r6, r6
    1bc2:	63 94       	inc	r6
    1bc4:	68 0e       	add	r6, r24
    1bc6:	f4 01       	movw	r30, r8
    1bc8:	e8 0f       	add	r30, r24
    1bca:	f1 1d       	adc	r31, r1
    1bcc:	80 81       	ld	r24, Z
    1bce:	b7 01       	movw	r22, r14
    1bd0:	90 e0       	ldi	r25, 0x00	; 0
    1bd2:	d5 d2       	rcall	.+1450   	; 0x217e <fputc>
    1bd4:	11 50       	subi	r17, 0x01	; 1
    1bd6:	51 f3       	breq	.-44     	; 0x1bac <vfprintf+0x3d6>
    1bd8:	86 2d       	mov	r24, r6
    1bda:	f2 cf       	rjmp	.-28     	; 0x1bc0 <vfprintf+0x3ea>
    1bdc:	85 e6       	ldi	r24, 0x65	; 101
    1bde:	90 e0       	ldi	r25, 0x00	; 0
    1be0:	b7 01       	movw	r22, r14
    1be2:	cd d2       	rcall	.+1434   	; 0x217e <fputc>
    1be4:	d7 fc       	sbrc	r13, 7
    1be6:	05 c0       	rjmp	.+10     	; 0x1bf2 <vfprintf+0x41c>
    1be8:	c1 14       	cp	r12, r1
    1bea:	d1 04       	cpc	r13, r1
    1bec:	39 f4       	brne	.+14     	; 0x1bfc <vfprintf+0x426>
    1bee:	04 ff       	sbrs	r16, 4
    1bf0:	05 c0       	rjmp	.+10     	; 0x1bfc <vfprintf+0x426>
    1bf2:	d1 94       	neg	r13
    1bf4:	c1 94       	neg	r12
    1bf6:	d1 08       	sbc	r13, r1
    1bf8:	8d e2       	ldi	r24, 0x2D	; 45
    1bfa:	01 c0       	rjmp	.+2      	; 0x1bfe <vfprintf+0x428>
    1bfc:	8b e2       	ldi	r24, 0x2B	; 43
    1bfe:	b7 01       	movw	r22, r14
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	bd d2       	rcall	.+1402   	; 0x217e <fputc>
    1c04:	80 e3       	ldi	r24, 0x30	; 48
    1c06:	6a e0       	ldi	r22, 0x0A	; 10
    1c08:	c6 16       	cp	r12, r22
    1c0a:	d1 04       	cpc	r13, r1
    1c0c:	2c f0       	brlt	.+10     	; 0x1c18 <vfprintf+0x442>
    1c0e:	8f 5f       	subi	r24, 0xFF	; 255
    1c10:	fa e0       	ldi	r31, 0x0A	; 10
    1c12:	cf 1a       	sub	r12, r31
    1c14:	d1 08       	sbc	r13, r1
    1c16:	f7 cf       	rjmp	.-18     	; 0x1c06 <vfprintf+0x430>
    1c18:	b7 01       	movw	r22, r14
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	b0 d2       	rcall	.+1376   	; 0x217e <fputc>
    1c1e:	b7 01       	movw	r22, r14
    1c20:	c6 01       	movw	r24, r12
    1c22:	c0 96       	adiw	r24, 0x30	; 48
    1c24:	ac d2       	rcall	.+1368   	; 0x217e <fputc>
    1c26:	36 c1       	rjmp	.+620    	; 0x1e94 <vfprintf+0x6be>
    1c28:	83 36       	cpi	r24, 0x63	; 99
    1c2a:	31 f0       	breq	.+12     	; 0x1c38 <vfprintf+0x462>
    1c2c:	83 37       	cpi	r24, 0x73	; 115
    1c2e:	79 f0       	breq	.+30     	; 0x1c4e <vfprintf+0x478>
    1c30:	83 35       	cpi	r24, 0x53	; 83
    1c32:	09 f0       	breq	.+2      	; 0x1c36 <vfprintf+0x460>
    1c34:	54 c0       	rjmp	.+168    	; 0x1cde <vfprintf+0x508>
    1c36:	20 c0       	rjmp	.+64     	; 0x1c78 <vfprintf+0x4a2>
    1c38:	56 01       	movw	r10, r12
    1c3a:	72 e0       	ldi	r23, 0x02	; 2
    1c3c:	a7 0e       	add	r10, r23
    1c3e:	b1 1c       	adc	r11, r1
    1c40:	f6 01       	movw	r30, r12
    1c42:	80 81       	ld	r24, Z
    1c44:	89 83       	std	Y+1, r24	; 0x01
    1c46:	01 e0       	ldi	r16, 0x01	; 1
    1c48:	10 e0       	ldi	r17, 0x00	; 0
    1c4a:	64 01       	movw	r12, r8
    1c4c:	13 c0       	rjmp	.+38     	; 0x1c74 <vfprintf+0x49e>
    1c4e:	56 01       	movw	r10, r12
    1c50:	f2 e0       	ldi	r31, 0x02	; 2
    1c52:	af 0e       	add	r10, r31
    1c54:	b1 1c       	adc	r11, r1
    1c56:	f6 01       	movw	r30, r12
    1c58:	c0 80       	ld	r12, Z
    1c5a:	d1 80       	ldd	r13, Z+1	; 0x01
    1c5c:	26 ff       	sbrs	r18, 6
    1c5e:	03 c0       	rjmp	.+6      	; 0x1c66 <vfprintf+0x490>
    1c60:	61 2f       	mov	r22, r17
    1c62:	70 e0       	ldi	r23, 0x00	; 0
    1c64:	02 c0       	rjmp	.+4      	; 0x1c6a <vfprintf+0x494>
    1c66:	6f ef       	ldi	r22, 0xFF	; 255
    1c68:	7f ef       	ldi	r23, 0xFF	; 255
    1c6a:	c6 01       	movw	r24, r12
    1c6c:	2b 8b       	std	Y+19, r18	; 0x13
    1c6e:	32 d2       	rcall	.+1124   	; 0x20d4 <strnlen>
    1c70:	8c 01       	movw	r16, r24
    1c72:	2b 89       	ldd	r18, Y+19	; 0x13
    1c74:	2f 77       	andi	r18, 0x7F	; 127
    1c76:	14 c0       	rjmp	.+40     	; 0x1ca0 <vfprintf+0x4ca>
    1c78:	56 01       	movw	r10, r12
    1c7a:	f2 e0       	ldi	r31, 0x02	; 2
    1c7c:	af 0e       	add	r10, r31
    1c7e:	b1 1c       	adc	r11, r1
    1c80:	f6 01       	movw	r30, r12
    1c82:	c0 80       	ld	r12, Z
    1c84:	d1 80       	ldd	r13, Z+1	; 0x01
    1c86:	26 ff       	sbrs	r18, 6
    1c88:	03 c0       	rjmp	.+6      	; 0x1c90 <vfprintf+0x4ba>
    1c8a:	61 2f       	mov	r22, r17
    1c8c:	70 e0       	ldi	r23, 0x00	; 0
    1c8e:	02 c0       	rjmp	.+4      	; 0x1c94 <vfprintf+0x4be>
    1c90:	6f ef       	ldi	r22, 0xFF	; 255
    1c92:	7f ef       	ldi	r23, 0xFF	; 255
    1c94:	c6 01       	movw	r24, r12
    1c96:	2b 8b       	std	Y+19, r18	; 0x13
    1c98:	12 d2       	rcall	.+1060   	; 0x20be <strnlen_P>
    1c9a:	8c 01       	movw	r16, r24
    1c9c:	2b 89       	ldd	r18, Y+19	; 0x13
    1c9e:	20 68       	ori	r18, 0x80	; 128
    1ca0:	72 2e       	mov	r7, r18
    1ca2:	23 fd       	sbrc	r18, 3
    1ca4:	18 c0       	rjmp	.+48     	; 0x1cd6 <vfprintf+0x500>
    1ca6:	85 2d       	mov	r24, r5
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	08 17       	cp	r16, r24
    1cac:	19 07       	cpc	r17, r25
    1cae:	98 f4       	brcc	.+38     	; 0x1cd6 <vfprintf+0x500>
    1cb0:	b7 01       	movw	r22, r14
    1cb2:	80 e2       	ldi	r24, 0x20	; 32
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	63 d2       	rcall	.+1222   	; 0x217e <fputc>
    1cb8:	5a 94       	dec	r5
    1cba:	f5 cf       	rjmp	.-22     	; 0x1ca6 <vfprintf+0x4d0>
    1cbc:	f6 01       	movw	r30, r12
    1cbe:	77 fc       	sbrc	r7, 7
    1cc0:	85 91       	lpm	r24, Z+
    1cc2:	77 fe       	sbrs	r7, 7
    1cc4:	81 91       	ld	r24, Z+
    1cc6:	6f 01       	movw	r12, r30
    1cc8:	b7 01       	movw	r22, r14
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	58 d2       	rcall	.+1200   	; 0x217e <fputc>
    1cce:	51 10       	cpse	r5, r1
    1cd0:	5a 94       	dec	r5
    1cd2:	01 50       	subi	r16, 0x01	; 1
    1cd4:	11 09       	sbc	r17, r1
    1cd6:	01 15       	cp	r16, r1
    1cd8:	11 05       	cpc	r17, r1
    1cda:	81 f7       	brne	.-32     	; 0x1cbc <vfprintf+0x4e6>
    1cdc:	db c0       	rjmp	.+438    	; 0x1e94 <vfprintf+0x6be>
    1cde:	84 36       	cpi	r24, 0x64	; 100
    1ce0:	11 f0       	breq	.+4      	; 0x1ce6 <vfprintf+0x510>
    1ce2:	89 36       	cpi	r24, 0x69	; 105
    1ce4:	49 f5       	brne	.+82     	; 0x1d38 <vfprintf+0x562>
    1ce6:	56 01       	movw	r10, r12
    1ce8:	27 ff       	sbrs	r18, 7
    1cea:	09 c0       	rjmp	.+18     	; 0x1cfe <vfprintf+0x528>
    1cec:	f4 e0       	ldi	r31, 0x04	; 4
    1cee:	af 0e       	add	r10, r31
    1cf0:	b1 1c       	adc	r11, r1
    1cf2:	f6 01       	movw	r30, r12
    1cf4:	60 81       	ld	r22, Z
    1cf6:	71 81       	ldd	r23, Z+1	; 0x01
    1cf8:	82 81       	ldd	r24, Z+2	; 0x02
    1cfa:	93 81       	ldd	r25, Z+3	; 0x03
    1cfc:	0a c0       	rjmp	.+20     	; 0x1d12 <vfprintf+0x53c>
    1cfe:	f2 e0       	ldi	r31, 0x02	; 2
    1d00:	af 0e       	add	r10, r31
    1d02:	b1 1c       	adc	r11, r1
    1d04:	f6 01       	movw	r30, r12
    1d06:	60 81       	ld	r22, Z
    1d08:	71 81       	ldd	r23, Z+1	; 0x01
    1d0a:	88 27       	eor	r24, r24
    1d0c:	77 fd       	sbrc	r23, 7
    1d0e:	80 95       	com	r24
    1d10:	98 2f       	mov	r25, r24
    1d12:	02 2f       	mov	r16, r18
    1d14:	0f 76       	andi	r16, 0x6F	; 111
    1d16:	97 ff       	sbrs	r25, 7
    1d18:	08 c0       	rjmp	.+16     	; 0x1d2a <vfprintf+0x554>
    1d1a:	90 95       	com	r25
    1d1c:	80 95       	com	r24
    1d1e:	70 95       	com	r23
    1d20:	61 95       	neg	r22
    1d22:	7f 4f       	sbci	r23, 0xFF	; 255
    1d24:	8f 4f       	sbci	r24, 0xFF	; 255
    1d26:	9f 4f       	sbci	r25, 0xFF	; 255
    1d28:	00 68       	ori	r16, 0x80	; 128
    1d2a:	2a e0       	ldi	r18, 0x0A	; 10
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	a4 01       	movw	r20, r8
    1d30:	96 d2       	rcall	.+1324   	; 0x225e <__ultoa_invert>
    1d32:	c8 2e       	mov	r12, r24
    1d34:	c8 18       	sub	r12, r8
    1d36:	3d c0       	rjmp	.+122    	; 0x1db2 <vfprintf+0x5dc>
    1d38:	02 2f       	mov	r16, r18
    1d3a:	85 37       	cpi	r24, 0x75	; 117
    1d3c:	21 f4       	brne	.+8      	; 0x1d46 <vfprintf+0x570>
    1d3e:	0f 7e       	andi	r16, 0xEF	; 239
    1d40:	2a e0       	ldi	r18, 0x0A	; 10
    1d42:	30 e0       	ldi	r19, 0x00	; 0
    1d44:	1d c0       	rjmp	.+58     	; 0x1d80 <vfprintf+0x5aa>
    1d46:	09 7f       	andi	r16, 0xF9	; 249
    1d48:	8f 36       	cpi	r24, 0x6F	; 111
    1d4a:	91 f0       	breq	.+36     	; 0x1d70 <vfprintf+0x59a>
    1d4c:	18 f4       	brcc	.+6      	; 0x1d54 <vfprintf+0x57e>
    1d4e:	88 35       	cpi	r24, 0x58	; 88
    1d50:	59 f0       	breq	.+22     	; 0x1d68 <vfprintf+0x592>
    1d52:	a9 c0       	rjmp	.+338    	; 0x1ea6 <vfprintf+0x6d0>
    1d54:	80 37       	cpi	r24, 0x70	; 112
    1d56:	19 f0       	breq	.+6      	; 0x1d5e <vfprintf+0x588>
    1d58:	88 37       	cpi	r24, 0x78	; 120
    1d5a:	11 f0       	breq	.+4      	; 0x1d60 <vfprintf+0x58a>
    1d5c:	a4 c0       	rjmp	.+328    	; 0x1ea6 <vfprintf+0x6d0>
    1d5e:	00 61       	ori	r16, 0x10	; 16
    1d60:	04 ff       	sbrs	r16, 4
    1d62:	09 c0       	rjmp	.+18     	; 0x1d76 <vfprintf+0x5a0>
    1d64:	04 60       	ori	r16, 0x04	; 4
    1d66:	07 c0       	rjmp	.+14     	; 0x1d76 <vfprintf+0x5a0>
    1d68:	24 ff       	sbrs	r18, 4
    1d6a:	08 c0       	rjmp	.+16     	; 0x1d7c <vfprintf+0x5a6>
    1d6c:	06 60       	ori	r16, 0x06	; 6
    1d6e:	06 c0       	rjmp	.+12     	; 0x1d7c <vfprintf+0x5a6>
    1d70:	28 e0       	ldi	r18, 0x08	; 8
    1d72:	30 e0       	ldi	r19, 0x00	; 0
    1d74:	05 c0       	rjmp	.+10     	; 0x1d80 <vfprintf+0x5aa>
    1d76:	20 e1       	ldi	r18, 0x10	; 16
    1d78:	30 e0       	ldi	r19, 0x00	; 0
    1d7a:	02 c0       	rjmp	.+4      	; 0x1d80 <vfprintf+0x5aa>
    1d7c:	20 e1       	ldi	r18, 0x10	; 16
    1d7e:	32 e0       	ldi	r19, 0x02	; 2
    1d80:	56 01       	movw	r10, r12
    1d82:	07 ff       	sbrs	r16, 7
    1d84:	09 c0       	rjmp	.+18     	; 0x1d98 <vfprintf+0x5c2>
    1d86:	f4 e0       	ldi	r31, 0x04	; 4
    1d88:	af 0e       	add	r10, r31
    1d8a:	b1 1c       	adc	r11, r1
    1d8c:	f6 01       	movw	r30, r12
    1d8e:	60 81       	ld	r22, Z
    1d90:	71 81       	ldd	r23, Z+1	; 0x01
    1d92:	82 81       	ldd	r24, Z+2	; 0x02
    1d94:	93 81       	ldd	r25, Z+3	; 0x03
    1d96:	08 c0       	rjmp	.+16     	; 0x1da8 <vfprintf+0x5d2>
    1d98:	f2 e0       	ldi	r31, 0x02	; 2
    1d9a:	af 0e       	add	r10, r31
    1d9c:	b1 1c       	adc	r11, r1
    1d9e:	f6 01       	movw	r30, r12
    1da0:	60 81       	ld	r22, Z
    1da2:	71 81       	ldd	r23, Z+1	; 0x01
    1da4:	80 e0       	ldi	r24, 0x00	; 0
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	a4 01       	movw	r20, r8
    1daa:	59 d2       	rcall	.+1202   	; 0x225e <__ultoa_invert>
    1dac:	c8 2e       	mov	r12, r24
    1dae:	c8 18       	sub	r12, r8
    1db0:	0f 77       	andi	r16, 0x7F	; 127
    1db2:	06 ff       	sbrs	r16, 6
    1db4:	0b c0       	rjmp	.+22     	; 0x1dcc <vfprintf+0x5f6>
    1db6:	20 2f       	mov	r18, r16
    1db8:	2e 7f       	andi	r18, 0xFE	; 254
    1dba:	c1 16       	cp	r12, r17
    1dbc:	50 f4       	brcc	.+20     	; 0x1dd2 <vfprintf+0x5fc>
    1dbe:	04 ff       	sbrs	r16, 4
    1dc0:	0a c0       	rjmp	.+20     	; 0x1dd6 <vfprintf+0x600>
    1dc2:	02 fd       	sbrc	r16, 2
    1dc4:	08 c0       	rjmp	.+16     	; 0x1dd6 <vfprintf+0x600>
    1dc6:	20 2f       	mov	r18, r16
    1dc8:	2e 7e       	andi	r18, 0xEE	; 238
    1dca:	05 c0       	rjmp	.+10     	; 0x1dd6 <vfprintf+0x600>
    1dcc:	dc 2c       	mov	r13, r12
    1dce:	20 2f       	mov	r18, r16
    1dd0:	03 c0       	rjmp	.+6      	; 0x1dd8 <vfprintf+0x602>
    1dd2:	dc 2c       	mov	r13, r12
    1dd4:	01 c0       	rjmp	.+2      	; 0x1dd8 <vfprintf+0x602>
    1dd6:	d1 2e       	mov	r13, r17
    1dd8:	24 ff       	sbrs	r18, 4
    1dda:	0d c0       	rjmp	.+26     	; 0x1df6 <vfprintf+0x620>
    1ddc:	fe 01       	movw	r30, r28
    1dde:	ec 0d       	add	r30, r12
    1de0:	f1 1d       	adc	r31, r1
    1de2:	80 81       	ld	r24, Z
    1de4:	80 33       	cpi	r24, 0x30	; 48
    1de6:	11 f4       	brne	.+4      	; 0x1dec <vfprintf+0x616>
    1de8:	29 7e       	andi	r18, 0xE9	; 233
    1dea:	09 c0       	rjmp	.+18     	; 0x1dfe <vfprintf+0x628>
    1dec:	22 ff       	sbrs	r18, 2
    1dee:	06 c0       	rjmp	.+12     	; 0x1dfc <vfprintf+0x626>
    1df0:	d3 94       	inc	r13
    1df2:	d3 94       	inc	r13
    1df4:	04 c0       	rjmp	.+8      	; 0x1dfe <vfprintf+0x628>
    1df6:	82 2f       	mov	r24, r18
    1df8:	86 78       	andi	r24, 0x86	; 134
    1dfa:	09 f0       	breq	.+2      	; 0x1dfe <vfprintf+0x628>
    1dfc:	d3 94       	inc	r13
    1dfe:	23 fd       	sbrc	r18, 3
    1e00:	12 c0       	rjmp	.+36     	; 0x1e26 <vfprintf+0x650>
    1e02:	20 ff       	sbrs	r18, 0
    1e04:	06 c0       	rjmp	.+12     	; 0x1e12 <vfprintf+0x63c>
    1e06:	1c 2d       	mov	r17, r12
    1e08:	d5 14       	cp	r13, r5
    1e0a:	18 f4       	brcc	.+6      	; 0x1e12 <vfprintf+0x63c>
    1e0c:	15 0d       	add	r17, r5
    1e0e:	1d 19       	sub	r17, r13
    1e10:	d5 2c       	mov	r13, r5
    1e12:	d5 14       	cp	r13, r5
    1e14:	60 f4       	brcc	.+24     	; 0x1e2e <vfprintf+0x658>
    1e16:	b7 01       	movw	r22, r14
    1e18:	80 e2       	ldi	r24, 0x20	; 32
    1e1a:	90 e0       	ldi	r25, 0x00	; 0
    1e1c:	2b 8b       	std	Y+19, r18	; 0x13
    1e1e:	af d1       	rcall	.+862    	; 0x217e <fputc>
    1e20:	d3 94       	inc	r13
    1e22:	2b 89       	ldd	r18, Y+19	; 0x13
    1e24:	f6 cf       	rjmp	.-20     	; 0x1e12 <vfprintf+0x63c>
    1e26:	d5 14       	cp	r13, r5
    1e28:	10 f4       	brcc	.+4      	; 0x1e2e <vfprintf+0x658>
    1e2a:	5d 18       	sub	r5, r13
    1e2c:	01 c0       	rjmp	.+2      	; 0x1e30 <vfprintf+0x65a>
    1e2e:	51 2c       	mov	r5, r1
    1e30:	24 ff       	sbrs	r18, 4
    1e32:	11 c0       	rjmp	.+34     	; 0x1e56 <vfprintf+0x680>
    1e34:	b7 01       	movw	r22, r14
    1e36:	80 e3       	ldi	r24, 0x30	; 48
    1e38:	90 e0       	ldi	r25, 0x00	; 0
    1e3a:	2b 8b       	std	Y+19, r18	; 0x13
    1e3c:	a0 d1       	rcall	.+832    	; 0x217e <fputc>
    1e3e:	2b 89       	ldd	r18, Y+19	; 0x13
    1e40:	22 ff       	sbrs	r18, 2
    1e42:	16 c0       	rjmp	.+44     	; 0x1e70 <vfprintf+0x69a>
    1e44:	21 ff       	sbrs	r18, 1
    1e46:	03 c0       	rjmp	.+6      	; 0x1e4e <vfprintf+0x678>
    1e48:	88 e5       	ldi	r24, 0x58	; 88
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	02 c0       	rjmp	.+4      	; 0x1e52 <vfprintf+0x67c>
    1e4e:	88 e7       	ldi	r24, 0x78	; 120
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	b7 01       	movw	r22, r14
    1e54:	0c c0       	rjmp	.+24     	; 0x1e6e <vfprintf+0x698>
    1e56:	82 2f       	mov	r24, r18
    1e58:	86 78       	andi	r24, 0x86	; 134
    1e5a:	51 f0       	breq	.+20     	; 0x1e70 <vfprintf+0x69a>
    1e5c:	21 fd       	sbrc	r18, 1
    1e5e:	02 c0       	rjmp	.+4      	; 0x1e64 <vfprintf+0x68e>
    1e60:	80 e2       	ldi	r24, 0x20	; 32
    1e62:	01 c0       	rjmp	.+2      	; 0x1e66 <vfprintf+0x690>
    1e64:	8b e2       	ldi	r24, 0x2B	; 43
    1e66:	27 fd       	sbrc	r18, 7
    1e68:	8d e2       	ldi	r24, 0x2D	; 45
    1e6a:	b7 01       	movw	r22, r14
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	87 d1       	rcall	.+782    	; 0x217e <fputc>
    1e70:	c1 16       	cp	r12, r17
    1e72:	30 f4       	brcc	.+12     	; 0x1e80 <vfprintf+0x6aa>
    1e74:	b7 01       	movw	r22, r14
    1e76:	80 e3       	ldi	r24, 0x30	; 48
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	81 d1       	rcall	.+770    	; 0x217e <fputc>
    1e7c:	11 50       	subi	r17, 0x01	; 1
    1e7e:	f8 cf       	rjmp	.-16     	; 0x1e70 <vfprintf+0x69a>
    1e80:	ca 94       	dec	r12
    1e82:	f4 01       	movw	r30, r8
    1e84:	ec 0d       	add	r30, r12
    1e86:	f1 1d       	adc	r31, r1
    1e88:	80 81       	ld	r24, Z
    1e8a:	b7 01       	movw	r22, r14
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	77 d1       	rcall	.+750    	; 0x217e <fputc>
    1e90:	c1 10       	cpse	r12, r1
    1e92:	f6 cf       	rjmp	.-20     	; 0x1e80 <vfprintf+0x6aa>
    1e94:	55 20       	and	r5, r5
    1e96:	09 f4       	brne	.+2      	; 0x1e9a <vfprintf+0x6c4>
    1e98:	dd cc       	rjmp	.-1606   	; 0x1854 <vfprintf+0x7e>
    1e9a:	b7 01       	movw	r22, r14
    1e9c:	80 e2       	ldi	r24, 0x20	; 32
    1e9e:	90 e0       	ldi	r25, 0x00	; 0
    1ea0:	6e d1       	rcall	.+732    	; 0x217e <fputc>
    1ea2:	5a 94       	dec	r5
    1ea4:	f7 cf       	rjmp	.-18     	; 0x1e94 <vfprintf+0x6be>
    1ea6:	f7 01       	movw	r30, r14
    1ea8:	86 81       	ldd	r24, Z+6	; 0x06
    1eaa:	97 81       	ldd	r25, Z+7	; 0x07
    1eac:	02 c0       	rjmp	.+4      	; 0x1eb2 <vfprintf+0x6dc>
    1eae:	8f ef       	ldi	r24, 0xFF	; 255
    1eb0:	9f ef       	ldi	r25, 0xFF	; 255
    1eb2:	63 96       	adiw	r28, 0x13	; 19
    1eb4:	0f b6       	in	r0, 0x3f	; 63
    1eb6:	f8 94       	cli
    1eb8:	de bf       	out	0x3e, r29	; 62
    1eba:	0f be       	out	0x3f, r0	; 63
    1ebc:	cd bf       	out	0x3d, r28	; 61
    1ebe:	df 91       	pop	r29
    1ec0:	cf 91       	pop	r28
    1ec2:	1f 91       	pop	r17
    1ec4:	0f 91       	pop	r16
    1ec6:	ff 90       	pop	r15
    1ec8:	ef 90       	pop	r14
    1eca:	df 90       	pop	r13
    1ecc:	cf 90       	pop	r12
    1ece:	bf 90       	pop	r11
    1ed0:	af 90       	pop	r10
    1ed2:	9f 90       	pop	r9
    1ed4:	8f 90       	pop	r8
    1ed6:	7f 90       	pop	r7
    1ed8:	6f 90       	pop	r6
    1eda:	5f 90       	pop	r5
    1edc:	4f 90       	pop	r4
    1ede:	3f 90       	pop	r3
    1ee0:	2f 90       	pop	r2
    1ee2:	08 95       	ret

00001ee4 <__tablejump2__>:
    1ee4:	ee 0f       	add	r30, r30
    1ee6:	ff 1f       	adc	r31, r31

00001ee8 <__tablejump__>:
    1ee8:	05 90       	lpm	r0, Z+
    1eea:	f4 91       	lpm	r31, Z
    1eec:	e0 2d       	mov	r30, r0
    1eee:	19 94       	eijmp

00001ef0 <__umulhisi3>:
    1ef0:	a2 9f       	mul	r26, r18
    1ef2:	b0 01       	movw	r22, r0
    1ef4:	b3 9f       	mul	r27, r19
    1ef6:	c0 01       	movw	r24, r0
    1ef8:	a3 9f       	mul	r26, r19
    1efa:	70 0d       	add	r23, r0
    1efc:	81 1d       	adc	r24, r1
    1efe:	11 24       	eor	r1, r1
    1f00:	91 1d       	adc	r25, r1
    1f02:	b2 9f       	mul	r27, r18
    1f04:	70 0d       	add	r23, r0
    1f06:	81 1d       	adc	r24, r1
    1f08:	11 24       	eor	r1, r1
    1f0a:	91 1d       	adc	r25, r1
    1f0c:	08 95       	ret

00001f0e <__ftoa_engine>:
    1f0e:	28 30       	cpi	r18, 0x08	; 8
    1f10:	08 f0       	brcs	.+2      	; 0x1f14 <__ftoa_engine+0x6>
    1f12:	27 e0       	ldi	r18, 0x07	; 7
    1f14:	33 27       	eor	r19, r19
    1f16:	da 01       	movw	r26, r20
    1f18:	99 0f       	add	r25, r25
    1f1a:	31 1d       	adc	r19, r1
    1f1c:	87 fd       	sbrc	r24, 7
    1f1e:	91 60       	ori	r25, 0x01	; 1
    1f20:	00 96       	adiw	r24, 0x00	; 0
    1f22:	61 05       	cpc	r22, r1
    1f24:	71 05       	cpc	r23, r1
    1f26:	39 f4       	brne	.+14     	; 0x1f36 <__ftoa_engine+0x28>
    1f28:	32 60       	ori	r19, 0x02	; 2
    1f2a:	2e 5f       	subi	r18, 0xFE	; 254
    1f2c:	3d 93       	st	X+, r19
    1f2e:	30 e3       	ldi	r19, 0x30	; 48
    1f30:	2a 95       	dec	r18
    1f32:	e1 f7       	brne	.-8      	; 0x1f2c <__ftoa_engine+0x1e>
    1f34:	08 95       	ret
    1f36:	9f 3f       	cpi	r25, 0xFF	; 255
    1f38:	30 f0       	brcs	.+12     	; 0x1f46 <__ftoa_engine+0x38>
    1f3a:	80 38       	cpi	r24, 0x80	; 128
    1f3c:	71 05       	cpc	r23, r1
    1f3e:	61 05       	cpc	r22, r1
    1f40:	09 f0       	breq	.+2      	; 0x1f44 <__ftoa_engine+0x36>
    1f42:	3c 5f       	subi	r19, 0xFC	; 252
    1f44:	3c 5f       	subi	r19, 0xFC	; 252
    1f46:	3d 93       	st	X+, r19
    1f48:	91 30       	cpi	r25, 0x01	; 1
    1f4a:	08 f0       	brcs	.+2      	; 0x1f4e <__ftoa_engine+0x40>
    1f4c:	80 68       	ori	r24, 0x80	; 128
    1f4e:	91 1d       	adc	r25, r1
    1f50:	df 93       	push	r29
    1f52:	cf 93       	push	r28
    1f54:	1f 93       	push	r17
    1f56:	0f 93       	push	r16
    1f58:	ff 92       	push	r15
    1f5a:	ef 92       	push	r14
    1f5c:	19 2f       	mov	r17, r25
    1f5e:	98 7f       	andi	r25, 0xF8	; 248
    1f60:	96 95       	lsr	r25
    1f62:	e9 2f       	mov	r30, r25
    1f64:	96 95       	lsr	r25
    1f66:	96 95       	lsr	r25
    1f68:	e9 0f       	add	r30, r25
    1f6a:	ff 27       	eor	r31, r31
    1f6c:	e6 59       	subi	r30, 0x96	; 150
    1f6e:	fd 4f       	sbci	r31, 0xFD	; 253
    1f70:	99 27       	eor	r25, r25
    1f72:	33 27       	eor	r19, r19
    1f74:	ee 24       	eor	r14, r14
    1f76:	ff 24       	eor	r15, r15
    1f78:	a7 01       	movw	r20, r14
    1f7a:	e7 01       	movw	r28, r14
    1f7c:	05 90       	lpm	r0, Z+
    1f7e:	08 94       	sec
    1f80:	07 94       	ror	r0
    1f82:	28 f4       	brcc	.+10     	; 0x1f8e <__ftoa_engine+0x80>
    1f84:	36 0f       	add	r19, r22
    1f86:	e7 1e       	adc	r14, r23
    1f88:	f8 1e       	adc	r15, r24
    1f8a:	49 1f       	adc	r20, r25
    1f8c:	51 1d       	adc	r21, r1
    1f8e:	66 0f       	add	r22, r22
    1f90:	77 1f       	adc	r23, r23
    1f92:	88 1f       	adc	r24, r24
    1f94:	99 1f       	adc	r25, r25
    1f96:	06 94       	lsr	r0
    1f98:	a1 f7       	brne	.-24     	; 0x1f82 <__ftoa_engine+0x74>
    1f9a:	05 90       	lpm	r0, Z+
    1f9c:	07 94       	ror	r0
    1f9e:	28 f4       	brcc	.+10     	; 0x1faa <__ftoa_engine+0x9c>
    1fa0:	e7 0e       	add	r14, r23
    1fa2:	f8 1e       	adc	r15, r24
    1fa4:	49 1f       	adc	r20, r25
    1fa6:	56 1f       	adc	r21, r22
    1fa8:	c1 1d       	adc	r28, r1
    1faa:	77 0f       	add	r23, r23
    1fac:	88 1f       	adc	r24, r24
    1fae:	99 1f       	adc	r25, r25
    1fb0:	66 1f       	adc	r22, r22
    1fb2:	06 94       	lsr	r0
    1fb4:	a1 f7       	brne	.-24     	; 0x1f9e <__ftoa_engine+0x90>
    1fb6:	05 90       	lpm	r0, Z+
    1fb8:	07 94       	ror	r0
    1fba:	28 f4       	brcc	.+10     	; 0x1fc6 <__ftoa_engine+0xb8>
    1fbc:	f8 0e       	add	r15, r24
    1fbe:	49 1f       	adc	r20, r25
    1fc0:	56 1f       	adc	r21, r22
    1fc2:	c7 1f       	adc	r28, r23
    1fc4:	d1 1d       	adc	r29, r1
    1fc6:	88 0f       	add	r24, r24
    1fc8:	99 1f       	adc	r25, r25
    1fca:	66 1f       	adc	r22, r22
    1fcc:	77 1f       	adc	r23, r23
    1fce:	06 94       	lsr	r0
    1fd0:	a1 f7       	brne	.-24     	; 0x1fba <__ftoa_engine+0xac>
    1fd2:	05 90       	lpm	r0, Z+
    1fd4:	07 94       	ror	r0
    1fd6:	20 f4       	brcc	.+8      	; 0x1fe0 <__ftoa_engine+0xd2>
    1fd8:	49 0f       	add	r20, r25
    1fda:	56 1f       	adc	r21, r22
    1fdc:	c7 1f       	adc	r28, r23
    1fde:	d8 1f       	adc	r29, r24
    1fe0:	99 0f       	add	r25, r25
    1fe2:	66 1f       	adc	r22, r22
    1fe4:	77 1f       	adc	r23, r23
    1fe6:	88 1f       	adc	r24, r24
    1fe8:	06 94       	lsr	r0
    1fea:	a9 f7       	brne	.-22     	; 0x1fd6 <__ftoa_engine+0xc8>
    1fec:	84 91       	lpm	r24, Z
    1fee:	10 95       	com	r17
    1ff0:	17 70       	andi	r17, 0x07	; 7
    1ff2:	41 f0       	breq	.+16     	; 0x2004 <__ftoa_engine+0xf6>
    1ff4:	d6 95       	lsr	r29
    1ff6:	c7 95       	ror	r28
    1ff8:	57 95       	ror	r21
    1ffa:	47 95       	ror	r20
    1ffc:	f7 94       	ror	r15
    1ffe:	e7 94       	ror	r14
    2000:	1a 95       	dec	r17
    2002:	c1 f7       	brne	.-16     	; 0x1ff4 <__ftoa_engine+0xe6>
    2004:	e0 e1       	ldi	r30, 0x10	; 16
    2006:	f2 e0       	ldi	r31, 0x02	; 2
    2008:	68 94       	set
    200a:	15 90       	lpm	r1, Z+
    200c:	15 91       	lpm	r17, Z+
    200e:	35 91       	lpm	r19, Z+
    2010:	65 91       	lpm	r22, Z+
    2012:	95 91       	lpm	r25, Z+
    2014:	05 90       	lpm	r0, Z+
    2016:	7f e2       	ldi	r23, 0x2F	; 47
    2018:	73 95       	inc	r23
    201a:	e1 18       	sub	r14, r1
    201c:	f1 0a       	sbc	r15, r17
    201e:	43 0b       	sbc	r20, r19
    2020:	56 0b       	sbc	r21, r22
    2022:	c9 0b       	sbc	r28, r25
    2024:	d0 09       	sbc	r29, r0
    2026:	c0 f7       	brcc	.-16     	; 0x2018 <__ftoa_engine+0x10a>
    2028:	e1 0c       	add	r14, r1
    202a:	f1 1e       	adc	r15, r17
    202c:	43 1f       	adc	r20, r19
    202e:	56 1f       	adc	r21, r22
    2030:	c9 1f       	adc	r28, r25
    2032:	d0 1d       	adc	r29, r0
    2034:	7e f4       	brtc	.+30     	; 0x2054 <__ftoa_engine+0x146>
    2036:	70 33       	cpi	r23, 0x30	; 48
    2038:	11 f4       	brne	.+4      	; 0x203e <__ftoa_engine+0x130>
    203a:	8a 95       	dec	r24
    203c:	e6 cf       	rjmp	.-52     	; 0x200a <__ftoa_engine+0xfc>
    203e:	e8 94       	clt
    2040:	01 50       	subi	r16, 0x01	; 1
    2042:	30 f0       	brcs	.+12     	; 0x2050 <__ftoa_engine+0x142>
    2044:	08 0f       	add	r16, r24
    2046:	0a f4       	brpl	.+2      	; 0x204a <__ftoa_engine+0x13c>
    2048:	00 27       	eor	r16, r16
    204a:	02 17       	cp	r16, r18
    204c:	08 f4       	brcc	.+2      	; 0x2050 <__ftoa_engine+0x142>
    204e:	20 2f       	mov	r18, r16
    2050:	23 95       	inc	r18
    2052:	02 2f       	mov	r16, r18
    2054:	7a 33       	cpi	r23, 0x3A	; 58
    2056:	28 f0       	brcs	.+10     	; 0x2062 <__ftoa_engine+0x154>
    2058:	79 e3       	ldi	r23, 0x39	; 57
    205a:	7d 93       	st	X+, r23
    205c:	2a 95       	dec	r18
    205e:	e9 f7       	brne	.-6      	; 0x205a <__ftoa_engine+0x14c>
    2060:	10 c0       	rjmp	.+32     	; 0x2082 <__ftoa_engine+0x174>
    2062:	7d 93       	st	X+, r23
    2064:	2a 95       	dec	r18
    2066:	89 f6       	brne	.-94     	; 0x200a <__ftoa_engine+0xfc>
    2068:	06 94       	lsr	r0
    206a:	97 95       	ror	r25
    206c:	67 95       	ror	r22
    206e:	37 95       	ror	r19
    2070:	17 95       	ror	r17
    2072:	17 94       	ror	r1
    2074:	e1 18       	sub	r14, r1
    2076:	f1 0a       	sbc	r15, r17
    2078:	43 0b       	sbc	r20, r19
    207a:	56 0b       	sbc	r21, r22
    207c:	c9 0b       	sbc	r28, r25
    207e:	d0 09       	sbc	r29, r0
    2080:	98 f0       	brcs	.+38     	; 0x20a8 <__ftoa_engine+0x19a>
    2082:	23 95       	inc	r18
    2084:	7e 91       	ld	r23, -X
    2086:	73 95       	inc	r23
    2088:	7a 33       	cpi	r23, 0x3A	; 58
    208a:	08 f0       	brcs	.+2      	; 0x208e <__ftoa_engine+0x180>
    208c:	70 e3       	ldi	r23, 0x30	; 48
    208e:	7c 93       	st	X, r23
    2090:	20 13       	cpse	r18, r16
    2092:	b8 f7       	brcc	.-18     	; 0x2082 <__ftoa_engine+0x174>
    2094:	7e 91       	ld	r23, -X
    2096:	70 61       	ori	r23, 0x10	; 16
    2098:	7d 93       	st	X+, r23
    209a:	30 f0       	brcs	.+12     	; 0x20a8 <__ftoa_engine+0x19a>
    209c:	83 95       	inc	r24
    209e:	71 e3       	ldi	r23, 0x31	; 49
    20a0:	7d 93       	st	X+, r23
    20a2:	70 e3       	ldi	r23, 0x30	; 48
    20a4:	2a 95       	dec	r18
    20a6:	e1 f7       	brne	.-8      	; 0x20a0 <__ftoa_engine+0x192>
    20a8:	11 24       	eor	r1, r1
    20aa:	ef 90       	pop	r14
    20ac:	ff 90       	pop	r15
    20ae:	0f 91       	pop	r16
    20b0:	1f 91       	pop	r17
    20b2:	cf 91       	pop	r28
    20b4:	df 91       	pop	r29
    20b6:	99 27       	eor	r25, r25
    20b8:	87 fd       	sbrc	r24, 7
    20ba:	90 95       	com	r25
    20bc:	08 95       	ret

000020be <strnlen_P>:
    20be:	fc 01       	movw	r30, r24
    20c0:	05 90       	lpm	r0, Z+
    20c2:	61 50       	subi	r22, 0x01	; 1
    20c4:	70 40       	sbci	r23, 0x00	; 0
    20c6:	01 10       	cpse	r0, r1
    20c8:	d8 f7       	brcc	.-10     	; 0x20c0 <strnlen_P+0x2>
    20ca:	80 95       	com	r24
    20cc:	90 95       	com	r25
    20ce:	8e 0f       	add	r24, r30
    20d0:	9f 1f       	adc	r25, r31
    20d2:	08 95       	ret

000020d4 <strnlen>:
    20d4:	fc 01       	movw	r30, r24
    20d6:	61 50       	subi	r22, 0x01	; 1
    20d8:	70 40       	sbci	r23, 0x00	; 0
    20da:	01 90       	ld	r0, Z+
    20dc:	01 10       	cpse	r0, r1
    20de:	d8 f7       	brcc	.-10     	; 0x20d6 <strnlen+0x2>
    20e0:	80 95       	com	r24
    20e2:	90 95       	com	r25
    20e4:	8e 0f       	add	r24, r30
    20e6:	9f 1f       	adc	r25, r31
    20e8:	08 95       	ret

000020ea <fdevopen>:
    20ea:	0f 93       	push	r16
    20ec:	1f 93       	push	r17
    20ee:	cf 93       	push	r28
    20f0:	df 93       	push	r29
    20f2:	ec 01       	movw	r28, r24
    20f4:	8b 01       	movw	r16, r22
    20f6:	00 97       	sbiw	r24, 0x00	; 0
    20f8:	31 f4       	brne	.+12     	; 0x2106 <fdevopen+0x1c>
    20fa:	61 15       	cp	r22, r1
    20fc:	71 05       	cpc	r23, r1
    20fe:	19 f4       	brne	.+6      	; 0x2106 <fdevopen+0x1c>
    2100:	80 e0       	ldi	r24, 0x00	; 0
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	37 c0       	rjmp	.+110    	; 0x2174 <fdevopen+0x8a>
    2106:	6e e0       	ldi	r22, 0x0E	; 14
    2108:	70 e0       	ldi	r23, 0x00	; 0
    210a:	81 e0       	ldi	r24, 0x01	; 1
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	05 d1       	rcall	.+522    	; 0x231a <calloc>
    2110:	fc 01       	movw	r30, r24
    2112:	00 97       	sbiw	r24, 0x00	; 0
    2114:	a9 f3       	breq	.-22     	; 0x2100 <fdevopen+0x16>
    2116:	80 e8       	ldi	r24, 0x80	; 128
    2118:	83 83       	std	Z+3, r24	; 0x03
    211a:	01 15       	cp	r16, r1
    211c:	11 05       	cpc	r17, r1
    211e:	71 f0       	breq	.+28     	; 0x213c <fdevopen+0x52>
    2120:	13 87       	std	Z+11, r17	; 0x0b
    2122:	02 87       	std	Z+10, r16	; 0x0a
    2124:	81 e8       	ldi	r24, 0x81	; 129
    2126:	83 83       	std	Z+3, r24	; 0x03
    2128:	80 91 d7 02 	lds	r24, 0x02D7
    212c:	90 91 d8 02 	lds	r25, 0x02D8
    2130:	89 2b       	or	r24, r25
    2132:	21 f4       	brne	.+8      	; 0x213c <fdevopen+0x52>
    2134:	f0 93 d8 02 	sts	0x02D8, r31
    2138:	e0 93 d7 02 	sts	0x02D7, r30
    213c:	20 97       	sbiw	r28, 0x00	; 0
    213e:	c9 f0       	breq	.+50     	; 0x2172 <fdevopen+0x88>
    2140:	d1 87       	std	Z+9, r29	; 0x09
    2142:	c0 87       	std	Z+8, r28	; 0x08
    2144:	83 81       	ldd	r24, Z+3	; 0x03
    2146:	82 60       	ori	r24, 0x02	; 2
    2148:	83 83       	std	Z+3, r24	; 0x03
    214a:	80 91 d9 02 	lds	r24, 0x02D9
    214e:	90 91 da 02 	lds	r25, 0x02DA
    2152:	89 2b       	or	r24, r25
    2154:	71 f4       	brne	.+28     	; 0x2172 <fdevopen+0x88>
    2156:	f0 93 da 02 	sts	0x02DA, r31
    215a:	e0 93 d9 02 	sts	0x02D9, r30
    215e:	80 91 db 02 	lds	r24, 0x02DB
    2162:	90 91 dc 02 	lds	r25, 0x02DC
    2166:	89 2b       	or	r24, r25
    2168:	21 f4       	brne	.+8      	; 0x2172 <fdevopen+0x88>
    216a:	f0 93 dc 02 	sts	0x02DC, r31
    216e:	e0 93 db 02 	sts	0x02DB, r30
    2172:	cf 01       	movw	r24, r30
    2174:	df 91       	pop	r29
    2176:	cf 91       	pop	r28
    2178:	1f 91       	pop	r17
    217a:	0f 91       	pop	r16
    217c:	08 95       	ret

0000217e <fputc>:
    217e:	0f 93       	push	r16
    2180:	1f 93       	push	r17
    2182:	cf 93       	push	r28
    2184:	df 93       	push	r29
    2186:	18 2f       	mov	r17, r24
    2188:	09 2f       	mov	r16, r25
    218a:	eb 01       	movw	r28, r22
    218c:	8b 81       	ldd	r24, Y+3	; 0x03
    218e:	81 fd       	sbrc	r24, 1
    2190:	03 c0       	rjmp	.+6      	; 0x2198 <fputc+0x1a>
    2192:	8f ef       	ldi	r24, 0xFF	; 255
    2194:	9f ef       	ldi	r25, 0xFF	; 255
    2196:	20 c0       	rjmp	.+64     	; 0x21d8 <fputc+0x5a>
    2198:	82 ff       	sbrs	r24, 2
    219a:	10 c0       	rjmp	.+32     	; 0x21bc <fputc+0x3e>
    219c:	4e 81       	ldd	r20, Y+6	; 0x06
    219e:	5f 81       	ldd	r21, Y+7	; 0x07
    21a0:	2c 81       	ldd	r18, Y+4	; 0x04
    21a2:	3d 81       	ldd	r19, Y+5	; 0x05
    21a4:	42 17       	cp	r20, r18
    21a6:	53 07       	cpc	r21, r19
    21a8:	7c f4       	brge	.+30     	; 0x21c8 <fputc+0x4a>
    21aa:	e8 81       	ld	r30, Y
    21ac:	f9 81       	ldd	r31, Y+1	; 0x01
    21ae:	9f 01       	movw	r18, r30
    21b0:	2f 5f       	subi	r18, 0xFF	; 255
    21b2:	3f 4f       	sbci	r19, 0xFF	; 255
    21b4:	39 83       	std	Y+1, r19	; 0x01
    21b6:	28 83       	st	Y, r18
    21b8:	10 83       	st	Z, r17
    21ba:	06 c0       	rjmp	.+12     	; 0x21c8 <fputc+0x4a>
    21bc:	e8 85       	ldd	r30, Y+8	; 0x08
    21be:	f9 85       	ldd	r31, Y+9	; 0x09
    21c0:	81 2f       	mov	r24, r17
    21c2:	19 95       	eicall
    21c4:	89 2b       	or	r24, r25
    21c6:	29 f7       	brne	.-54     	; 0x2192 <fputc+0x14>
    21c8:	2e 81       	ldd	r18, Y+6	; 0x06
    21ca:	3f 81       	ldd	r19, Y+7	; 0x07
    21cc:	2f 5f       	subi	r18, 0xFF	; 255
    21ce:	3f 4f       	sbci	r19, 0xFF	; 255
    21d0:	3f 83       	std	Y+7, r19	; 0x07
    21d2:	2e 83       	std	Y+6, r18	; 0x06
    21d4:	81 2f       	mov	r24, r17
    21d6:	90 2f       	mov	r25, r16
    21d8:	df 91       	pop	r29
    21da:	cf 91       	pop	r28
    21dc:	1f 91       	pop	r17
    21de:	0f 91       	pop	r16
    21e0:	08 95       	ret

000021e2 <printf>:
    21e2:	cf 93       	push	r28
    21e4:	df 93       	push	r29
    21e6:	cd b7       	in	r28, 0x3d	; 61
    21e8:	de b7       	in	r29, 0x3e	; 62
    21ea:	fe 01       	movw	r30, r28
    21ec:	36 96       	adiw	r30, 0x06	; 6
    21ee:	61 91       	ld	r22, Z+
    21f0:	71 91       	ld	r23, Z+
    21f2:	af 01       	movw	r20, r30
    21f4:	80 91 d9 02 	lds	r24, 0x02D9
    21f8:	90 91 da 02 	lds	r25, 0x02DA
    21fc:	ec da       	rcall	.-2600   	; 0x17d6 <vfprintf>
    21fe:	df 91       	pop	r29
    2200:	cf 91       	pop	r28
    2202:	08 95       	ret

00002204 <puts>:
    2204:	0f 93       	push	r16
    2206:	1f 93       	push	r17
    2208:	cf 93       	push	r28
    220a:	df 93       	push	r29
    220c:	e0 91 d9 02 	lds	r30, 0x02D9
    2210:	f0 91 da 02 	lds	r31, 0x02DA
    2214:	23 81       	ldd	r18, Z+3	; 0x03
    2216:	21 ff       	sbrs	r18, 1
    2218:	1b c0       	rjmp	.+54     	; 0x2250 <puts+0x4c>
    221a:	ec 01       	movw	r28, r24
    221c:	00 e0       	ldi	r16, 0x00	; 0
    221e:	10 e0       	ldi	r17, 0x00	; 0
    2220:	89 91       	ld	r24, Y+
    2222:	60 91 d9 02 	lds	r22, 0x02D9
    2226:	70 91 da 02 	lds	r23, 0x02DA
    222a:	db 01       	movw	r26, r22
    222c:	18 96       	adiw	r26, 0x08	; 8
    222e:	ed 91       	ld	r30, X+
    2230:	fc 91       	ld	r31, X
    2232:	19 97       	sbiw	r26, 0x09	; 9
    2234:	88 23       	and	r24, r24
    2236:	31 f0       	breq	.+12     	; 0x2244 <puts+0x40>
    2238:	19 95       	eicall
    223a:	89 2b       	or	r24, r25
    223c:	89 f3       	breq	.-30     	; 0x2220 <puts+0x1c>
    223e:	0f ef       	ldi	r16, 0xFF	; 255
    2240:	1f ef       	ldi	r17, 0xFF	; 255
    2242:	ee cf       	rjmp	.-36     	; 0x2220 <puts+0x1c>
    2244:	8a e0       	ldi	r24, 0x0A	; 10
    2246:	19 95       	eicall
    2248:	89 2b       	or	r24, r25
    224a:	11 f4       	brne	.+4      	; 0x2250 <puts+0x4c>
    224c:	c8 01       	movw	r24, r16
    224e:	02 c0       	rjmp	.+4      	; 0x2254 <puts+0x50>
    2250:	8f ef       	ldi	r24, 0xFF	; 255
    2252:	9f ef       	ldi	r25, 0xFF	; 255
    2254:	df 91       	pop	r29
    2256:	cf 91       	pop	r28
    2258:	1f 91       	pop	r17
    225a:	0f 91       	pop	r16
    225c:	08 95       	ret

0000225e <__ultoa_invert>:
    225e:	fa 01       	movw	r30, r20
    2260:	aa 27       	eor	r26, r26
    2262:	28 30       	cpi	r18, 0x08	; 8
    2264:	51 f1       	breq	.+84     	; 0x22ba <__ultoa_invert+0x5c>
    2266:	20 31       	cpi	r18, 0x10	; 16
    2268:	81 f1       	breq	.+96     	; 0x22ca <__ultoa_invert+0x6c>
    226a:	e8 94       	clt
    226c:	6f 93       	push	r22
    226e:	6e 7f       	andi	r22, 0xFE	; 254
    2270:	6e 5f       	subi	r22, 0xFE	; 254
    2272:	7f 4f       	sbci	r23, 0xFF	; 255
    2274:	8f 4f       	sbci	r24, 0xFF	; 255
    2276:	9f 4f       	sbci	r25, 0xFF	; 255
    2278:	af 4f       	sbci	r26, 0xFF	; 255
    227a:	b1 e0       	ldi	r27, 0x01	; 1
    227c:	3e d0       	rcall	.+124    	; 0x22fa <__ultoa_invert+0x9c>
    227e:	b4 e0       	ldi	r27, 0x04	; 4
    2280:	3c d0       	rcall	.+120    	; 0x22fa <__ultoa_invert+0x9c>
    2282:	67 0f       	add	r22, r23
    2284:	78 1f       	adc	r23, r24
    2286:	89 1f       	adc	r24, r25
    2288:	9a 1f       	adc	r25, r26
    228a:	a1 1d       	adc	r26, r1
    228c:	68 0f       	add	r22, r24
    228e:	79 1f       	adc	r23, r25
    2290:	8a 1f       	adc	r24, r26
    2292:	91 1d       	adc	r25, r1
    2294:	a1 1d       	adc	r26, r1
    2296:	6a 0f       	add	r22, r26
    2298:	71 1d       	adc	r23, r1
    229a:	81 1d       	adc	r24, r1
    229c:	91 1d       	adc	r25, r1
    229e:	a1 1d       	adc	r26, r1
    22a0:	20 d0       	rcall	.+64     	; 0x22e2 <__ultoa_invert+0x84>
    22a2:	09 f4       	brne	.+2      	; 0x22a6 <__ultoa_invert+0x48>
    22a4:	68 94       	set
    22a6:	3f 91       	pop	r19
    22a8:	2a e0       	ldi	r18, 0x0A	; 10
    22aa:	26 9f       	mul	r18, r22
    22ac:	11 24       	eor	r1, r1
    22ae:	30 19       	sub	r19, r0
    22b0:	30 5d       	subi	r19, 0xD0	; 208
    22b2:	31 93       	st	Z+, r19
    22b4:	de f6       	brtc	.-74     	; 0x226c <__ultoa_invert+0xe>
    22b6:	cf 01       	movw	r24, r30
    22b8:	08 95       	ret
    22ba:	46 2f       	mov	r20, r22
    22bc:	47 70       	andi	r20, 0x07	; 7
    22be:	40 5d       	subi	r20, 0xD0	; 208
    22c0:	41 93       	st	Z+, r20
    22c2:	b3 e0       	ldi	r27, 0x03	; 3
    22c4:	0f d0       	rcall	.+30     	; 0x22e4 <__ultoa_invert+0x86>
    22c6:	c9 f7       	brne	.-14     	; 0x22ba <__ultoa_invert+0x5c>
    22c8:	f6 cf       	rjmp	.-20     	; 0x22b6 <__ultoa_invert+0x58>
    22ca:	46 2f       	mov	r20, r22
    22cc:	4f 70       	andi	r20, 0x0F	; 15
    22ce:	40 5d       	subi	r20, 0xD0	; 208
    22d0:	4a 33       	cpi	r20, 0x3A	; 58
    22d2:	18 f0       	brcs	.+6      	; 0x22da <__ultoa_invert+0x7c>
    22d4:	49 5d       	subi	r20, 0xD9	; 217
    22d6:	31 fd       	sbrc	r19, 1
    22d8:	40 52       	subi	r20, 0x20	; 32
    22da:	41 93       	st	Z+, r20
    22dc:	02 d0       	rcall	.+4      	; 0x22e2 <__ultoa_invert+0x84>
    22de:	a9 f7       	brne	.-22     	; 0x22ca <__ultoa_invert+0x6c>
    22e0:	ea cf       	rjmp	.-44     	; 0x22b6 <__ultoa_invert+0x58>
    22e2:	b4 e0       	ldi	r27, 0x04	; 4
    22e4:	a6 95       	lsr	r26
    22e6:	97 95       	ror	r25
    22e8:	87 95       	ror	r24
    22ea:	77 95       	ror	r23
    22ec:	67 95       	ror	r22
    22ee:	ba 95       	dec	r27
    22f0:	c9 f7       	brne	.-14     	; 0x22e4 <__ultoa_invert+0x86>
    22f2:	00 97       	sbiw	r24, 0x00	; 0
    22f4:	61 05       	cpc	r22, r1
    22f6:	71 05       	cpc	r23, r1
    22f8:	08 95       	ret
    22fa:	9b 01       	movw	r18, r22
    22fc:	ac 01       	movw	r20, r24
    22fe:	0a 2e       	mov	r0, r26
    2300:	06 94       	lsr	r0
    2302:	57 95       	ror	r21
    2304:	47 95       	ror	r20
    2306:	37 95       	ror	r19
    2308:	27 95       	ror	r18
    230a:	ba 95       	dec	r27
    230c:	c9 f7       	brne	.-14     	; 0x2300 <__ultoa_invert+0xa2>
    230e:	62 0f       	add	r22, r18
    2310:	73 1f       	adc	r23, r19
    2312:	84 1f       	adc	r24, r20
    2314:	95 1f       	adc	r25, r21
    2316:	a0 1d       	adc	r26, r0
    2318:	08 95       	ret

0000231a <calloc>:
    231a:	0f 93       	push	r16
    231c:	1f 93       	push	r17
    231e:	cf 93       	push	r28
    2320:	df 93       	push	r29
    2322:	86 9f       	mul	r24, r22
    2324:	80 01       	movw	r16, r0
    2326:	87 9f       	mul	r24, r23
    2328:	10 0d       	add	r17, r0
    232a:	96 9f       	mul	r25, r22
    232c:	10 0d       	add	r17, r0
    232e:	11 24       	eor	r1, r1
    2330:	c8 01       	movw	r24, r16
    2332:	0d d0       	rcall	.+26     	; 0x234e <malloc>
    2334:	ec 01       	movw	r28, r24
    2336:	00 97       	sbiw	r24, 0x00	; 0
    2338:	21 f0       	breq	.+8      	; 0x2342 <calloc+0x28>
    233a:	a8 01       	movw	r20, r16
    233c:	60 e0       	ldi	r22, 0x00	; 0
    233e:	70 e0       	ldi	r23, 0x00	; 0
    2340:	2d d1       	rcall	.+602    	; 0x259c <memset>
    2342:	ce 01       	movw	r24, r28
    2344:	df 91       	pop	r29
    2346:	cf 91       	pop	r28
    2348:	1f 91       	pop	r17
    234a:	0f 91       	pop	r16
    234c:	08 95       	ret

0000234e <malloc>:
    234e:	cf 93       	push	r28
    2350:	df 93       	push	r29
    2352:	82 30       	cpi	r24, 0x02	; 2
    2354:	91 05       	cpc	r25, r1
    2356:	10 f4       	brcc	.+4      	; 0x235c <malloc+0xe>
    2358:	82 e0       	ldi	r24, 0x02	; 2
    235a:	90 e0       	ldi	r25, 0x00	; 0
    235c:	e0 91 df 02 	lds	r30, 0x02DF
    2360:	f0 91 e0 02 	lds	r31, 0x02E0
    2364:	20 e0       	ldi	r18, 0x00	; 0
    2366:	30 e0       	ldi	r19, 0x00	; 0
    2368:	a0 e0       	ldi	r26, 0x00	; 0
    236a:	b0 e0       	ldi	r27, 0x00	; 0
    236c:	30 97       	sbiw	r30, 0x00	; 0
    236e:	39 f1       	breq	.+78     	; 0x23be <malloc+0x70>
    2370:	40 81       	ld	r20, Z
    2372:	51 81       	ldd	r21, Z+1	; 0x01
    2374:	48 17       	cp	r20, r24
    2376:	59 07       	cpc	r21, r25
    2378:	b8 f0       	brcs	.+46     	; 0x23a8 <malloc+0x5a>
    237a:	48 17       	cp	r20, r24
    237c:	59 07       	cpc	r21, r25
    237e:	71 f4       	brne	.+28     	; 0x239c <malloc+0x4e>
    2380:	82 81       	ldd	r24, Z+2	; 0x02
    2382:	93 81       	ldd	r25, Z+3	; 0x03
    2384:	10 97       	sbiw	r26, 0x00	; 0
    2386:	29 f0       	breq	.+10     	; 0x2392 <malloc+0x44>
    2388:	13 96       	adiw	r26, 0x03	; 3
    238a:	9c 93       	st	X, r25
    238c:	8e 93       	st	-X, r24
    238e:	12 97       	sbiw	r26, 0x02	; 2
    2390:	2c c0       	rjmp	.+88     	; 0x23ea <malloc+0x9c>
    2392:	90 93 e0 02 	sts	0x02E0, r25
    2396:	80 93 df 02 	sts	0x02DF, r24
    239a:	27 c0       	rjmp	.+78     	; 0x23ea <malloc+0x9c>
    239c:	21 15       	cp	r18, r1
    239e:	31 05       	cpc	r19, r1
    23a0:	31 f0       	breq	.+12     	; 0x23ae <malloc+0x60>
    23a2:	42 17       	cp	r20, r18
    23a4:	53 07       	cpc	r21, r19
    23a6:	18 f0       	brcs	.+6      	; 0x23ae <malloc+0x60>
    23a8:	a9 01       	movw	r20, r18
    23aa:	db 01       	movw	r26, r22
    23ac:	01 c0       	rjmp	.+2      	; 0x23b0 <malloc+0x62>
    23ae:	ef 01       	movw	r28, r30
    23b0:	9a 01       	movw	r18, r20
    23b2:	bd 01       	movw	r22, r26
    23b4:	df 01       	movw	r26, r30
    23b6:	02 80       	ldd	r0, Z+2	; 0x02
    23b8:	f3 81       	ldd	r31, Z+3	; 0x03
    23ba:	e0 2d       	mov	r30, r0
    23bc:	d7 cf       	rjmp	.-82     	; 0x236c <malloc+0x1e>
    23be:	21 15       	cp	r18, r1
    23c0:	31 05       	cpc	r19, r1
    23c2:	f9 f0       	breq	.+62     	; 0x2402 <malloc+0xb4>
    23c4:	28 1b       	sub	r18, r24
    23c6:	39 0b       	sbc	r19, r25
    23c8:	24 30       	cpi	r18, 0x04	; 4
    23ca:	31 05       	cpc	r19, r1
    23cc:	80 f4       	brcc	.+32     	; 0x23ee <malloc+0xa0>
    23ce:	8a 81       	ldd	r24, Y+2	; 0x02
    23d0:	9b 81       	ldd	r25, Y+3	; 0x03
    23d2:	61 15       	cp	r22, r1
    23d4:	71 05       	cpc	r23, r1
    23d6:	21 f0       	breq	.+8      	; 0x23e0 <malloc+0x92>
    23d8:	fb 01       	movw	r30, r22
    23da:	93 83       	std	Z+3, r25	; 0x03
    23dc:	82 83       	std	Z+2, r24	; 0x02
    23de:	04 c0       	rjmp	.+8      	; 0x23e8 <malloc+0x9a>
    23e0:	90 93 e0 02 	sts	0x02E0, r25
    23e4:	80 93 df 02 	sts	0x02DF, r24
    23e8:	fe 01       	movw	r30, r28
    23ea:	32 96       	adiw	r30, 0x02	; 2
    23ec:	44 c0       	rjmp	.+136    	; 0x2476 <malloc+0x128>
    23ee:	fe 01       	movw	r30, r28
    23f0:	e2 0f       	add	r30, r18
    23f2:	f3 1f       	adc	r31, r19
    23f4:	81 93       	st	Z+, r24
    23f6:	91 93       	st	Z+, r25
    23f8:	22 50       	subi	r18, 0x02	; 2
    23fa:	31 09       	sbc	r19, r1
    23fc:	39 83       	std	Y+1, r19	; 0x01
    23fe:	28 83       	st	Y, r18
    2400:	3a c0       	rjmp	.+116    	; 0x2476 <malloc+0x128>
    2402:	20 91 dd 02 	lds	r18, 0x02DD
    2406:	30 91 de 02 	lds	r19, 0x02DE
    240a:	23 2b       	or	r18, r19
    240c:	41 f4       	brne	.+16     	; 0x241e <malloc+0xd0>
    240e:	20 91 02 02 	lds	r18, 0x0202
    2412:	30 91 03 02 	lds	r19, 0x0203
    2416:	30 93 de 02 	sts	0x02DE, r19
    241a:	20 93 dd 02 	sts	0x02DD, r18
    241e:	20 91 00 02 	lds	r18, 0x0200
    2422:	30 91 01 02 	lds	r19, 0x0201
    2426:	21 15       	cp	r18, r1
    2428:	31 05       	cpc	r19, r1
    242a:	41 f4       	brne	.+16     	; 0x243c <malloc+0xee>
    242c:	2d b7       	in	r18, 0x3d	; 61
    242e:	3e b7       	in	r19, 0x3e	; 62
    2430:	40 91 04 02 	lds	r20, 0x0204
    2434:	50 91 05 02 	lds	r21, 0x0205
    2438:	24 1b       	sub	r18, r20
    243a:	35 0b       	sbc	r19, r21
    243c:	e0 91 dd 02 	lds	r30, 0x02DD
    2440:	f0 91 de 02 	lds	r31, 0x02DE
    2444:	e2 17       	cp	r30, r18
    2446:	f3 07       	cpc	r31, r19
    2448:	a0 f4       	brcc	.+40     	; 0x2472 <malloc+0x124>
    244a:	2e 1b       	sub	r18, r30
    244c:	3f 0b       	sbc	r19, r31
    244e:	28 17       	cp	r18, r24
    2450:	39 07       	cpc	r19, r25
    2452:	78 f0       	brcs	.+30     	; 0x2472 <malloc+0x124>
    2454:	ac 01       	movw	r20, r24
    2456:	4e 5f       	subi	r20, 0xFE	; 254
    2458:	5f 4f       	sbci	r21, 0xFF	; 255
    245a:	24 17       	cp	r18, r20
    245c:	35 07       	cpc	r19, r21
    245e:	48 f0       	brcs	.+18     	; 0x2472 <malloc+0x124>
    2460:	4e 0f       	add	r20, r30
    2462:	5f 1f       	adc	r21, r31
    2464:	50 93 de 02 	sts	0x02DE, r21
    2468:	40 93 dd 02 	sts	0x02DD, r20
    246c:	81 93       	st	Z+, r24
    246e:	91 93       	st	Z+, r25
    2470:	02 c0       	rjmp	.+4      	; 0x2476 <malloc+0x128>
    2472:	e0 e0       	ldi	r30, 0x00	; 0
    2474:	f0 e0       	ldi	r31, 0x00	; 0
    2476:	cf 01       	movw	r24, r30
    2478:	df 91       	pop	r29
    247a:	cf 91       	pop	r28
    247c:	08 95       	ret

0000247e <free>:
    247e:	cf 93       	push	r28
    2480:	df 93       	push	r29
    2482:	00 97       	sbiw	r24, 0x00	; 0
    2484:	09 f4       	brne	.+2      	; 0x2488 <free+0xa>
    2486:	87 c0       	rjmp	.+270    	; 0x2596 <free+0x118>
    2488:	fc 01       	movw	r30, r24
    248a:	32 97       	sbiw	r30, 0x02	; 2
    248c:	13 82       	std	Z+3, r1	; 0x03
    248e:	12 82       	std	Z+2, r1	; 0x02
    2490:	c0 91 df 02 	lds	r28, 0x02DF
    2494:	d0 91 e0 02 	lds	r29, 0x02E0
    2498:	20 97       	sbiw	r28, 0x00	; 0
    249a:	81 f4       	brne	.+32     	; 0x24bc <free+0x3e>
    249c:	20 81       	ld	r18, Z
    249e:	31 81       	ldd	r19, Z+1	; 0x01
    24a0:	28 0f       	add	r18, r24
    24a2:	39 1f       	adc	r19, r25
    24a4:	80 91 dd 02 	lds	r24, 0x02DD
    24a8:	90 91 de 02 	lds	r25, 0x02DE
    24ac:	82 17       	cp	r24, r18
    24ae:	93 07       	cpc	r25, r19
    24b0:	79 f5       	brne	.+94     	; 0x2510 <free+0x92>
    24b2:	f0 93 de 02 	sts	0x02DE, r31
    24b6:	e0 93 dd 02 	sts	0x02DD, r30
    24ba:	6d c0       	rjmp	.+218    	; 0x2596 <free+0x118>
    24bc:	de 01       	movw	r26, r28
    24be:	20 e0       	ldi	r18, 0x00	; 0
    24c0:	30 e0       	ldi	r19, 0x00	; 0
    24c2:	ae 17       	cp	r26, r30
    24c4:	bf 07       	cpc	r27, r31
    24c6:	50 f4       	brcc	.+20     	; 0x24dc <free+0x5e>
    24c8:	12 96       	adiw	r26, 0x02	; 2
    24ca:	4d 91       	ld	r20, X+
    24cc:	5c 91       	ld	r21, X
    24ce:	13 97       	sbiw	r26, 0x03	; 3
    24d0:	9d 01       	movw	r18, r26
    24d2:	41 15       	cp	r20, r1
    24d4:	51 05       	cpc	r21, r1
    24d6:	09 f1       	breq	.+66     	; 0x251a <free+0x9c>
    24d8:	da 01       	movw	r26, r20
    24da:	f3 cf       	rjmp	.-26     	; 0x24c2 <free+0x44>
    24dc:	b3 83       	std	Z+3, r27	; 0x03
    24de:	a2 83       	std	Z+2, r26	; 0x02
    24e0:	40 81       	ld	r20, Z
    24e2:	51 81       	ldd	r21, Z+1	; 0x01
    24e4:	84 0f       	add	r24, r20
    24e6:	95 1f       	adc	r25, r21
    24e8:	8a 17       	cp	r24, r26
    24ea:	9b 07       	cpc	r25, r27
    24ec:	71 f4       	brne	.+28     	; 0x250a <free+0x8c>
    24ee:	8d 91       	ld	r24, X+
    24f0:	9c 91       	ld	r25, X
    24f2:	11 97       	sbiw	r26, 0x01	; 1
    24f4:	84 0f       	add	r24, r20
    24f6:	95 1f       	adc	r25, r21
    24f8:	02 96       	adiw	r24, 0x02	; 2
    24fa:	91 83       	std	Z+1, r25	; 0x01
    24fc:	80 83       	st	Z, r24
    24fe:	12 96       	adiw	r26, 0x02	; 2
    2500:	8d 91       	ld	r24, X+
    2502:	9c 91       	ld	r25, X
    2504:	13 97       	sbiw	r26, 0x03	; 3
    2506:	93 83       	std	Z+3, r25	; 0x03
    2508:	82 83       	std	Z+2, r24	; 0x02
    250a:	21 15       	cp	r18, r1
    250c:	31 05       	cpc	r19, r1
    250e:	29 f4       	brne	.+10     	; 0x251a <free+0x9c>
    2510:	f0 93 e0 02 	sts	0x02E0, r31
    2514:	e0 93 df 02 	sts	0x02DF, r30
    2518:	3e c0       	rjmp	.+124    	; 0x2596 <free+0x118>
    251a:	d9 01       	movw	r26, r18
    251c:	13 96       	adiw	r26, 0x03	; 3
    251e:	fc 93       	st	X, r31
    2520:	ee 93       	st	-X, r30
    2522:	12 97       	sbiw	r26, 0x02	; 2
    2524:	4d 91       	ld	r20, X+
    2526:	5d 91       	ld	r21, X+
    2528:	a4 0f       	add	r26, r20
    252a:	b5 1f       	adc	r27, r21
    252c:	ea 17       	cp	r30, r26
    252e:	fb 07       	cpc	r31, r27
    2530:	79 f4       	brne	.+30     	; 0x2550 <free+0xd2>
    2532:	80 81       	ld	r24, Z
    2534:	91 81       	ldd	r25, Z+1	; 0x01
    2536:	84 0f       	add	r24, r20
    2538:	95 1f       	adc	r25, r21
    253a:	02 96       	adiw	r24, 0x02	; 2
    253c:	d9 01       	movw	r26, r18
    253e:	11 96       	adiw	r26, 0x01	; 1
    2540:	9c 93       	st	X, r25
    2542:	8e 93       	st	-X, r24
    2544:	82 81       	ldd	r24, Z+2	; 0x02
    2546:	93 81       	ldd	r25, Z+3	; 0x03
    2548:	13 96       	adiw	r26, 0x03	; 3
    254a:	9c 93       	st	X, r25
    254c:	8e 93       	st	-X, r24
    254e:	12 97       	sbiw	r26, 0x02	; 2
    2550:	e0 e0       	ldi	r30, 0x00	; 0
    2552:	f0 e0       	ldi	r31, 0x00	; 0
    2554:	8a 81       	ldd	r24, Y+2	; 0x02
    2556:	9b 81       	ldd	r25, Y+3	; 0x03
    2558:	00 97       	sbiw	r24, 0x00	; 0
    255a:	19 f0       	breq	.+6      	; 0x2562 <free+0xe4>
    255c:	fe 01       	movw	r30, r28
    255e:	ec 01       	movw	r28, r24
    2560:	f9 cf       	rjmp	.-14     	; 0x2554 <free+0xd6>
    2562:	ce 01       	movw	r24, r28
    2564:	02 96       	adiw	r24, 0x02	; 2
    2566:	28 81       	ld	r18, Y
    2568:	39 81       	ldd	r19, Y+1	; 0x01
    256a:	82 0f       	add	r24, r18
    256c:	93 1f       	adc	r25, r19
    256e:	20 91 dd 02 	lds	r18, 0x02DD
    2572:	30 91 de 02 	lds	r19, 0x02DE
    2576:	28 17       	cp	r18, r24
    2578:	39 07       	cpc	r19, r25
    257a:	69 f4       	brne	.+26     	; 0x2596 <free+0x118>
    257c:	30 97       	sbiw	r30, 0x00	; 0
    257e:	29 f4       	brne	.+10     	; 0x258a <free+0x10c>
    2580:	10 92 e0 02 	sts	0x02E0, r1
    2584:	10 92 df 02 	sts	0x02DF, r1
    2588:	02 c0       	rjmp	.+4      	; 0x258e <free+0x110>
    258a:	13 82       	std	Z+3, r1	; 0x03
    258c:	12 82       	std	Z+2, r1	; 0x02
    258e:	d0 93 de 02 	sts	0x02DE, r29
    2592:	c0 93 dd 02 	sts	0x02DD, r28
    2596:	df 91       	pop	r29
    2598:	cf 91       	pop	r28
    259a:	08 95       	ret

0000259c <memset>:
    259c:	dc 01       	movw	r26, r24
    259e:	01 c0       	rjmp	.+2      	; 0x25a2 <memset+0x6>
    25a0:	6d 93       	st	X+, r22
    25a2:	41 50       	subi	r20, 0x01	; 1
    25a4:	50 40       	sbci	r21, 0x00	; 0
    25a6:	e0 f7       	brcc	.-8      	; 0x25a0 <memset+0x4>
    25a8:	08 95       	ret

000025aa <_exit>:
    25aa:	f8 94       	cli

000025ac <__stop_program>:
    25ac:	ff cf       	rjmp	.-2      	; 0x25ac <__stop_program>
