
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d2  00800200  000025f6  0000268a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002f  008002d2  008002d2  0000275c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000275c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002f0  00000000  00000000  000027b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000025e9  00000000  00000000  00002aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000011bb  00000000  00000000  00005091  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001934  00000000  00000000  0000624c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000007b4  00000000  00000000  00007b80  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000075f  00000000  00000000  00008334  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000015cd  00000000  00000000  00008a93  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000220  00000000  00000000  0000a060  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	84 c1       	rjmp	.+776    	; 0x30a <__ctors_end>
       2:	00 00       	nop
       4:	a2 c1       	rjmp	.+836    	; 0x34a <__bad_interrupt>
       6:	00 00       	nop
       8:	a0 c1       	rjmp	.+832    	; 0x34a <__bad_interrupt>
       a:	00 00       	nop
       c:	9e c1       	rjmp	.+828    	; 0x34a <__bad_interrupt>
       e:	00 00       	nop
      10:	9c c1       	rjmp	.+824    	; 0x34a <__bad_interrupt>
      12:	00 00       	nop
      14:	9a c1       	rjmp	.+820    	; 0x34a <__bad_interrupt>
      16:	00 00       	nop
      18:	98 c1       	rjmp	.+816    	; 0x34a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	96 c1       	rjmp	.+812    	; 0x34a <__bad_interrupt>
      1e:	00 00       	nop
      20:	94 c1       	rjmp	.+808    	; 0x34a <__bad_interrupt>
      22:	00 00       	nop
      24:	92 c1       	rjmp	.+804    	; 0x34a <__bad_interrupt>
      26:	00 00       	nop
      28:	90 c1       	rjmp	.+800    	; 0x34a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	8e c1       	rjmp	.+796    	; 0x34a <__bad_interrupt>
      2e:	00 00       	nop
      30:	8c c1       	rjmp	.+792    	; 0x34a <__bad_interrupt>
      32:	00 00       	nop
      34:	8a c1       	rjmp	.+788    	; 0x34a <__bad_interrupt>
      36:	00 00       	nop
      38:	88 c1       	rjmp	.+784    	; 0x34a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	86 c1       	rjmp	.+780    	; 0x34a <__bad_interrupt>
      3e:	00 00       	nop
      40:	84 c1       	rjmp	.+776    	; 0x34a <__bad_interrupt>
      42:	00 00       	nop
      44:	82 c1       	rjmp	.+772    	; 0x34a <__bad_interrupt>
      46:	00 00       	nop
      48:	80 c1       	rjmp	.+768    	; 0x34a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	7e c1       	rjmp	.+764    	; 0x34a <__bad_interrupt>
      4e:	00 00       	nop
      50:	7c c1       	rjmp	.+760    	; 0x34a <__bad_interrupt>
      52:	00 00       	nop
      54:	7a c1       	rjmp	.+756    	; 0x34a <__bad_interrupt>
      56:	00 00       	nop
      58:	78 c1       	rjmp	.+752    	; 0x34a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	76 c1       	rjmp	.+748    	; 0x34a <__bad_interrupt>
      5e:	00 00       	nop
      60:	74 c1       	rjmp	.+744    	; 0x34a <__bad_interrupt>
      62:	00 00       	nop
      64:	72 c1       	rjmp	.+740    	; 0x34a <__bad_interrupt>
      66:	00 00       	nop
      68:	70 c1       	rjmp	.+736    	; 0x34a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	6e c1       	rjmp	.+732    	; 0x34a <__bad_interrupt>
      6e:	00 00       	nop
      70:	6c c1       	rjmp	.+728    	; 0x34a <__bad_interrupt>
      72:	00 00       	nop
      74:	6a c1       	rjmp	.+724    	; 0x34a <__bad_interrupt>
      76:	00 00       	nop
      78:	68 c1       	rjmp	.+720    	; 0x34a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	66 c1       	rjmp	.+716    	; 0x34a <__bad_interrupt>
      7e:	00 00       	nop
      80:	64 c1       	rjmp	.+712    	; 0x34a <__bad_interrupt>
      82:	00 00       	nop
      84:	62 c1       	rjmp	.+708    	; 0x34a <__bad_interrupt>
      86:	00 00       	nop
      88:	60 c1       	rjmp	.+704    	; 0x34a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	5e c1       	rjmp	.+700    	; 0x34a <__bad_interrupt>
      8e:	00 00       	nop
      90:	5c c1       	rjmp	.+696    	; 0x34a <__bad_interrupt>
      92:	00 00       	nop
      94:	5a c1       	rjmp	.+692    	; 0x34a <__bad_interrupt>
      96:	00 00       	nop
      98:	58 c1       	rjmp	.+688    	; 0x34a <__bad_interrupt>
      9a:	00 00       	nop
      9c:	e9 c7       	rjmp	.+4050   	; 0x1070 <__vector_39>
      9e:	00 00       	nop
      a0:	54 c1       	rjmp	.+680    	; 0x34a <__bad_interrupt>
      a2:	00 00       	nop
      a4:	52 c1       	rjmp	.+676    	; 0x34a <__bad_interrupt>
      a6:	00 00       	nop
      a8:	50 c1       	rjmp	.+672    	; 0x34a <__bad_interrupt>
      aa:	00 00       	nop
      ac:	4e c1       	rjmp	.+668    	; 0x34a <__bad_interrupt>
      ae:	00 00       	nop
      b0:	4c c1       	rjmp	.+664    	; 0x34a <__bad_interrupt>
      b2:	00 00       	nop
      b4:	4a c1       	rjmp	.+660    	; 0x34a <__bad_interrupt>
      b6:	00 00       	nop
      b8:	48 c1       	rjmp	.+656    	; 0x34a <__bad_interrupt>
      ba:	00 00       	nop
      bc:	46 c1       	rjmp	.+652    	; 0x34a <__bad_interrupt>
      be:	00 00       	nop
      c0:	44 c1       	rjmp	.+648    	; 0x34a <__bad_interrupt>
      c2:	00 00       	nop
      c4:	42 c1       	rjmp	.+644    	; 0x34a <__bad_interrupt>
      c6:	00 00       	nop
      c8:	40 c1       	rjmp	.+640    	; 0x34a <__bad_interrupt>
      ca:	00 00       	nop
      cc:	3e c1       	rjmp	.+636    	; 0x34a <__bad_interrupt>
      ce:	00 00       	nop
      d0:	3c c1       	rjmp	.+632    	; 0x34a <__bad_interrupt>
      d2:	00 00       	nop
      d4:	3a c1       	rjmp	.+628    	; 0x34a <__bad_interrupt>
      d6:	00 00       	nop
      d8:	38 c1       	rjmp	.+624    	; 0x34a <__bad_interrupt>
      da:	00 00       	nop
      dc:	36 c1       	rjmp	.+620    	; 0x34a <__bad_interrupt>
      de:	00 00       	nop
      e0:	34 c1       	rjmp	.+616    	; 0x34a <__bad_interrupt>
      e2:	00 00       	nop
      e4:	53 08       	sbc	r5, r3
      e6:	a5 08       	sbc	r10, r5
      e8:	a5 08       	sbc	r10, r5
      ea:	a5 08       	sbc	r10, r5
      ec:	a5 08       	sbc	r10, r5
      ee:	a5 08       	sbc	r10, r5
      f0:	a5 08       	sbc	r10, r5
      f2:	a5 08       	sbc	r10, r5
      f4:	53 08       	sbc	r5, r3
      f6:	a5 08       	sbc	r10, r5
      f8:	a5 08       	sbc	r10, r5
      fa:	a5 08       	sbc	r10, r5
      fc:	a5 08       	sbc	r10, r5
      fe:	a5 08       	sbc	r10, r5
     100:	a5 08       	sbc	r10, r5
     102:	a5 08       	sbc	r10, r5
     104:	55 08       	sbc	r5, r5
     106:	a5 08       	sbc	r10, r5
     108:	a5 08       	sbc	r10, r5
     10a:	a5 08       	sbc	r10, r5
     10c:	a5 08       	sbc	r10, r5
     10e:	a5 08       	sbc	r10, r5
     110:	a5 08       	sbc	r10, r5
     112:	a5 08       	sbc	r10, r5
     114:	a5 08       	sbc	r10, r5
     116:	a5 08       	sbc	r10, r5
     118:	a5 08       	sbc	r10, r5
     11a:	a5 08       	sbc	r10, r5
     11c:	a5 08       	sbc	r10, r5
     11e:	a5 08       	sbc	r10, r5
     120:	a5 08       	sbc	r10, r5
     122:	a5 08       	sbc	r10, r5
     124:	55 08       	sbc	r5, r5
     126:	a5 08       	sbc	r10, r5
     128:	a5 08       	sbc	r10, r5
     12a:	a5 08       	sbc	r10, r5
     12c:	a5 08       	sbc	r10, r5
     12e:	a5 08       	sbc	r10, r5
     130:	a5 08       	sbc	r10, r5
     132:	a5 08       	sbc	r10, r5
     134:	a5 08       	sbc	r10, r5
     136:	a5 08       	sbc	r10, r5
     138:	a5 08       	sbc	r10, r5
     13a:	a5 08       	sbc	r10, r5
     13c:	a5 08       	sbc	r10, r5
     13e:	a5 08       	sbc	r10, r5
     140:	a5 08       	sbc	r10, r5
     142:	a5 08       	sbc	r10, r5
     144:	a1 08       	sbc	r10, r1
     146:	a5 08       	sbc	r10, r5
     148:	a5 08       	sbc	r10, r5
     14a:	a5 08       	sbc	r10, r5
     14c:	a5 08       	sbc	r10, r5
     14e:	a5 08       	sbc	r10, r5
     150:	a5 08       	sbc	r10, r5
     152:	a5 08       	sbc	r10, r5
     154:	7e 08       	sbc	r7, r14
     156:	a5 08       	sbc	r10, r5
     158:	a5 08       	sbc	r10, r5
     15a:	a5 08       	sbc	r10, r5
     15c:	a5 08       	sbc	r10, r5
     15e:	a5 08       	sbc	r10, r5
     160:	a5 08       	sbc	r10, r5
     162:	a5 08       	sbc	r10, r5
     164:	a5 08       	sbc	r10, r5
     166:	a5 08       	sbc	r10, r5
     168:	a5 08       	sbc	r10, r5
     16a:	a5 08       	sbc	r10, r5
     16c:	a5 08       	sbc	r10, r5
     16e:	a5 08       	sbc	r10, r5
     170:	a5 08       	sbc	r10, r5
     172:	a5 08       	sbc	r10, r5
     174:	72 08       	sbc	r7, r2
     176:	a5 08       	sbc	r10, r5
     178:	a5 08       	sbc	r10, r5
     17a:	a5 08       	sbc	r10, r5
     17c:	a5 08       	sbc	r10, r5
     17e:	a5 08       	sbc	r10, r5
     180:	a5 08       	sbc	r10, r5
     182:	a5 08       	sbc	r10, r5
     184:	90 08       	sbc	r9, r0
     186:	07 63       	ori	r16, 0x37	; 55
     188:	42 36       	cpi	r20, 0x62	; 98
     18a:	b7 9b       	sbis	0x16, 7	; 22
     18c:	d8 a7       	std	Y+40, r29	; 0x28
     18e:	1a 39       	cpi	r17, 0x9A	; 154
     190:	68 56       	subi	r22, 0x68	; 104
     192:	18 ae       	std	Y+56, r1	; 0x38
     194:	ba ab       	std	Y+50, r27	; 0x32
     196:	55 8c       	ldd	r5, Z+29	; 0x1d
     198:	1d 3c       	cpi	r17, 0xCD	; 205
     19a:	b7 cc       	rjmp	.-1682   	; 0xfffffb0a <__eeprom_end+0xff7efb0a>
     19c:	57 63       	ori	r21, 0x37	; 55
     19e:	bd 6d       	ori	r27, 0xDD	; 221
     1a0:	ed fd       	.word	0xfded	; ????
     1a2:	75 3e       	cpi	r23, 0xE5	; 229
     1a4:	f6 17       	cp	r31, r22
     1a6:	72 31       	cpi	r23, 0x12	; 18
     1a8:	bf 00       	.word	0x00bf	; ????
     1aa:	00 00       	nop
     1ac:	80 3f       	cpi	r24, 0xF0	; 240
     1ae:	08 00       	.word	0x0008	; ????
     1b0:	00 00       	nop
     1b2:	be 92       	st	-X, r11
     1b4:	24 49       	sbci	r18, 0x94	; 148
     1b6:	12 3e       	cpi	r17, 0xE2	; 226
     1b8:	ab aa       	std	Y+51, r10	; 0x33
     1ba:	aa 2a       	or	r10, r26
     1bc:	be cd       	rjmp	.-1156   	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
     1be:	cc cc       	rjmp	.-1640   	; 0xfffffb58 <__eeprom_end+0xff7efb58>
     1c0:	4c 3e       	cpi	r20, 0xEC	; 236
     1c2:	00 00       	nop
     1c4:	00 80       	ld	r0, Z
     1c6:	be ab       	std	Y+54, r27	; 0x36
     1c8:	aa aa       	std	Y+50, r10	; 0x32
     1ca:	aa 3e       	cpi	r26, 0xEA	; 234
     1cc:	00 00       	nop
     1ce:	00 00       	nop
     1d0:	bf 00       	.word	0x00bf	; ????
     1d2:	00 00       	nop
     1d4:	80 3f       	cpi	r24, 0xF0	; 240
     1d6:	00 00       	nop
     1d8:	00 00       	nop
     1da:	00 08       	sbc	r0, r0
     1dc:	41 78       	andi	r20, 0x81	; 129
     1de:	d3 bb       	out	0x13, r29	; 19
     1e0:	43 87       	std	Z+11, r20	; 0x0b
     1e2:	d1 13       	cpse	r29, r17
     1e4:	3d 19       	sub	r19, r13
     1e6:	0e 3c       	cpi	r16, 0xCE	; 206
     1e8:	c3 bd       	out	0x23, r28	; 35
     1ea:	42 82       	std	Z+2, r4	; 0x02
     1ec:	ad 2b       	or	r26, r29
     1ee:	3e 68       	ori	r19, 0x8E	; 142
     1f0:	ec 82       	std	Y+4, r14	; 0x04
     1f2:	76 be       	out	0x36, r7	; 54
     1f4:	d9 8f       	std	Y+25, r29	; 0x19
     1f6:	e1 a9       	ldd	r30, Z+49	; 0x31
     1f8:	3e 4c       	sbci	r19, 0xCE	; 206
     1fa:	80 ef       	ldi	r24, 0xF0	; 240
     1fc:	ff be       	out	0x3f, r15	; 63
     1fe:	01 c4       	rjmp	.+2050   	; 0xa02 <can_handle_pid_message+0x100>
     200:	ff 7f       	andi	r31, 0xFF	; 255
     202:	3f 00       	.word	0x003f	; ????
     204:	00 00       	nop
	...

00000208 <__trampolines_end>:
     208:	6e 61       	ori	r22, 0x1E	; 30
     20a:	6e 00       	.word	0x006e	; ????

0000020c <__c.2159>:
     20c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     21c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     22c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     23c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     24c:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     25c:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     26c:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     27c:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     28c:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     29c:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2ac:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2bc:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2cc:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2dc:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2ec:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2fc:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000030a <__ctors_end>:
     30a:	11 24       	eor	r1, r1
     30c:	1f be       	out	0x3f, r1	; 63
     30e:	cf ef       	ldi	r28, 0xFF	; 255
     310:	d1 e2       	ldi	r29, 0x21	; 33
     312:	de bf       	out	0x3e, r29	; 62
     314:	cd bf       	out	0x3d, r28	; 61
     316:	00 e0       	ldi	r16, 0x00	; 0
     318:	0c bf       	out	0x3c, r16	; 60

0000031a <__do_copy_data>:
     31a:	12 e0       	ldi	r17, 0x02	; 2
     31c:	a0 e0       	ldi	r26, 0x00	; 0
     31e:	b2 e0       	ldi	r27, 0x02	; 2
     320:	e6 ef       	ldi	r30, 0xF6	; 246
     322:	f5 e2       	ldi	r31, 0x25	; 37
     324:	00 e0       	ldi	r16, 0x00	; 0
     326:	0b bf       	out	0x3b, r16	; 59
     328:	02 c0       	rjmp	.+4      	; 0x32e <__do_copy_data+0x14>
     32a:	07 90       	elpm	r0, Z+
     32c:	0d 92       	st	X+, r0
     32e:	a2 3d       	cpi	r26, 0xD2	; 210
     330:	b1 07       	cpc	r27, r17
     332:	d9 f7       	brne	.-10     	; 0x32a <__do_copy_data+0x10>

00000334 <__do_clear_bss>:
     334:	23 e0       	ldi	r18, 0x03	; 3
     336:	a2 ed       	ldi	r26, 0xD2	; 210
     338:	b2 e0       	ldi	r27, 0x02	; 2
     33a:	01 c0       	rjmp	.+2      	; 0x33e <.do_clear_bss_start>

0000033c <.do_clear_bss_loop>:
     33c:	1d 92       	st	X+, r1

0000033e <.do_clear_bss_start>:
     33e:	a1 30       	cpi	r26, 0x01	; 1
     340:	b2 07       	cpc	r27, r18
     342:	e1 f7       	brne	.-8      	; 0x33c <.do_clear_bss_loop>
     344:	f8 d5       	rcall	.+3056   	; 0xf36 <main>
     346:	0c 94 f9 12 	jmp	0x25f2	; 0x25f2 <_exit>

0000034a <__bad_interrupt>:
     34a:	5a ce       	rjmp	.-844    	; 0x0 <__vectors>

0000034c <pid_init>:

float reference;
float integral;
float prev_error;

void pid_init(float _kp, float _ki, float _kd){
     34c:	ef 92       	push	r14
     34e:	ff 92       	push	r15
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
	kp = _kp;
     354:	60 93 ee 02 	sts	0x02EE, r22
     358:	70 93 ef 02 	sts	0x02EF, r23
     35c:	80 93 f0 02 	sts	0x02F0, r24
     360:	90 93 f1 02 	sts	0x02F1, r25
	ki = _ki;
     364:	20 93 e2 02 	sts	0x02E2, r18
     368:	30 93 e3 02 	sts	0x02E3, r19
     36c:	40 93 e4 02 	sts	0x02E4, r20
     370:	50 93 e5 02 	sts	0x02E5, r21
	kd = _kd;
     374:	e0 92 da 02 	sts	0x02DA, r14
     378:	f0 92 db 02 	sts	0x02DB, r15
     37c:	00 93 dc 02 	sts	0x02DC, r16
     380:	10 93 dd 02 	sts	0x02DD, r17
	
	reference	= 0;
     384:	10 92 de 02 	sts	0x02DE, r1
     388:	10 92 df 02 	sts	0x02DF, r1
     38c:	10 92 e0 02 	sts	0x02E0, r1
     390:	10 92 e1 02 	sts	0x02E1, r1
	integral	= 0;
     394:	10 92 ea 02 	sts	0x02EA, r1
     398:	10 92 eb 02 	sts	0x02EB, r1
     39c:	10 92 ec 02 	sts	0x02EC, r1
     3a0:	10 92 ed 02 	sts	0x02ED, r1
	prev_error	= 0;
     3a4:	10 92 e6 02 	sts	0x02E6, r1
     3a8:	10 92 e7 02 	sts	0x02E7, r1
     3ac:	10 92 e8 02 	sts	0x02E8, r1
     3b0:	10 92 e9 02 	sts	0x02E9, r1
	
}
     3b4:	1f 91       	pop	r17
     3b6:	0f 91       	pop	r16
     3b8:	ff 90       	pop	r15
     3ba:	ef 90       	pop	r14
     3bc:	08 95       	ret

000003be <pid_generate>:


float pid_generate(float r, float y, float dt){
     3be:	4f 92       	push	r4
     3c0:	5f 92       	push	r5
     3c2:	6f 92       	push	r6
     3c4:	7f 92       	push	r7
     3c6:	8f 92       	push	r8
     3c8:	9f 92       	push	r9
     3ca:	af 92       	push	r10
     3cc:	bf 92       	push	r11
     3ce:	cf 92       	push	r12
     3d0:	df 92       	push	r13
     3d2:	ef 92       	push	r14
     3d4:	ff 92       	push	r15
     3d6:	0f 93       	push	r16
     3d8:	1f 93       	push	r17
     3da:	27 01       	movw	r4, r14
     3dc:	38 01       	movw	r6, r16
	float error = r - y;
     3de:	cb d6       	rcall	.+3478   	; 0x1176 <__subsf3>
     3e0:	6b 01       	movw	r12, r22
     3e2:	7c 01       	movw	r14, r24
	integral += error * dt;
     3e4:	a3 01       	movw	r20, r6
     3e6:	92 01       	movw	r18, r4
     3e8:	0e 94 47 0a 	call	0x148e	; 0x148e <__mulsf3>
     3ec:	20 91 ea 02 	lds	r18, 0x02EA
     3f0:	30 91 eb 02 	lds	r19, 0x02EB
     3f4:	40 91 ec 02 	lds	r20, 0x02EC
     3f8:	50 91 ed 02 	lds	r21, 0x02ED
     3fc:	bd d6       	rcall	.+3450   	; 0x1178 <__addsf3>
     3fe:	4b 01       	movw	r8, r22
     400:	5c 01       	movw	r10, r24
     402:	60 93 ea 02 	sts	0x02EA, r22
     406:	70 93 eb 02 	sts	0x02EB, r23
     40a:	80 93 ec 02 	sts	0x02EC, r24
     40e:	90 93 ed 02 	sts	0x02ED, r25
	float derivative = (error - prev_error) / dt;
     412:	20 91 e6 02 	lds	r18, 0x02E6
     416:	30 91 e7 02 	lds	r19, 0x02E7
     41a:	40 91 e8 02 	lds	r20, 0x02E8
     41e:	50 91 e9 02 	lds	r21, 0x02E9
     422:	c7 01       	movw	r24, r14
     424:	b6 01       	movw	r22, r12
     426:	a7 d6       	rcall	.+3406   	; 0x1176 <__subsf3>
     428:	a3 01       	movw	r20, r6
     42a:	92 01       	movw	r18, r4
     42c:	09 d7       	rcall	.+3602   	; 0x1240 <__divsf3>
     42e:	2b 01       	movw	r4, r22
     430:	3c 01       	movw	r6, r24

	prev_error = error;
     432:	c0 92 e6 02 	sts	0x02E6, r12
     436:	d0 92 e7 02 	sts	0x02E7, r13
     43a:	e0 92 e8 02 	sts	0x02E8, r14
     43e:	f0 92 e9 02 	sts	0x02E9, r15
	return kp*error + ki*integral + kd*derivative;
     442:	20 91 ee 02 	lds	r18, 0x02EE
     446:	30 91 ef 02 	lds	r19, 0x02EF
     44a:	40 91 f0 02 	lds	r20, 0x02F0
     44e:	50 91 f1 02 	lds	r21, 0x02F1
     452:	c7 01       	movw	r24, r14
     454:	b6 01       	movw	r22, r12
     456:	0e 94 47 0a 	call	0x148e	; 0x148e <__mulsf3>
     45a:	6b 01       	movw	r12, r22
     45c:	7c 01       	movw	r14, r24
     45e:	20 91 e2 02 	lds	r18, 0x02E2
     462:	30 91 e3 02 	lds	r19, 0x02E3
     466:	40 91 e4 02 	lds	r20, 0x02E4
     46a:	50 91 e5 02 	lds	r21, 0x02E5
     46e:	c5 01       	movw	r24, r10
     470:	b4 01       	movw	r22, r8
     472:	0e 94 47 0a 	call	0x148e	; 0x148e <__mulsf3>
     476:	9b 01       	movw	r18, r22
     478:	ac 01       	movw	r20, r24
     47a:	c7 01       	movw	r24, r14
     47c:	b6 01       	movw	r22, r12
     47e:	7c d6       	rcall	.+3320   	; 0x1178 <__addsf3>
     480:	6b 01       	movw	r12, r22
     482:	7c 01       	movw	r14, r24
     484:	20 91 da 02 	lds	r18, 0x02DA
     488:	30 91 db 02 	lds	r19, 0x02DB
     48c:	40 91 dc 02 	lds	r20, 0x02DC
     490:	50 91 dd 02 	lds	r21, 0x02DD
     494:	c3 01       	movw	r24, r6
     496:	b2 01       	movw	r22, r4
     498:	fa d7       	rcall	.+4084   	; 0x148e <__mulsf3>
     49a:	9b 01       	movw	r18, r22
     49c:	ac 01       	movw	r20, r24
     49e:	c7 01       	movw	r24, r14
     4a0:	b6 01       	movw	r22, r12
     4a2:	6a d6       	rcall	.+3284   	; 0x1178 <__addsf3>
}
     4a4:	1f 91       	pop	r17
     4a6:	0f 91       	pop	r16
     4a8:	ff 90       	pop	r15
     4aa:	ef 90       	pop	r14
     4ac:	df 90       	pop	r13
     4ae:	cf 90       	pop	r12
     4b0:	bf 90       	pop	r11
     4b2:	af 90       	pop	r10
     4b4:	9f 90       	pop	r9
     4b6:	8f 90       	pop	r8
     4b8:	7f 90       	pop	r7
     4ba:	6f 90       	pop	r6
     4bc:	5f 90       	pop	r5
     4be:	4f 90       	pop	r4
     4c0:	08 95       	ret

000004c2 <pid_encoder_max_value>:

uint16_t pid_encoder_max_value(void){
     4c2:	0f 93       	push	r16
     4c4:	1f 93       	push	r17
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
	motor_speed(100);
     4ca:	84 e6       	ldi	r24, 0x64	; 100
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	0c d4       	rcall	.+2072   	; 0xce8 <motor_speed>
	uint16_t enc_val = 0, prev_enc_val = -1;
     4d0:	8f ef       	ldi	r24, 0xFF	; 255
     4d2:	9f ef       	ldi	r25, 0xFF	; 255
     4d4:	c0 e0       	ldi	r28, 0x00	; 0
     4d6:	d0 e0       	ldi	r29, 0x00	; 0
	while(enc_val != prev_enc_val){
		printf("In while: %d %d\n", enc_val, prev_enc_val);
     4d8:	07 e0       	ldi	r16, 0x07	; 7
     4da:	12 e0       	ldi	r17, 0x02	; 2
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	df 93       	push	r29
     4e2:	cf 93       	push	r28
     4e4:	1f 93       	push	r17
     4e6:	0f 93       	push	r16
     4e8:	0e 94 15 11 	call	0x222a	; 0x222a <printf>
		enc_val = motor_encoder_read();
     4ec:	2d d4       	rcall	.+2138   	; 0xd48 <motor_encoder_read>
     4ee:	ec 01       	movw	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4f0:	87 ea       	ldi	r24, 0xA7	; 167
     4f2:	91 e6       	ldi	r25, 0x61	; 97
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	f1 f7       	brne	.-4      	; 0x4f4 <pid_encoder_max_value+0x32>
     4f8:	00 c0       	rjmp	.+0      	; 0x4fa <pid_encoder_max_value+0x38>
     4fa:	00 00       	nop
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
     4fc:	25 d4       	rcall	.+2122   	; 0xd48 <motor_encoder_read>
}

uint16_t pid_encoder_max_value(void){
	motor_speed(100);
	uint16_t enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
     4fe:	0f 90       	pop	r0
     500:	0f 90       	pop	r0
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
     50a:	c8 17       	cp	r28, r24
     50c:	d9 07       	cpc	r29, r25
     50e:	31 f7       	brne	.-52     	; 0x4dc <pid_encoder_max_value+0x1a>
		printf("In while: %d %d\n", enc_val, prev_enc_val);
		enc_val = motor_encoder_read();
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
	}
	motor_speed(0);
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	e9 d3       	rcall	.+2002   	; 0xce8 <motor_speed>
	motor_encoder_reset();
     516:	d3 d3       	rcall	.+1958   	; 0xcbe <motor_encoder_reset>
	
	motor_speed(-100);
     518:	8c e9       	ldi	r24, 0x9C	; 156
     51a:	9f ef       	ldi	r25, 0xFF	; 255
     51c:	e5 d3       	rcall	.+1994   	; 0xce8 <motor_speed>
	enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
		enc_val = motor_encoder_read();
     51e:	14 d4       	rcall	.+2088   	; 0xd48 <motor_encoder_read>
     520:	ec 01       	movw	r28, r24
     522:	87 ea       	ldi	r24, 0xA7	; 167
     524:	91 e6       	ldi	r25, 0x61	; 97
     526:	01 97       	sbiw	r24, 0x01	; 1
     528:	f1 f7       	brne	.-4      	; 0x526 <pid_encoder_max_value+0x64>
     52a:	00 c0       	rjmp	.+0      	; 0x52c <pid_encoder_max_value+0x6a>
     52c:	00 00       	nop
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
     52e:	0c d4       	rcall	.+2072   	; 0xd48 <motor_encoder_read>
	motor_speed(0);
	motor_encoder_reset();
	
	motor_speed(-100);
	enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
     530:	c8 17       	cp	r28, r24
     532:	d9 07       	cpc	r29, r25
     534:	a1 f7       	brne	.-24     	; 0x51e <pid_encoder_max_value+0x5c>
		enc_val = motor_encoder_read();
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
	}
	motor_speed(0);
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	d6 d3       	rcall	.+1964   	; 0xce8 <motor_speed>
	
	//Find max value of encoder.
	return enc_val;
     53c:	ce 01       	movw	r24, r28
     53e:	df 91       	pop	r29
     540:	cf 91       	pop	r28
     542:	1f 91       	pop	r17
     544:	0f 91       	pop	r16
     546:	08 95       	ret

00000548 <adc_init>:
#include <avr/io.h>
#include <stdint.h>
void adc_init(void){
	ADCSRA	|= (1 << ADEN) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
     548:	ea e7       	ldi	r30, 0x7A	; 122
     54a:	f0 e0       	ldi	r31, 0x00	; 0
     54c:	80 81       	ld	r24, Z
     54e:	87 68       	ori	r24, 0x87	; 135
     550:	80 83       	st	Z, r24
	ADMUX	|= (1<<REFS0);
     552:	ec e7       	ldi	r30, 0x7C	; 124
     554:	f0 e0       	ldi	r31, 0x00	; 0
     556:	80 81       	ld	r24, Z
     558:	80 64       	ori	r24, 0x40	; 64
     55a:	80 83       	st	Z, r24
	ADMUX	&= ~(1<<REFS1);
     55c:	80 81       	ld	r24, Z
     55e:	8f 77       	andi	r24, 0x7F	; 127
     560:	80 83       	st	Z, r24
     562:	08 95       	ret

00000564 <adc_read>:
}

uint16_t adc_read(uint8_t channel){
	ADMUX	|= ((1<<channel) & 0x03);
     564:	ec e7       	ldi	r30, 0x7C	; 124
     566:	f0 e0       	ldi	r31, 0x00	; 0
     568:	90 81       	ld	r25, Z
     56a:	21 e0       	ldi	r18, 0x01	; 1
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	02 c0       	rjmp	.+4      	; 0x574 <adc_read+0x10>
     570:	22 0f       	add	r18, r18
     572:	33 1f       	adc	r19, r19
     574:	8a 95       	dec	r24
     576:	e2 f7       	brpl	.-8      	; 0x570 <adc_read+0xc>
     578:	23 70       	andi	r18, 0x03	; 3
     57a:	92 2b       	or	r25, r18
     57c:	90 83       	st	Z, r25
	ADCSRA	|= (1 << ADSC);
     57e:	ea e7       	ldi	r30, 0x7A	; 122
     580:	f0 e0       	ldi	r31, 0x00	; 0
     582:	80 81       	ld	r24, Z
     584:	80 64       	ori	r24, 0x40	; 64
     586:	80 83       	st	Z, r24

	while((ADCSRA & (1<<ADSC))){ ; }
     588:	80 81       	ld	r24, Z
     58a:	86 fd       	sbrc	r24, 6
     58c:	fd cf       	rjmp	.-6      	; 0x588 <adc_read+0x24>

	return ADC;
     58e:	80 91 78 00 	lds	r24, 0x0078
     592:	90 91 79 00 	lds	r25, 0x0079
     596:	08 95       	ret

00000598 <can_init>:
	printf("\n");
}

void can_handle_joystick_message(can_message msg){
		pwm_set_servo(msg.data[0]-2);
}
     598:	8f d3       	rcall	.+1822   	; 0xcb8 <mcp_init>
     59a:	4f ef       	ldi	r20, 0xFF	; 255
     59c:	64 e6       	ldi	r22, 0x64	; 100
     59e:	80 e6       	ldi	r24, 0x60	; 96
     5a0:	73 d3       	rcall	.+1766   	; 0xc88 <mcp_bitModify>
     5a2:	4f ef       	ldi	r20, 0xFF	; 255
     5a4:	64 e6       	ldi	r22, 0x64	; 100
     5a6:	80 e7       	ldi	r24, 0x70	; 112
     5a8:	6f d3       	rcall	.+1758   	; 0xc88 <mcp_bitModify>
     5aa:	4f ef       	ldi	r20, 0xFF	; 255
     5ac:	63 e0       	ldi	r22, 0x03	; 3
     5ae:	8e e2       	ldi	r24, 0x2E	; 46
     5b0:	6b d3       	rcall	.+1750   	; 0xc88 <mcp_bitModify>
     5b2:	40 e0       	ldi	r20, 0x00	; 0
     5b4:	60 ee       	ldi	r22, 0xE0	; 224
     5b6:	8f e0       	ldi	r24, 0x0F	; 15
     5b8:	67 c3       	rjmp	.+1742   	; 0xc88 <mcp_bitModify>
     5ba:	08 95       	ret

000005bc <can_read>:
     5bc:	8f 92       	push	r8
     5be:	9f 92       	push	r9
     5c0:	af 92       	push	r10
     5c2:	bf 92       	push	r11
     5c4:	cf 92       	push	r12
     5c6:	df 92       	push	r13
     5c8:	ef 92       	push	r14
     5ca:	ff 92       	push	r15
     5cc:	0f 93       	push	r16
     5ce:	1f 93       	push	r17
     5d0:	cf 93       	push	r28
     5d2:	df 93       	push	r29
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
     5d8:	2b 97       	sbiw	r28, 0x0b	; 11
     5da:	0f b6       	in	r0, 0x3f	; 63
     5dc:	f8 94       	cli
     5de:	de bf       	out	0x3e, r29	; 62
     5e0:	0f be       	out	0x3f, r0	; 63
     5e2:	cd bf       	out	0x3d, r28	; 61
     5e4:	6c 01       	movw	r12, r24
     5e6:	16 2f       	mov	r17, r22
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	86 0f       	add	r24, r22
     5ec:	2d d3       	rcall	.+1626   	; 0xc48 <mcp_read>
     5ee:	a8 2e       	mov	r10, r24
     5f0:	82 e0       	ldi	r24, 0x02	; 2
     5f2:	81 0f       	add	r24, r17
     5f4:	29 d3       	rcall	.+1618   	; 0xc48 <mcp_read>
     5f6:	82 95       	swap	r24
     5f8:	86 95       	lsr	r24
     5fa:	87 70       	andi	r24, 0x07	; 7
     5fc:	b1 2c       	mov	r11, r1
     5fe:	aa 0c       	add	r10, r10
     600:	bb 1c       	adc	r11, r11
     602:	aa 0c       	add	r10, r10
     604:	bb 1c       	adc	r11, r11
     606:	aa 0c       	add	r10, r10
     608:	bb 1c       	adc	r11, r11
     60a:	a8 2a       	or	r10, r24
     60c:	85 e0       	ldi	r24, 0x05	; 5
     60e:	81 0f       	add	r24, r17
     610:	1b d3       	rcall	.+1590   	; 0xc48 <mcp_read>
     612:	8f 70       	andi	r24, 0x0F	; 15
     614:	88 2e       	mov	r8, r24
     616:	a1 f0       	breq	.+40     	; 0x640 <can_read+0x84>
     618:	0f 2e       	mov	r0, r31
     61a:	f6 e0       	ldi	r31, 0x06	; 6
     61c:	9f 2e       	mov	r9, r31
     61e:	f0 2d       	mov	r31, r0
     620:	91 0e       	add	r9, r17
     622:	8e 01       	movw	r16, r28
     624:	0c 5f       	subi	r16, 0xFC	; 252
     626:	1f 4f       	sbci	r17, 0xFF	; 255
     628:	78 01       	movw	r14, r16
     62a:	e8 0e       	add	r14, r24
     62c:	f1 1c       	adc	r15, r1
     62e:	89 2d       	mov	r24, r9
     630:	0b d3       	rcall	.+1558   	; 0xc48 <mcp_read>
     632:	f8 01       	movw	r30, r16
     634:	81 93       	st	Z+, r24
     636:	8f 01       	movw	r16, r30
     638:	93 94       	inc	r9
     63a:	ee 15       	cp	r30, r14
     63c:	ff 05       	cpc	r31, r15
     63e:	b9 f7       	brne	.-18     	; 0x62e <can_read+0x72>
     640:	40 e0       	ldi	r20, 0x00	; 0
     642:	61 e0       	ldi	r22, 0x01	; 1
     644:	8c e2       	ldi	r24, 0x2C	; 44
     646:	20 d3       	rcall	.+1600   	; 0xc88 <mcp_bitModify>
     648:	ba 82       	std	Y+2, r11	; 0x02
     64a:	a9 82       	std	Y+1, r10	; 0x01
     64c:	8b 82       	std	Y+3, r8	; 0x03
     64e:	8b e0       	ldi	r24, 0x0B	; 11
     650:	fe 01       	movw	r30, r28
     652:	31 96       	adiw	r30, 0x01	; 1
     654:	d6 01       	movw	r26, r12
     656:	01 90       	ld	r0, Z+
     658:	0d 92       	st	X+, r0
     65a:	8a 95       	dec	r24
     65c:	e1 f7       	brne	.-8      	; 0x656 <can_read+0x9a>
     65e:	c6 01       	movw	r24, r12
     660:	2b 96       	adiw	r28, 0x0b	; 11
     662:	0f b6       	in	r0, 0x3f	; 63
     664:	f8 94       	cli
     666:	de bf       	out	0x3e, r29	; 62
     668:	0f be       	out	0x3f, r0	; 63
     66a:	cd bf       	out	0x3d, r28	; 61
     66c:	df 91       	pop	r29
     66e:	cf 91       	pop	r28
     670:	1f 91       	pop	r17
     672:	0f 91       	pop	r16
     674:	ff 90       	pop	r15
     676:	ef 90       	pop	r14
     678:	df 90       	pop	r13
     67a:	cf 90       	pop	r12
     67c:	bf 90       	pop	r11
     67e:	af 90       	pop	r10
     680:	9f 90       	pop	r9
     682:	8f 90       	pop	r8
     684:	08 95       	ret

00000686 <new_can_message>:
     686:	cf 93       	push	r28
     688:	df 93       	push	r29
     68a:	cd b7       	in	r28, 0x3d	; 61
     68c:	de b7       	in	r29, 0x3e	; 62
     68e:	2b 97       	sbiw	r28, 0x0b	; 11
     690:	0f b6       	in	r0, 0x3f	; 63
     692:	f8 94       	cli
     694:	de bf       	out	0x3e, r29	; 62
     696:	0f be       	out	0x3f, r0	; 63
     698:	cd bf       	out	0x3d, r28	; 61
     69a:	44 23       	and	r20, r20
     69c:	61 f0       	breq	.+24     	; 0x6b6 <new_can_message+0x30>
     69e:	a2 2f       	mov	r26, r18
     6a0:	b3 2f       	mov	r27, r19
     6a2:	fe 01       	movw	r30, r28
     6a4:	34 96       	adiw	r30, 0x04	; 4
     6a6:	9f 01       	movw	r18, r30
     6a8:	24 0f       	add	r18, r20
     6aa:	31 1d       	adc	r19, r1
     6ac:	5d 91       	ld	r21, X+
     6ae:	51 93       	st	Z+, r21
     6b0:	e2 17       	cp	r30, r18
     6b2:	f3 07       	cpc	r31, r19
     6b4:	d9 f7       	brne	.-10     	; 0x6ac <new_can_message+0x26>
     6b6:	7a 83       	std	Y+2, r23	; 0x02
     6b8:	69 83       	std	Y+1, r22	; 0x01
     6ba:	4b 83       	std	Y+3, r20	; 0x03
     6bc:	2b e0       	ldi	r18, 0x0B	; 11
     6be:	fe 01       	movw	r30, r28
     6c0:	31 96       	adiw	r30, 0x01	; 1
     6c2:	dc 01       	movw	r26, r24
     6c4:	01 90       	ld	r0, Z+
     6c6:	0d 92       	st	X+, r0
     6c8:	2a 95       	dec	r18
     6ca:	e1 f7       	brne	.-8      	; 0x6c4 <new_can_message+0x3e>
     6cc:	2b 96       	adiw	r28, 0x0b	; 11
     6ce:	0f b6       	in	r0, 0x3f	; 63
     6d0:	f8 94       	cli
     6d2:	de bf       	out	0x3e, r29	; 62
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	cd bf       	out	0x3d, r28	; 61
     6d8:	df 91       	pop	r29
     6da:	cf 91       	pop	r28
     6dc:	08 95       	ret

000006de <can_write>:
     6de:	cf 92       	push	r12
     6e0:	df 92       	push	r13
     6e2:	ef 92       	push	r14
     6e4:	ff 92       	push	r15
     6e6:	0f 93       	push	r16
     6e8:	1f 93       	push	r17
     6ea:	cf 93       	push	r28
     6ec:	df 93       	push	r29
     6ee:	cd b7       	in	r28, 0x3d	; 61
     6f0:	de b7       	in	r29, 0x3e	; 62
     6f2:	2b 97       	sbiw	r28, 0x0b	; 11
     6f4:	0f b6       	in	r0, 0x3f	; 63
     6f6:	f8 94       	cli
     6f8:	de bf       	out	0x3e, r29	; 62
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	cd bf       	out	0x3d, r28	; 61
     6fe:	e9 82       	std	Y+1, r14	; 0x01
     700:	fa 82       	std	Y+2, r15	; 0x02
     702:	0b 83       	std	Y+3, r16	; 0x03
     704:	1c 83       	std	Y+4, r17	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	69 87       	std	Y+9, r22	; 0x09
     710:	7a 87       	std	Y+10, r23	; 0x0a
     712:	8b 87       	std	Y+11, r24	; 0x0b
     714:	e9 80       	ldd	r14, Y+1	; 0x01
     716:	fa 80       	ldd	r15, Y+2	; 0x02
     718:	8c 2d       	mov	r24, r12
     71a:	96 d2       	rcall	.+1324   	; 0xc48 <mcp_read>
     71c:	83 fd       	sbrc	r24, 3
     71e:	fc cf       	rjmp	.-8      	; 0x718 <can_write+0x3a>
     720:	b7 01       	movw	r22, r14
     722:	76 95       	lsr	r23
     724:	67 95       	ror	r22
     726:	76 95       	lsr	r23
     728:	67 95       	ror	r22
     72a:	76 95       	lsr	r23
     72c:	67 95       	ror	r22
     72e:	81 e0       	ldi	r24, 0x01	; 1
     730:	8c 0d       	add	r24, r12
     732:	96 d2       	rcall	.+1324   	; 0xc60 <mcp_write>
     734:	6e 2d       	mov	r22, r14
     736:	62 95       	swap	r22
     738:	66 0f       	add	r22, r22
     73a:	60 7e       	andi	r22, 0xE0	; 224
     73c:	82 e0       	ldi	r24, 0x02	; 2
     73e:	8c 0d       	add	r24, r12
     740:	8f d2       	rcall	.+1310   	; 0xc60 <mcp_write>
     742:	60 2f       	mov	r22, r16
     744:	6f 70       	andi	r22, 0x0F	; 15
     746:	85 e0       	ldi	r24, 0x05	; 5
     748:	8c 0d       	add	r24, r12
     74a:	8a d2       	rcall	.+1300   	; 0xc60 <mcp_write>
     74c:	00 23       	and	r16, r16
     74e:	b1 f0       	breq	.+44     	; 0x77c <can_write+0x9e>
     750:	7e 01       	movw	r14, r28
     752:	84 e0       	ldi	r24, 0x04	; 4
     754:	e8 0e       	add	r14, r24
     756:	f1 1c       	adc	r15, r1
     758:	0f 2e       	mov	r0, r31
     75a:	f6 e0       	ldi	r31, 0x06	; 6
     75c:	df 2e       	mov	r13, r31
     75e:	f0 2d       	mov	r31, r0
     760:	dc 0c       	add	r13, r12
     762:	f7 01       	movw	r30, r14
     764:	e0 0f       	add	r30, r16
     766:	f1 1d       	adc	r31, r1
     768:	8f 01       	movw	r16, r30
     76a:	f7 01       	movw	r30, r14
     76c:	61 91       	ld	r22, Z+
     76e:	7f 01       	movw	r14, r30
     770:	8d 2d       	mov	r24, r13
     772:	76 d2       	rcall	.+1260   	; 0xc60 <mcp_write>
     774:	d3 94       	inc	r13
     776:	e0 16       	cp	r14, r16
     778:	f1 06       	cpc	r15, r17
     77a:	b9 f7       	brne	.-18     	; 0x76a <can_write+0x8c>
     77c:	8c 2d       	mov	r24, r12
     77e:	82 95       	swap	r24
     780:	8f 70       	andi	r24, 0x0F	; 15
     782:	82 58       	subi	r24, 0x82	; 130
     784:	95 d2       	rcall	.+1322   	; 0xcb0 <mcp_requestToSend>
     786:	2b 96       	adiw	r28, 0x0b	; 11
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	f8 94       	cli
     78c:	de bf       	out	0x3e, r29	; 62
     78e:	0f be       	out	0x3f, r0	; 63
     790:	cd bf       	out	0x3d, r28	; 61
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	1f 91       	pop	r17
     798:	0f 91       	pop	r16
     79a:	ff 90       	pop	r15
     79c:	ef 90       	pop	r14
     79e:	df 90       	pop	r13
     7a0:	cf 90       	pop	r12
     7a2:	08 95       	ret

000007a4 <can_pollInterrupt>:
     7a4:	80 b1       	in	r24, 0x00	; 0
     7a6:	8c e2       	ldi	r24, 0x2C	; 44
     7a8:	4f d2       	rcall	.+1182   	; 0xc48 <mcp_read>
     7aa:	80 ff       	sbrs	r24, 0
     7ac:	06 c0       	rjmp	.+12     	; 0x7ba <can_pollInterrupt+0x16>
     7ae:	4f ef       	ldi	r20, 0xFF	; 255
     7b0:	61 e0       	ldi	r22, 0x01	; 1
     7b2:	8c e2       	ldi	r24, 0x2C	; 44
     7b4:	69 d2       	rcall	.+1234   	; 0xc88 <mcp_bitModify>
     7b6:	90 e6       	ldi	r25, 0x60	; 96
     7b8:	09 c0       	rjmp	.+18     	; 0x7cc <can_pollInterrupt+0x28>
     7ba:	98 2f       	mov	r25, r24
     7bc:	92 70       	andi	r25, 0x02	; 2
     7be:	81 ff       	sbrs	r24, 1
     7c0:	05 c0       	rjmp	.+10     	; 0x7cc <can_pollInterrupt+0x28>
     7c2:	4f ef       	ldi	r20, 0xFF	; 255
     7c4:	62 e0       	ldi	r22, 0x02	; 2
     7c6:	8c e2       	ldi	r24, 0x2C	; 44
     7c8:	5f d2       	rcall	.+1214   	; 0xc88 <mcp_bitModify>
     7ca:	90 e7       	ldi	r25, 0x70	; 112
     7cc:	89 2f       	mov	r24, r25
     7ce:	08 95       	ret

000007d0 <can_handle_solenoid_message>:
void can_handle_solenoid_message(can_message msg){
     7d0:	ef 92       	push	r14
     7d2:	ff 92       	push	r15
     7d4:	0f 93       	push	r16
     7d6:	1f 93       	push	r17
     7d8:	cf 93       	push	r28
     7da:	df 93       	push	r29
     7dc:	cd b7       	in	r28, 0x3d	; 61
     7de:	de b7       	in	r29, 0x3e	; 62
     7e0:	2b 97       	sbiw	r28, 0x0b	; 11
     7e2:	0f b6       	in	r0, 0x3f	; 63
     7e4:	f8 94       	cli
     7e6:	de bf       	out	0x3e, r29	; 62
     7e8:	0f be       	out	0x3f, r0	; 63
     7ea:	cd bf       	out	0x3d, r28	; 61
     7ec:	e9 82       	std	Y+1, r14	; 0x01
     7ee:	fa 82       	std	Y+2, r15	; 0x02
     7f0:	0b 83       	std	Y+3, r16	; 0x03
     7f2:	1c 83       	std	Y+4, r17	; 0x04
     7f4:	2d 83       	std	Y+5, r18	; 0x05
     7f6:	3e 83       	std	Y+6, r19	; 0x06
     7f8:	4f 83       	std	Y+7, r20	; 0x07
     7fa:	58 87       	std	Y+8, r21	; 0x08
     7fc:	69 87       	std	Y+9, r22	; 0x09
     7fe:	7a 87       	std	Y+10, r23	; 0x0a
     800:	8b 87       	std	Y+11, r24	; 0x0b
	if(msg.data[0]){
     802:	11 23       	and	r17, r17
     804:	11 f0       	breq	.+4      	; 0x80a <can_handle_solenoid_message+0x3a>
		PORTA &= ~(1<<PA2); //activate relay
     806:	12 98       	cbi	0x02, 2	; 2
     808:	01 c0       	rjmp	.+2      	; 0x80c <can_handle_solenoid_message+0x3c>
	}
	else{
		PORTA |= (1<<PA2); //stop relay
     80a:	12 9a       	sbi	0x02, 2	; 2
	}
}
     80c:	2b 96       	adiw	r28, 0x0b	; 11
     80e:	0f b6       	in	r0, 0x3f	; 63
     810:	f8 94       	cli
     812:	de bf       	out	0x3e, r29	; 62
     814:	0f be       	out	0x3f, r0	; 63
     816:	cd bf       	out	0x3d, r28	; 61
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	1f 91       	pop	r17
     81e:	0f 91       	pop	r16
     820:	ff 90       	pop	r15
     822:	ef 90       	pop	r14
     824:	08 95       	ret

00000826 <can_handle_slider_message>:
void can_handle_slider_message(can_message msg, uint16_t max_encoder_value){
     826:	8f 92       	push	r8
     828:	9f 92       	push	r9
     82a:	af 92       	push	r10
     82c:	bf 92       	push	r11
     82e:	cf 92       	push	r12
     830:	df 92       	push	r13
     832:	ef 92       	push	r14
     834:	ff 92       	push	r15
     836:	0f 93       	push	r16
     838:	1f 93       	push	r17
     83a:	cf 93       	push	r28
     83c:	df 93       	push	r29
     83e:	cd b7       	in	r28, 0x3d	; 61
     840:	de b7       	in	r29, 0x3e	; 62
     842:	2b 97       	sbiw	r28, 0x0b	; 11
     844:	0f b6       	in	r0, 0x3f	; 63
     846:	f8 94       	cli
     848:	de bf       	out	0x3e, r29	; 62
     84a:	0f be       	out	0x3f, r0	; 63
     84c:	cd bf       	out	0x3d, r28	; 61
	uint8_t slider_value = msg.data[0];
	
	//Reverse the slider values and convert to encoder values
	float r = (255 - slider_value)*(max_encoder_value/255.0);
     84e:	6f ef       	ldi	r22, 0xFF	; 255
     850:	70 e0       	ldi	r23, 0x00	; 0
     852:	61 1b       	sub	r22, r17
     854:	71 09       	sbc	r23, r1
     856:	88 27       	eor	r24, r24
     858:	77 fd       	sbrc	r23, 7
     85a:	80 95       	com	r24
     85c:	98 2f       	mov	r25, r24
     85e:	8b d5       	rcall	.+2838   	; 0x1376 <__floatsisf>
     860:	4b 01       	movw	r8, r22
     862:	5c 01       	movw	r10, r24
     864:	b6 01       	movw	r22, r12
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	83 d5       	rcall	.+2822   	; 0x1372 <__floatunsisf>
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	4f e7       	ldi	r20, 0x7F	; 127
     872:	53 e4       	ldi	r21, 0x43	; 67
     874:	e5 d4       	rcall	.+2506   	; 0x1240 <__divsf3>
     876:	9b 01       	movw	r18, r22
     878:	ac 01       	movw	r20, r24
     87a:	c5 01       	movw	r24, r10
     87c:	b4 01       	movw	r22, r8
     87e:	07 d6       	rcall	.+3086   	; 0x148e <__mulsf3>
     880:	4b 01       	movw	r8, r22
     882:	5c 01       	movw	r10, r24
	float y = motor_encoder_read();
     884:	61 d2       	rcall	.+1218   	; 0xd48 <motor_encoder_read>
     886:	bc 01       	movw	r22, r24
     888:	88 27       	eor	r24, r24
     88a:	77 fd       	sbrc	r23, 7
     88c:	80 95       	com	r24
     88e:	98 2f       	mov	r25, r24
     890:	72 d5       	rcall	.+2788   	; 0x1376 <__floatsisf>
     892:	9b 01       	movw	r18, r22
     894:	ac 01       	movw	r20, r24
	
	//Convert to speed-values
	float u = pid_generate(r, y, 0.01) / ((max_encoder_value+1)/255);
     896:	1a e0       	ldi	r17, 0x0A	; 10
     898:	e1 2e       	mov	r14, r17
     89a:	17 ed       	ldi	r17, 0xD7	; 215
     89c:	f1 2e       	mov	r15, r17
     89e:	03 e2       	ldi	r16, 0x23	; 35
     8a0:	1c e3       	ldi	r17, 0x3C	; 60
     8a2:	c5 01       	movw	r24, r10
     8a4:	b4 01       	movw	r22, r8
     8a6:	8b dd       	rcall	.-1258   	; 0x3be <pid_generate>
     8a8:	4b 01       	movw	r8, r22
     8aa:	5c 01       	movw	r10, r24
     8ac:	96 01       	movw	r18, r12
     8ae:	2f 5f       	subi	r18, 0xFF	; 255
     8b0:	3f 4f       	sbci	r19, 0xFF	; 255
     8b2:	a1 e8       	ldi	r26, 0x81	; 129
     8b4:	b0 e8       	ldi	r27, 0x80	; 128
     8b6:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <__umulhisi3>
     8ba:	88 0f       	add	r24, r24
     8bc:	89 2f       	mov	r24, r25
     8be:	88 1f       	adc	r24, r24
     8c0:	99 0b       	sbc	r25, r25
     8c2:	91 95       	neg	r25
     8c4:	bc 01       	movw	r22, r24
     8c6:	80 e0       	ldi	r24, 0x00	; 0
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	53 d5       	rcall	.+2726   	; 0x1372 <__floatunsisf>
     8cc:	9b 01       	movw	r18, r22
     8ce:	ac 01       	movw	r20, r24
     8d0:	c5 01       	movw	r24, r10
     8d2:	b4 01       	movw	r22, r8
     8d4:	b5 d4       	rcall	.+2410   	; 0x1240 <__divsf3>
	motor_speed(u);
     8d6:	1c d5       	rcall	.+2616   	; 0x1310 <__fixsfsi>
     8d8:	cb 01       	movw	r24, r22
     8da:	06 d2       	rcall	.+1036   	; 0xce8 <motor_speed>
}
     8dc:	2b 96       	adiw	r28, 0x0b	; 11
     8de:	0f b6       	in	r0, 0x3f	; 63
     8e0:	f8 94       	cli
     8e2:	de bf       	out	0x3e, r29	; 62
     8e4:	0f be       	out	0x3f, r0	; 63
     8e6:	cd bf       	out	0x3d, r28	; 61
     8e8:	df 91       	pop	r29
     8ea:	cf 91       	pop	r28
     8ec:	1f 91       	pop	r17
     8ee:	0f 91       	pop	r16
     8f0:	ff 90       	pop	r15
     8f2:	ef 90       	pop	r14
     8f4:	df 90       	pop	r13
     8f6:	cf 90       	pop	r12
     8f8:	bf 90       	pop	r11
     8fa:	af 90       	pop	r10
     8fc:	9f 90       	pop	r9
     8fe:	8f 90       	pop	r8
     900:	08 95       	ret

00000902 <can_handle_pid_message>:
void can_handle_pid_message(can_message msg){
     902:	3f 92       	push	r3
     904:	4f 92       	push	r4
     906:	5f 92       	push	r5
     908:	6f 92       	push	r6
     90a:	7f 92       	push	r7
     90c:	8f 92       	push	r8
     90e:	9f 92       	push	r9
     910:	af 92       	push	r10
     912:	bf 92       	push	r11
     914:	cf 92       	push	r12
     916:	df 92       	push	r13
     918:	ef 92       	push	r14
     91a:	ff 92       	push	r15
     91c:	0f 93       	push	r16
     91e:	1f 93       	push	r17
     920:	cf 93       	push	r28
     922:	df 93       	push	r29
     924:	cd b7       	in	r28, 0x3d	; 61
     926:	de b7       	in	r29, 0x3e	; 62
     928:	2b 97       	sbiw	r28, 0x0b	; 11
     92a:	0f b6       	in	r0, 0x3f	; 63
     92c:	f8 94       	cli
     92e:	de bf       	out	0x3e, r29	; 62
     930:	0f be       	out	0x3f, r0	; 63
     932:	cd bf       	out	0x3d, r28	; 61
     934:	b2 2e       	mov	r11, r18
     936:	a3 2e       	mov	r10, r19
     938:	94 2e       	mov	r9, r20
     93a:	05 2f       	mov	r16, r21
	printf("%.2f %.2f %.2f", -msg.data[0]*pow(10, -msg.data[1]), -msg.data[2]*pow(10, -msg.data[3]), -msg.data[4]*pow(10, -msg.data[5]));
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	71 95       	neg	r23
     940:	61 95       	neg	r22
     942:	71 09       	sbc	r23, r1
     944:	88 27       	eor	r24, r24
     946:	77 fd       	sbrc	r23, 7
     948:	80 95       	com	r24
     94a:	98 2f       	mov	r25, r24
     94c:	14 d5       	rcall	.+2600   	; 0x1376 <__floatsisf>
     94e:	9b 01       	movw	r18, r22
     950:	ac 01       	movw	r20, r24
     952:	60 e0       	ldi	r22, 0x00	; 0
     954:	70 e0       	ldi	r23, 0x00	; 0
     956:	80 e2       	ldi	r24, 0x20	; 32
     958:	91 e4       	ldi	r25, 0x41	; 65
     95a:	fc d5       	rcall	.+3064   	; 0x1554 <pow>
     95c:	6b 01       	movw	r12, r22
     95e:	7c 01       	movw	r14, r24
     960:	60 2f       	mov	r22, r16
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	71 95       	neg	r23
     966:	61 95       	neg	r22
     968:	71 09       	sbc	r23, r1
     96a:	88 27       	eor	r24, r24
     96c:	77 fd       	sbrc	r23, 7
     96e:	80 95       	com	r24
     970:	98 2f       	mov	r25, r24
     972:	01 d5       	rcall	.+2562   	; 0x1376 <__floatsisf>
     974:	a7 01       	movw	r20, r14
     976:	96 01       	movw	r18, r12
     978:	8a d5       	rcall	.+2836   	; 0x148e <__mulsf3>
     97a:	36 2e       	mov	r3, r22
     97c:	47 2e       	mov	r4, r23
     97e:	58 2e       	mov	r5, r24
     980:	09 2f       	mov	r16, r25
     982:	69 2d       	mov	r22, r9
     984:	70 e0       	ldi	r23, 0x00	; 0
     986:	71 95       	neg	r23
     988:	61 95       	neg	r22
     98a:	71 09       	sbc	r23, r1
     98c:	88 27       	eor	r24, r24
     98e:	77 fd       	sbrc	r23, 7
     990:	80 95       	com	r24
     992:	98 2f       	mov	r25, r24
     994:	f0 d4       	rcall	.+2528   	; 0x1376 <__floatsisf>
     996:	9b 01       	movw	r18, r22
     998:	ac 01       	movw	r20, r24
     99a:	60 e0       	ldi	r22, 0x00	; 0
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	80 e2       	ldi	r24, 0x20	; 32
     9a0:	91 e4       	ldi	r25, 0x41	; 65
     9a2:	d8 d5       	rcall	.+2992   	; 0x1554 <pow>
     9a4:	6b 01       	movw	r12, r22
     9a6:	7c 01       	movw	r14, r24
     9a8:	6a 2d       	mov	r22, r10
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	71 95       	neg	r23
     9ae:	61 95       	neg	r22
     9b0:	71 09       	sbc	r23, r1
     9b2:	88 27       	eor	r24, r24
     9b4:	77 fd       	sbrc	r23, 7
     9b6:	80 95       	com	r24
     9b8:	98 2f       	mov	r25, r24
     9ba:	dd d4       	rcall	.+2490   	; 0x1376 <__floatsisf>
     9bc:	a7 01       	movw	r20, r14
     9be:	96 01       	movw	r18, r12
     9c0:	66 d5       	rcall	.+2764   	; 0x148e <__mulsf3>
     9c2:	66 2e       	mov	r6, r22
     9c4:	77 2e       	mov	r7, r23
     9c6:	88 2e       	mov	r8, r24
     9c8:	99 2e       	mov	r9, r25
     9ca:	6b 2d       	mov	r22, r11
     9cc:	70 e0       	ldi	r23, 0x00	; 0
     9ce:	71 95       	neg	r23
     9d0:	61 95       	neg	r22
     9d2:	71 09       	sbc	r23, r1
     9d4:	88 27       	eor	r24, r24
     9d6:	77 fd       	sbrc	r23, 7
     9d8:	80 95       	com	r24
     9da:	98 2f       	mov	r25, r24
     9dc:	cc d4       	rcall	.+2456   	; 0x1376 <__floatsisf>
     9de:	9b 01       	movw	r18, r22
     9e0:	ac 01       	movw	r20, r24
     9e2:	60 e0       	ldi	r22, 0x00	; 0
     9e4:	70 e0       	ldi	r23, 0x00	; 0
     9e6:	80 e2       	ldi	r24, 0x20	; 32
     9e8:	91 e4       	ldi	r25, 0x41	; 65
     9ea:	b4 d5       	rcall	.+2920   	; 0x1554 <pow>
     9ec:	6b 01       	movw	r12, r22
     9ee:	7c 01       	movw	r14, r24
     9f0:	61 2f       	mov	r22, r17
     9f2:	70 e0       	ldi	r23, 0x00	; 0
     9f4:	71 95       	neg	r23
     9f6:	61 95       	neg	r22
     9f8:	71 09       	sbc	r23, r1
     9fa:	88 27       	eor	r24, r24
     9fc:	77 fd       	sbrc	r23, 7
     9fe:	80 95       	com	r24
     a00:	98 2f       	mov	r25, r24
     a02:	b9 d4       	rcall	.+2418   	; 0x1376 <__floatsisf>
     a04:	a7 01       	movw	r20, r14
     a06:	96 01       	movw	r18, r12
     a08:	42 d5       	rcall	.+2692   	; 0x148e <__mulsf3>
     a0a:	a6 2e       	mov	r10, r22
     a0c:	b7 2e       	mov	r11, r23
     a0e:	c8 2e       	mov	r12, r24
     a10:	d9 2e       	mov	r13, r25
     a12:	0f 93       	push	r16
     a14:	5f 92       	push	r5
     a16:	4f 92       	push	r4
     a18:	3f 92       	push	r3
     a1a:	9f 92       	push	r9
     a1c:	8f 92       	push	r8
     a1e:	7f 92       	push	r7
     a20:	6f 92       	push	r6
     a22:	9f 93       	push	r25
     a24:	8f 93       	push	r24
     a26:	7f 93       	push	r23
     a28:	6f 93       	push	r22
     a2a:	88 e1       	ldi	r24, 0x18	; 24
     a2c:	92 e0       	ldi	r25, 0x02	; 2
     a2e:	9f 93       	push	r25
     a30:	8f 93       	push	r24
     a32:	0e 94 15 11 	call	0x222a	; 0x222a <printf>
	pid_init(-msg.data[0]*pow(10, -msg.data[1]), -msg.data[2]*pow(10, -msg.data[3]), -msg.data[4]*pow(10, -msg.data[5]));
     a36:	80 2f       	mov	r24, r16
     a38:	e3 2c       	mov	r14, r3
     a3a:	f4 2c       	mov	r15, r4
     a3c:	05 2d       	mov	r16, r5
     a3e:	18 2f       	mov	r17, r24
     a40:	26 2d       	mov	r18, r6
     a42:	37 2d       	mov	r19, r7
     a44:	48 2d       	mov	r20, r8
     a46:	59 2d       	mov	r21, r9
     a48:	6a 2d       	mov	r22, r10
     a4a:	7b 2d       	mov	r23, r11
     a4c:	8c 2d       	mov	r24, r12
     a4e:	9d 2d       	mov	r25, r13
     a50:	7d dc       	rcall	.-1798   	; 0x34c <pid_init>
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	f8 94       	cli
     a56:	de bf       	out	0x3e, r29	; 62
     a58:	0f be       	out	0x3f, r0	; 63
     a5a:	cd bf       	out	0x3d, r28	; 61
}
     a5c:	2b 96       	adiw	r28, 0x0b	; 11
     a5e:	0f b6       	in	r0, 0x3f	; 63
     a60:	f8 94       	cli
     a62:	de bf       	out	0x3e, r29	; 62
     a64:	0f be       	out	0x3f, r0	; 63
     a66:	cd bf       	out	0x3d, r28	; 61
     a68:	df 91       	pop	r29
     a6a:	cf 91       	pop	r28
     a6c:	1f 91       	pop	r17
     a6e:	0f 91       	pop	r16
     a70:	ff 90       	pop	r15
     a72:	ef 90       	pop	r14
     a74:	df 90       	pop	r13
     a76:	cf 90       	pop	r12
     a78:	bf 90       	pop	r11
     a7a:	af 90       	pop	r10
     a7c:	9f 90       	pop	r9
     a7e:	8f 90       	pop	r8
     a80:	7f 90       	pop	r7
     a82:	6f 90       	pop	r6
     a84:	5f 90       	pop	r5
     a86:	4f 90       	pop	r4
     a88:	3f 90       	pop	r3
     a8a:	08 95       	ret

00000a8c <can_handle_message>:
void can_handle_message(can_message msg, uint16_t max_encoder_value){
     a8c:	cf 92       	push	r12
     a8e:	df 92       	push	r13
     a90:	ef 92       	push	r14
     a92:	ff 92       	push	r15
     a94:	0f 93       	push	r16
     a96:	1f 93       	push	r17
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
     a9c:	cd b7       	in	r28, 0x3d	; 61
     a9e:	de b7       	in	r29, 0x3e	; 62
     aa0:	2b 97       	sbiw	r28, 0x0b	; 11
     aa2:	0f b6       	in	r0, 0x3f	; 63
     aa4:	f8 94       	cli
     aa6:	de bf       	out	0x3e, r29	; 62
     aa8:	0f be       	out	0x3f, r0	; 63
     aaa:	cd bf       	out	0x3d, r28	; 61
     aac:	e9 82       	std	Y+1, r14	; 0x01
     aae:	fa 82       	std	Y+2, r15	; 0x02
     ab0:	0b 83       	std	Y+3, r16	; 0x03
     ab2:	1c 83       	std	Y+4, r17	; 0x04
     ab4:	2d 83       	std	Y+5, r18	; 0x05
     ab6:	3e 83       	std	Y+6, r19	; 0x06
     ab8:	4f 83       	std	Y+7, r20	; 0x07
     aba:	58 87       	std	Y+8, r21	; 0x08
     abc:	69 87       	std	Y+9, r22	; 0x09
     abe:	7a 87       	std	Y+10, r23	; 0x0a
     ac0:	8b 87       	std	Y+11, r24	; 0x0b
	switch(msg.id){
     ac2:	89 81       	ldd	r24, Y+1	; 0x01
     ac4:	9a 81       	ldd	r25, Y+2	; 0x02
     ac6:	87 37       	cpi	r24, 0x77	; 119
     ac8:	91 05       	cpc	r25, r1
     aca:	a9 f0       	breq	.+42     	; 0xaf6 <can_handle_message+0x6a>
     acc:	20 f4       	brcc	.+8      	; 0xad6 <can_handle_message+0x4a>
     ace:	85 35       	cpi	r24, 0x55	; 85
     ad0:	91 05       	cpc	r25, r1
     ad2:	41 f0       	breq	.+16     	; 0xae4 <can_handle_message+0x58>
     ad4:	53 c0       	rjmp	.+166    	; 0xb7c <can_handle_message+0xf0>
     ad6:	88 38       	cpi	r24, 0x88	; 136
     ad8:	91 05       	cpc	r25, r1
     ada:	09 f1       	breq	.+66     	; 0xb1e <can_handle_message+0x92>
     adc:	89 39       	cpi	r24, 0x99	; 153
     ade:	91 05       	cpc	r25, r1
     ae0:	91 f1       	breq	.+100    	; 0xb46 <can_handle_message+0xba>
     ae2:	4c c0       	rjmp	.+152    	; 0xb7c <can_handle_message+0xf0>
		case MCP_JOYSTICK_MESSAGE:
			printf("Joy\n");
     ae4:	87 e2       	ldi	r24, 0x27	; 39
     ae6:	92 e0       	ldi	r25, 0x02	; 2
     ae8:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	}
	printf("\n");
}

void can_handle_joystick_message(can_message msg){
		pwm_set_servo(msg.data[0]-2);
     aec:	8c 81       	ldd	r24, Y+4	; 0x04
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	02 97       	sbiw	r24, 0x02	; 2
     af2:	62 d1       	rcall	.+708    	; 0xdb8 <pwm_set_servo>
     af4:	43 c0       	rjmp	.+134    	; 0xb7c <can_handle_message+0xf0>
			printf("Joy\n");
			can_handle_joystick_message(msg);
			break;
		
		case MCP_SOLENOID_MESSAGE:
			printf("Sol\n");
     af6:	8b e2       	ldi	r24, 0x2B	; 43
     af8:	92 e0       	ldi	r25, 0x02	; 2
     afa:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
			can_handle_solenoid_message(msg);
     afe:	87 e7       	ldi	r24, 0x77	; 119
     b00:	e8 2e       	mov	r14, r24
     b02:	89 83       	std	Y+1, r24	; 0x01
     b04:	1a 82       	std	Y+2, r1	; 0x02
     b06:	f1 2c       	mov	r15, r1
     b08:	0b 81       	ldd	r16, Y+3	; 0x03
     b0a:	1c 81       	ldd	r17, Y+4	; 0x04
     b0c:	2d 81       	ldd	r18, Y+5	; 0x05
     b0e:	3e 81       	ldd	r19, Y+6	; 0x06
     b10:	4f 81       	ldd	r20, Y+7	; 0x07
     b12:	58 85       	ldd	r21, Y+8	; 0x08
     b14:	69 85       	ldd	r22, Y+9	; 0x09
     b16:	7a 85       	ldd	r23, Y+10	; 0x0a
     b18:	8b 85       	ldd	r24, Y+11	; 0x0b
     b1a:	5a de       	rcall	.-844    	; 0x7d0 <can_handle_solenoid_message>
			break;
     b1c:	2f c0       	rjmp	.+94     	; 0xb7c <can_handle_message+0xf0>
		
		case MCP_SLIDER_MESSAGE:
			printf("Slide\n");
     b1e:	8f e2       	ldi	r24, 0x2F	; 47
     b20:	92 e0       	ldi	r25, 0x02	; 2
     b22:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
			can_handle_slider_message(msg, max_encoder_value);
     b26:	88 e8       	ldi	r24, 0x88	; 136
     b28:	e8 2e       	mov	r14, r24
     b2a:	89 83       	std	Y+1, r24	; 0x01
     b2c:	1a 82       	std	Y+2, r1	; 0x02
     b2e:	f1 2c       	mov	r15, r1
     b30:	0b 81       	ldd	r16, Y+3	; 0x03
     b32:	1c 81       	ldd	r17, Y+4	; 0x04
     b34:	2d 81       	ldd	r18, Y+5	; 0x05
     b36:	3e 81       	ldd	r19, Y+6	; 0x06
     b38:	4f 81       	ldd	r20, Y+7	; 0x07
     b3a:	58 85       	ldd	r21, Y+8	; 0x08
     b3c:	69 85       	ldd	r22, Y+9	; 0x09
     b3e:	7a 85       	ldd	r23, Y+10	; 0x0a
     b40:	8b 85       	ldd	r24, Y+11	; 0x0b
     b42:	71 de       	rcall	.-798    	; 0x826 <can_handle_slider_message>
			break;
     b44:	1b c0       	rjmp	.+54     	; 0xb7c <can_handle_message+0xf0>
			
		case MCP_PID_MESSAGE:
			printf("Pid\n");
     b46:	85 e3       	ldi	r24, 0x35	; 53
     b48:	92 e0       	ldi	r25, 0x02	; 2
     b4a:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
			printf("Message");
     b4e:	89 e3       	ldi	r24, 0x39	; 57
     b50:	92 e0       	ldi	r25, 0x02	; 2
     b52:	9f 93       	push	r25
     b54:	8f 93       	push	r24
     b56:	0e 94 15 11 	call	0x222a	; 0x222a <printf>
			can_handle_pid_message(msg);
     b5a:	89 e9       	ldi	r24, 0x99	; 153
     b5c:	e8 2e       	mov	r14, r24
     b5e:	89 83       	std	Y+1, r24	; 0x01
     b60:	1a 82       	std	Y+2, r1	; 0x02
     b62:	f1 2c       	mov	r15, r1
     b64:	0b 81       	ldd	r16, Y+3	; 0x03
     b66:	1c 81       	ldd	r17, Y+4	; 0x04
     b68:	2d 81       	ldd	r18, Y+5	; 0x05
     b6a:	3e 81       	ldd	r19, Y+6	; 0x06
     b6c:	4f 81       	ldd	r20, Y+7	; 0x07
     b6e:	58 85       	ldd	r21, Y+8	; 0x08
     b70:	69 85       	ldd	r22, Y+9	; 0x09
     b72:	7a 85       	ldd	r23, Y+10	; 0x0a
     b74:	8b 85       	ldd	r24, Y+11	; 0x0b
     b76:	c5 de       	rcall	.-630    	; 0x902 <can_handle_pid_message>
			break;
     b78:	0f 90       	pop	r0
     b7a:	0f 90       	pop	r0
	}
}
     b7c:	2b 96       	adiw	r28, 0x0b	; 11
     b7e:	0f b6       	in	r0, 0x3f	; 63
     b80:	f8 94       	cli
     b82:	de bf       	out	0x3e, r29	; 62
     b84:	0f be       	out	0x3f, r0	; 63
     b86:	cd bf       	out	0x3d, r28	; 61
     b88:	df 91       	pop	r29
     b8a:	cf 91       	pop	r28
     b8c:	1f 91       	pop	r17
     b8e:	0f 91       	pop	r16
     b90:	ff 90       	pop	r15
     b92:	ef 90       	pop	r14
     b94:	df 90       	pop	r13
     b96:	cf 90       	pop	r12
     b98:	08 95       	ret

00000b9a <can_transmit_ir_value>:

void can_transmit_ir_value(uint8_t ir_value){
     b9a:	cf 92       	push	r12
     b9c:	ef 92       	push	r14
     b9e:	ff 92       	push	r15
     ba0:	0f 93       	push	r16
     ba2:	1f 93       	push	r17
     ba4:	cf 93       	push	r28
     ba6:	df 93       	push	r29
     ba8:	cd b7       	in	r28, 0x3d	; 61
     baa:	de b7       	in	r29, 0x3e	; 62
     bac:	2c 97       	sbiw	r28, 0x0c	; 12
     bae:	0f b6       	in	r0, 0x3f	; 63
     bb0:	f8 94       	cli
     bb2:	de bf       	out	0x3e, r29	; 62
     bb4:	0f be       	out	0x3f, r0	; 63
     bb6:	cd bf       	out	0x3d, r28	; 61
     bb8:	8c 87       	std	Y+12, r24	; 0x0c
	can_message msg;
	msg = new_can_message(MCP_IR_MESSAGE, 1, &ir_value);
     bba:	9e 01       	movw	r18, r28
     bbc:	24 5f       	subi	r18, 0xF4	; 244
     bbe:	3f 4f       	sbci	r19, 0xFF	; 255
     bc0:	41 e0       	ldi	r20, 0x01	; 1
     bc2:	66 e6       	ldi	r22, 0x66	; 102
     bc4:	70 e0       	ldi	r23, 0x00	; 0
     bc6:	ce 01       	movw	r24, r28
     bc8:	01 96       	adiw	r24, 0x01	; 1
     bca:	5d dd       	rcall	.-1350   	; 0x686 <new_can_message>
	can_write(msg, MCP_TXB0CTRL);
     bcc:	0f 2e       	mov	r0, r31
     bce:	f0 e3       	ldi	r31, 0x30	; 48
     bd0:	cf 2e       	mov	r12, r31
     bd2:	f0 2d       	mov	r31, r0
     bd4:	e9 80       	ldd	r14, Y+1	; 0x01
     bd6:	fa 80       	ldd	r15, Y+2	; 0x02
     bd8:	0b 81       	ldd	r16, Y+3	; 0x03
     bda:	1c 81       	ldd	r17, Y+4	; 0x04
     bdc:	2d 81       	ldd	r18, Y+5	; 0x05
     bde:	3e 81       	ldd	r19, Y+6	; 0x06
     be0:	4f 81       	ldd	r20, Y+7	; 0x07
     be2:	58 85       	ldd	r21, Y+8	; 0x08
     be4:	69 85       	ldd	r22, Y+9	; 0x09
     be6:	7a 85       	ldd	r23, Y+10	; 0x0a
     be8:	8b 85       	ldd	r24, Y+11	; 0x0b
     bea:	79 dd       	rcall	.-1294   	; 0x6de <can_write>
     bec:	2c 96       	adiw	r28, 0x0c	; 12
     bee:	0f b6       	in	r0, 0x3f	; 63
     bf0:	f8 94       	cli
     bf2:	de bf       	out	0x3e, r29	; 62
     bf4:	0f be       	out	0x3f, r0	; 63
     bf6:	cd bf       	out	0x3d, r28	; 61
     bf8:	df 91       	pop	r29
     bfa:	cf 91       	pop	r28
     bfc:	1f 91       	pop	r17
     bfe:	0f 91       	pop	r16
     c00:	ff 90       	pop	r15
     c02:	ef 90       	pop	r14
     c04:	cf 90       	pop	r12
     c06:	08 95       	ret

00000c08 <dac_initialize>:
#include <stdint.h>

#define MAX520_TWI_ADDR_BASE 0b01010000
static uint8_t twi_address = 0x00;

void dac_initialize(uint8_t MAX520_addr){
     c08:	cf 93       	push	r28
     c0a:	c8 2f       	mov	r28, r24
	TWI_Master_Initialise();
     c0c:	05 d2       	rcall	.+1034   	; 0x1018 <TWI_Master_Initialise>
	sei();
     c0e:	78 94       	sei
	
	twi_address = MAX520_addr;
     c10:	c0 93 d2 02 	sts	0x02D2, r28
}	
     c14:	cf 91       	pop	r28
     c16:	08 95       	ret

00000c18 <dac_write>:


void dac_write(uint8_t channel, uint8_t val){
     c18:	cf 93       	push	r28
     c1a:	df 93       	push	r29
     c1c:	00 d0       	rcall	.+0      	; 0xc1e <dac_write+0x6>
     c1e:	cd b7       	in	r28, 0x3d	; 61
     c20:	de b7       	in	r29, 0x3e	; 62
	uint8_t message[3] = {	MAX520_TWI_ADDR_BASE | ((twi_address & 0x07) << 1), //Set address
     c22:	90 91 d2 02 	lds	r25, 0x02D2
     c26:	97 70       	andi	r25, 0x07	; 7
     c28:	99 0f       	add	r25, r25
     c2a:	90 65       	ori	r25, 0x50	; 80
     c2c:	99 83       	std	Y+1, r25	; 0x01
     c2e:	87 70       	andi	r24, 0x07	; 7
     c30:	8a 83       	std	Y+2, r24	; 0x02
     c32:	6b 83       	std	Y+3, r22	; 0x03
							channel & 0x07, //Channel no higher than 0x07
							val		};
							
	TWI_Start_Transceiver_With_Data(message, 3);
     c34:	63 e0       	ldi	r22, 0x03	; 3
     c36:	ce 01       	movw	r24, r28
     c38:	01 96       	adiw	r24, 0x01	; 1
     c3a:	f8 d1       	rcall	.+1008   	; 0x102c <TWI_Start_Transceiver_With_Data>
     c3c:	0f 90       	pop	r0
     c3e:	0f 90       	pop	r0
     c40:	0f 90       	pop	r0
     c42:	df 91       	pop	r29
     c44:	cf 91       	pop	r28
     c46:	08 95       	ret

00000c48 <mcp_read>:
	SPI_transmit(MCP_READ_STATUS);
	uint8_t status = SPI_transmit(0x00);
	PORTB |= (1<< MCP_CS);
	
	return status;
}
     c48:	cf 93       	push	r28
     c4a:	c8 2f       	mov	r28, r24
     c4c:	28 98       	cbi	0x05, 0	; 5
     c4e:	83 e0       	ldi	r24, 0x03	; 3
     c50:	4d d1       	rcall	.+666    	; 0xeec <SPI_transmit>
     c52:	8c 2f       	mov	r24, r28
     c54:	4b d1       	rcall	.+662    	; 0xeec <SPI_transmit>
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	49 d1       	rcall	.+658    	; 0xeec <SPI_transmit>
     c5a:	28 9a       	sbi	0x05, 0	; 5
     c5c:	cf 91       	pop	r28
     c5e:	08 95       	ret

00000c60 <mcp_write>:
     c60:	cf 93       	push	r28
     c62:	df 93       	push	r29
     c64:	d8 2f       	mov	r29, r24
     c66:	c6 2f       	mov	r28, r22
     c68:	28 98       	cbi	0x05, 0	; 5
     c6a:	82 e0       	ldi	r24, 0x02	; 2
     c6c:	3f d1       	rcall	.+638    	; 0xeec <SPI_transmit>
     c6e:	8d 2f       	mov	r24, r29
     c70:	3d d1       	rcall	.+634    	; 0xeec <SPI_transmit>
     c72:	8c 2f       	mov	r24, r28
     c74:	3b d1       	rcall	.+630    	; 0xeec <SPI_transmit>
     c76:	28 9a       	sbi	0x05, 0	; 5
     c78:	df 91       	pop	r29
     c7a:	cf 91       	pop	r28
     c7c:	08 95       	ret

00000c7e <mcp_reset>:
     c7e:	28 98       	cbi	0x05, 0	; 5
     c80:	80 ec       	ldi	r24, 0xC0	; 192
     c82:	34 d1       	rcall	.+616    	; 0xeec <SPI_transmit>
     c84:	28 9a       	sbi	0x05, 0	; 5
     c86:	08 95       	ret

00000c88 <mcp_bitModify>:
     c88:	1f 93       	push	r17
     c8a:	cf 93       	push	r28
     c8c:	df 93       	push	r29
     c8e:	18 2f       	mov	r17, r24
     c90:	d6 2f       	mov	r29, r22
     c92:	c4 2f       	mov	r28, r20
     c94:	28 98       	cbi	0x05, 0	; 5
     c96:	85 e0       	ldi	r24, 0x05	; 5
     c98:	29 d1       	rcall	.+594    	; 0xeec <SPI_transmit>
     c9a:	81 2f       	mov	r24, r17
     c9c:	27 d1       	rcall	.+590    	; 0xeec <SPI_transmit>
     c9e:	8d 2f       	mov	r24, r29
     ca0:	25 d1       	rcall	.+586    	; 0xeec <SPI_transmit>
     ca2:	8c 2f       	mov	r24, r28
     ca4:	23 d1       	rcall	.+582    	; 0xeec <SPI_transmit>
     ca6:	28 9a       	sbi	0x05, 0	; 5
     ca8:	df 91       	pop	r29
     caa:	cf 91       	pop	r28
     cac:	1f 91       	pop	r17
     cae:	08 95       	ret

00000cb0 <mcp_requestToSend>:
     cb0:	28 98       	cbi	0x05, 0	; 5
     cb2:	1c d1       	rcall	.+568    	; 0xeec <SPI_transmit>
     cb4:	28 9a       	sbi	0x05, 0	; 5
     cb6:	08 95       	ret

00000cb8 <mcp_init>:

void mcp_init(void){
	SPI_masterInit();
     cb8:	13 d1       	rcall	.+550    	; 0xee0 <SPI_masterInit>
	mcp_reset();
     cba:	e1 cf       	rjmp	.-62     	; 0xc7e <mcp_reset>
     cbc:	08 95       	ret

00000cbe <motor_encoder_reset>:
     cbe:	8e 98       	cbi	0x11, 6	; 17
     cc0:	8a e6       	ldi	r24, 0x6A	; 106
     cc2:	8a 95       	dec	r24
     cc4:	f1 f7       	brne	.-4      	; 0xcc2 <motor_encoder_reset+0x4>
     cc6:	00 c0       	rjmp	.+0      	; 0xcc8 <motor_encoder_reset+0xa>
     cc8:	8e 9a       	sbi	0x11, 6	; 17
     cca:	08 95       	ret

00000ccc <motor_init>:
     ccc:	80 b3       	in	r24, 0x10	; 16
     cce:	88 6f       	ori	r24, 0xF8	; 248
     cd0:	80 bb       	out	0x10, r24	; 16
     cd2:	10 92 07 01 	sts	0x0107, r1
     cd6:	8c 9a       	sbi	0x11, 4	; 17
     cd8:	f2 cf       	rjmp	.-28     	; 0xcbe <motor_encoder_reset>
     cda:	08 95       	ret

00000cdc <motor_direction>:
     cdc:	89 2b       	or	r24, r25
     cde:	11 f0       	breq	.+4      	; 0xce4 <motor_direction+0x8>
     ce0:	8b 98       	cbi	0x11, 3	; 17
     ce2:	08 95       	ret
     ce4:	8b 9a       	sbi	0x11, 3	; 17
     ce6:	08 95       	ret

00000ce8 <motor_speed>:
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	ec 01       	movw	r28, r24
     cee:	18 16       	cp	r1, r24
     cf0:	19 06       	cpc	r1, r25
     cf2:	24 f4       	brge	.+8      	; 0xcfc <motor_speed+0x14>
     cf4:	80 e0       	ldi	r24, 0x00	; 0
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	f1 df       	rcall	.-30     	; 0xcdc <motor_direction>
     cfa:	08 c0       	rjmp	.+16     	; 0xd0c <motor_speed+0x24>
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	ed df       	rcall	.-38     	; 0xcdc <motor_direction>
     d02:	dd 23       	and	r29, r29
     d04:	1c f4       	brge	.+6      	; 0xd0c <motor_speed+0x24>
     d06:	d1 95       	neg	r29
     d08:	c1 95       	neg	r28
     d0a:	d1 09       	sbc	r29, r1
     d0c:	be 01       	movw	r22, r28
     d0e:	cf 3f       	cpi	r28, 0xFF	; 255
     d10:	d1 05       	cpc	r29, r1
     d12:	19 f0       	breq	.+6      	; 0xd1a <motor_speed+0x32>
     d14:	14 f0       	brlt	.+4      	; 0xd1a <motor_speed+0x32>
     d16:	6f ef       	ldi	r22, 0xFF	; 255
     d18:	70 e0       	ldi	r23, 0x00	; 0
     d1a:	80 e0       	ldi	r24, 0x00	; 0
     d1c:	7d df       	rcall	.-262    	; 0xc18 <dac_write>
     d1e:	df 91       	pop	r29
     d20:	cf 91       	pop	r28
     d22:	08 95       	ret

00000d24 <reverse>:
	_delay_ms(500);

}

uint8_t reverse(uint8_t x){
	x = (((x & 0xaa) >> 1) | ((x & 0x55) << 1));
     d24:	28 2f       	mov	r18, r24
     d26:	25 75       	andi	r18, 0x55	; 85
     d28:	22 0f       	add	r18, r18
     d2a:	98 2f       	mov	r25, r24
     d2c:	9a 7a       	andi	r25, 0xAA	; 170
     d2e:	96 95       	lsr	r25
     d30:	92 2b       	or	r25, r18
	x = (((x & 0xcc) >> 2) | ((x & 0x33) << 2));
     d32:	29 2f       	mov	r18, r25
     d34:	23 73       	andi	r18, 0x33	; 51
     d36:	22 0f       	add	r18, r18
     d38:	22 0f       	add	r18, r18
     d3a:	89 2f       	mov	r24, r25
     d3c:	8c 7c       	andi	r24, 0xCC	; 204
     d3e:	86 95       	lsr	r24
     d40:	86 95       	lsr	r24
     d42:	82 2b       	or	r24, r18
	x = (((x & 0xf0) >> 4) | ((x & 0x0f) << 4));
	return x;
}
     d44:	82 95       	swap	r24
     d46:	08 95       	ret

00000d48 <motor_encoder_read>:
	PORTF |= (1 << MOTOR_EN);
	motor_encoder_reset();
	
}

int16_t motor_encoder_read(void){
     d48:	cf 93       	push	r28
     d4a:	df 93       	push	r29
	uint16_t data;
	
	//Enable output and send high byte on PORT K
	PORTF &=	~((1 << MOTOR_OE) |
     d4c:	81 b3       	in	r24, 0x11	; 17
     d4e:	8f 75       	andi	r24, 0x5F	; 95
     d50:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d52:	2a e6       	ldi	r18, 0x6A	; 106
     d54:	2a 95       	dec	r18
     d56:	f1 f7       	brne	.-4      	; 0xd54 <motor_encoder_read+0xc>
     d58:	00 c0       	rjmp	.+0      	; 0xd5a <motor_encoder_read+0x12>
			(1 << MOTOR_SEL));
	_delay_us(20);
	data = (reverse(PINK) << 8);
     d5a:	80 91 06 01 	lds	r24, 0x0106
     d5e:	e2 df       	rcall	.-60     	; 0xd24 <reverse>
     d60:	c8 2f       	mov	r28, r24
     d62:	d0 e0       	ldi	r29, 0x00	; 0
     d64:	dc 2f       	mov	r29, r28
     d66:	cc 27       	eor	r28, r28
	
	//Send low byte on PORT K
	PORTF |= (1 << MOTOR_SEL);
     d68:	8d 9a       	sbi	0x11, 5	; 17
     d6a:	3a e6       	ldi	r19, 0x6A	; 106
     d6c:	3a 95       	dec	r19
     d6e:	f1 f7       	brne	.-4      	; 0xd6c <motor_encoder_read+0x24>
     d70:	00 c0       	rjmp	.+0      	; 0xd72 <motor_encoder_read+0x2a>
	_delay_us(20);
	data += reverse(PINK);
     d72:	80 91 06 01 	lds	r24, 0x0106
     d76:	d6 df       	rcall	.-84     	; 0xd24 <reverse>
	
	//Disable output
	PORTF |= (1 << MOTOR_OE);
     d78:	8f 9a       	sbi	0x11, 7	; 17
	
	return data;
}
     d7a:	9e 01       	movw	r18, r28
     d7c:	28 0f       	add	r18, r24
     d7e:	31 1d       	adc	r19, r1
     d80:	c9 01       	movw	r24, r18
     d82:	df 91       	pop	r29
     d84:	cf 91       	pop	r28
     d86:	08 95       	ret

00000d88 <pwm_init>:
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     d88:	6b 9a       	sbi	0x0d, 3	; 13
     d8a:	e0 e9       	ldi	r30, 0x90	; 144
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	80 81       	ld	r24, Z
     d90:	8e 7b       	andi	r24, 0xBE	; 190
     d92:	80 83       	st	Z, r24
     d94:	80 81       	ld	r24, Z
     d96:	82 68       	ori	r24, 0x82	; 130
     d98:	80 83       	st	Z, r24
     d9a:	e1 e9       	ldi	r30, 0x91	; 145
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	8d 61       	ori	r24, 0x1D	; 29
     da2:	80 83       	st	Z, r24
     da4:	80 81       	ld	r24, Z
     da6:	8d 7f       	andi	r24, 0xFD	; 253
     da8:	80 83       	st	Z, r24
     daa:	88 e3       	ldi	r24, 0x38	; 56
     dac:	91 e0       	ldi	r25, 0x01	; 1
     dae:	90 93 97 00 	sts	0x0097, r25
     db2:	80 93 96 00 	sts	0x0096, r24
     db6:	08 95       	ret

00000db8 <pwm_set_servo>:
}

void pwm_set_servo(unsigned int val){
	val = (val*19)/255 + servo_min;
     db8:	43 e1       	ldi	r20, 0x13	; 19
     dba:	48 9f       	mul	r20, r24
     dbc:	90 01       	movw	r18, r0
     dbe:	49 9f       	mul	r20, r25
     dc0:	30 0d       	add	r19, r0
     dc2:	11 24       	eor	r1, r1
     dc4:	a1 e8       	ldi	r26, 0x81	; 129
     dc6:	b0 e8       	ldi	r27, 0x80	; 128
     dc8:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <__umulhisi3>
     dcc:	88 0f       	add	r24, r24
     dce:	89 2f       	mov	r24, r25
     dd0:	88 1f       	adc	r24, r24
     dd2:	99 0b       	sbc	r25, r25
     dd4:	91 95       	neg	r25
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
     dd6:	9c 01       	movw	r18, r24
     dd8:	2b 50       	subi	r18, 0x0B	; 11
     dda:	31 09       	sbc	r19, r1
     ddc:	23 30       	cpi	r18, 0x03	; 3
     dde:	31 05       	cpc	r19, r1
     de0:	38 f4       	brcc	.+14     	; 0xdf0 <pwm_set_servo+0x38>
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     de2:	89 e1       	ldi	r24, 0x19	; 25
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	90 93 99 00 	sts	0x0099, r25
     dea:	80 93 98 00 	sts	0x0098, r24
     dee:	08 95       	ret
	val = (val*19)/255 + servo_min;
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
		pwm_set_value(servo_mid);
	}
	
	else if((val >= servo_min) && (val <= servo_max)){
     df0:	89 31       	cpi	r24, 0x19	; 25
     df2:	91 05       	cpc	r25, r1
     df4:	30 f4       	brcc	.+12     	; 0xe02 <pwm_set_servo+0x4a>
void pwm_set_value(unsigned int val){
	OCR3A = val;
}

void pwm_set_servo(unsigned int val){
	val = (val*19)/255 + servo_min;
     df6:	0d 96       	adiw	r24, 0x0d	; 13
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     df8:	90 93 99 00 	sts	0x0099, r25
     dfc:	80 93 98 00 	sts	0x0098, r24
     e00:	08 95       	ret
     e02:	89 e1       	ldi	r24, 0x19	; 25
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	90 93 99 00 	sts	0x0099, r25
     e0a:	80 93 98 00 	sts	0x0098, r24
     e0e:	08 95       	ret

00000e10 <ir_init>:
#include "ir.h"
#include "../can/can.h"
#include "../adc/adc.h"
ir_state ir;

void ir_init(void){
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	00 d0       	rcall	.+0      	; 0xe16 <ir_init+0x6>
     e16:	1f 92       	push	r1
     e18:	1f 92       	push	r1
     e1a:	cd b7       	in	r28, 0x3d	; 61
     e1c:	de b7       	in	r29, 0x3e	; 62
	ir = new_ir_state(0, 0, 0, 0);
     e1e:	19 82       	std	Y+1, r1	; 0x01
     e20:	1b 82       	std	Y+3, r1	; 0x03
     e22:	1a 82       	std	Y+2, r1	; 0x02
     e24:	1c 82       	std	Y+4, r1	; 0x04
     e26:	85 e0       	ldi	r24, 0x05	; 5
     e28:	fe 01       	movw	r30, r28
     e2a:	31 96       	adiw	r30, 0x01	; 1
     e2c:	a2 ef       	ldi	r26, 0xF2	; 242
     e2e:	b2 e0       	ldi	r27, 0x02	; 2
     e30:	01 90       	ld	r0, Z+
     e32:	0d 92       	st	X+, r0
     e34:	8a 95       	dec	r24
     e36:	e1 f7       	brne	.-8      	; 0xe30 <ir_init+0x20>
}
     e38:	0f 90       	pop	r0
     e3a:	0f 90       	pop	r0
     e3c:	0f 90       	pop	r0
     e3e:	0f 90       	pop	r0
     e40:	0f 90       	pop	r0
     e42:	df 91       	pop	r29
     e44:	cf 91       	pop	r28
     e46:	08 95       	ret

00000e48 <ir_beam_blocked>:

uint8_t ir_beam_blocked(uint8_t ir_value){
     e48:	cf 93       	push	r28
     e4a:	df 93       	push	r29
	//Used to determine if the beam was already blocked
	ir.sum += ir_value;
     e4c:	e3 ef       	ldi	r30, 0xF3	; 243
     e4e:	f2 e0       	ldi	r31, 0x02	; 2
     e50:	20 81       	ld	r18, Z
     e52:	31 81       	ldd	r19, Z+1	; 0x01
     e54:	28 0f       	add	r18, r24
     e56:	31 1d       	adc	r19, r1
     e58:	31 83       	std	Z+1, r19	; 0x01
     e5a:	20 83       	st	Z, r18
	(ir.samples)++;
     e5c:	e2 ef       	ldi	r30, 0xF2	; 242
     e5e:	f2 e0       	ldi	r31, 0x02	; 2
     e60:	80 81       	ld	r24, Z
     e62:	8f 5f       	subi	r24, 0xFF	; 255
     e64:	80 83       	st	Z, r24
	
	//Check state every 20 measures by calculating mean
	if(ir.samples == 20){
     e66:	84 31       	cpi	r24, 0x14	; 20
     e68:	e1 f4       	brne	.+56     	; 0xea2 <ir_beam_blocked+0x5a>
		ir.sum = ir.sum/ir.samples;
     e6a:	ad ec       	ldi	r26, 0xCD	; 205
     e6c:	bc ec       	ldi	r27, 0xCC	; 204
     e6e:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <__umulhisi3>
     e72:	92 95       	swap	r25
     e74:	82 95       	swap	r24
     e76:	8f 70       	andi	r24, 0x0F	; 15
     e78:	89 27       	eor	r24, r25
     e7a:	9f 70       	andi	r25, 0x0F	; 15
     e7c:	89 27       	eor	r24, r25
     e7e:	90 93 f4 02 	sts	0x02F4, r25
     e82:	80 93 f3 02 	sts	0x02F3, r24
		ir.samples = 1;
     e86:	21 e0       	ldi	r18, 0x01	; 1
     e88:	20 93 f2 02 	sts	0x02F2, r18
		
		//IR beam blocked for more than 20 samples
		if(ir.sum < 100){
     e8c:	84 36       	cpi	r24, 0x64	; 100
     e8e:	91 05       	cpc	r25, r1
     e90:	20 f4       	brcc	.+8      	; 0xe9a <ir_beam_blocked+0x52>
			ir.new_state = 1;
     e92:	81 e0       	ldi	r24, 0x01	; 1
     e94:	80 93 f6 02 	sts	0x02F6, r24
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <ir_beam_blocked+0x5a>
		}
		
		else{
			ir.beam_blocked = 0;
     e9a:	10 92 f5 02 	sts	0x02F5, r1
			ir.new_state = 0;
     e9e:	10 92 f6 02 	sts	0x02F6, r1
		}
	}

	//Blocked now, but not blocked the last 20 samples
	if(!ir.beam_blocked && ir.new_state){
     ea2:	80 91 f5 02 	lds	r24, 0x02F5
     ea6:	81 11       	cpse	r24, r1
     ea8:	14 c0       	rjmp	.+40     	; 0xed2 <ir_beam_blocked+0x8a>
     eaa:	80 91 f6 02 	lds	r24, 0x02F6
     eae:	88 23       	and	r24, r24
     eb0:	81 f0       	breq	.+32     	; 0xed2 <ir_beam_blocked+0x8a>
		ir.beam_blocked = 1;
     eb2:	c5 ef       	ldi	r28, 0xF5	; 245
     eb4:	d2 e0       	ldi	r29, 0x02	; 2
     eb6:	81 e0       	ldi	r24, 0x01	; 1
     eb8:	88 83       	st	Y, r24
		ir.new_state = 1;
     eba:	80 93 f6 02 	sts	0x02F6, r24
		printf("Game lost.");
     ebe:	81 e4       	ldi	r24, 0x41	; 65
     ec0:	92 e0       	ldi	r25, 0x02	; 2
     ec2:	9f 93       	push	r25
     ec4:	8f 93       	push	r24
     ec6:	0e 94 15 11 	call	0x222a	; 0x222a <printf>
		can_transmit_ir_value(ir.beam_blocked);
     eca:	88 81       	ld	r24, Y
     ecc:	66 de       	rcall	.-820    	; 0xb9a <can_transmit_ir_value>
     ece:	0f 90       	pop	r0
     ed0:	0f 90       	pop	r0
		
	}
	return 0;

}
     ed2:	80 e0       	ldi	r24, 0x00	; 0
     ed4:	df 91       	pop	r29
     ed6:	cf 91       	pop	r28
     ed8:	08 95       	ret

00000eda <solenoid_init>:
#include "solenoid.h"
#include <avr/io.h>

void solenoid_init(){
	DDRA |=(1<<PA2);
     eda:	0a 9a       	sbi	0x01, 2	; 1
	PORTA |= (1 << PA2);	
     edc:	12 9a       	sbi	0x02, 2	; 2
     ede:	08 95       	ret

00000ee0 <SPI_masterInit>:
#include <stdio.h>
#include <stdlib.h>

void SPI_masterInit(void){
	/* Set MOSI and SCK output, all others input */
	DDRB = (1 << PB2)|(1 << PB1)|(1 << PB0); //0 = SS, 3 = SI, 2 = SCK
     ee0:	87 e0       	ldi	r24, 0x07	; 7
     ee2:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //SO
     ee4:	23 98       	cbi	0x04, 3	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     ee6:	81 e5       	ldi	r24, 0x51	; 81
     ee8:	8c bd       	out	0x2c, r24	; 44
     eea:	08 95       	ret

00000eec <SPI_transmit>:
}
uint8_t SPI_transmit(char cData){
	/* Start transmission */
	SPDR = cData;
     eec:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     eee:	0d b4       	in	r0, 0x2d	; 45
     ef0:	07 fe       	sbrs	r0, 7
     ef2:	fd cf       	rjmp	.-6      	; 0xeee <SPI_transmit+0x2>
	return SPDR;
     ef4:	8e b5       	in	r24, 0x2e	; 46
     ef6:	08 95       	ret

00000ef8 <USART_Init>:
	_delay_ms(100);
}
void USART_Init(unsigned int ubrr)
{
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     ef8:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     efc:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
     f00:	e1 ec       	ldi	r30, 0xC1	; 193
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	80 81       	ld	r24, Z
     f06:	88 61       	ori	r24, 0x18	; 24
     f08:	80 83       	st	Z, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C |= (3<<UCSZ00);
     f0a:	e2 ec       	ldi	r30, 0xC2	; 194
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	80 81       	ld	r24, Z
     f10:	86 60       	ori	r24, 0x06	; 6
     f12:	80 83       	st	Z, r24
     f14:	08 95       	ret

00000f16 <USART_Transmit>:
}
void USART_Transmit(unsigned char data){
	/*Wait for empty transmit buffer*/
	while( !(UCSR0A & (1<<UDRE0)) );
     f16:	e0 ec       	ldi	r30, 0xC0	; 192
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	90 81       	ld	r25, Z
     f1c:	95 ff       	sbrs	r25, 5
     f1e:	fd cf       	rjmp	.-6      	; 0xf1a <USART_Transmit+0x4>
	
	/*Put data into buffer, sends the data*/
	UDR0 = data;
     f20:	80 93 c6 00 	sts	0x00C6, r24
     f24:	08 95       	ret

00000f26 <USART_Receive>:
}
unsigned char USART_Receive(void){
	/*Wait for data to be received*/
	while( !(UCSR0A & (1<<RXC0)) );
     f26:	e0 ec       	ldi	r30, 0xC0	; 192
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	80 81       	ld	r24, Z
     f2c:	88 23       	and	r24, r24
     f2e:	ec f7       	brge	.-6      	; 0xf2a <USART_Receive+0x4>
	
	
	/*Get and return received data from buffer*/
	return UDR0;
     f30:	80 91 c6 00 	lds	r24, 0x00C6
     f34:	08 95       	ret

00000f36 <main>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include <stdio.h>

int main(void)
{
     f36:	cf 93       	push	r28
     f38:	df 93       	push	r29
     f3a:	cd b7       	in	r28, 0x3d	; 61
     f3c:	de b7       	in	r29, 0x3e	; 62
     f3e:	2b 97       	sbiw	r28, 0x0b	; 11
     f40:	0f b6       	in	r0, 0x3f	; 63
     f42:	f8 94       	cli
     f44:	de bf       	out	0x3e, r29	; 62
     f46:	0f be       	out	0x3f, r0	; 63
     f48:	cd bf       	out	0x3d, r28	; 61
	sei();
     f4a:	78 94       	sei
	USART_Init(MYUBRR);
     f4c:	87 e6       	ldi	r24, 0x67	; 103
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	d3 df       	rcall	.-90     	; 0xef8 <USART_Init>
	fdevopen((int (*)(char,  struct __file *))USART_Transmit, (int (*)(struct __file *))USART_Receive);
     f52:	63 e9       	ldi	r22, 0x93	; 147
     f54:	77 e0       	ldi	r23, 0x07	; 7
     f56:	8b e8       	ldi	r24, 0x8B	; 139
     f58:	97 e0       	ldi	r25, 0x07	; 7
     f5a:	0e 94 99 10 	call	0x2132	; 0x2132 <fdevopen>
	printf("UART setup done\n");
     f5e:	8c e4       	ldi	r24, 0x4C	; 76
     f60:	92 e0       	ldi	r25, 0x02	; 2
     f62:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	can_init();
     f66:	18 db       	rcall	.-2512   	; 0x598 <can_init>
	printf("CAN setup done\n");
     f68:	8c e5       	ldi	r24, 0x5C	; 92
     f6a:	92 e0       	ldi	r25, 0x02	; 2
     f6c:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	pwm_init();
     f70:	0b df       	rcall	.-490    	; 0xd88 <pwm_init>
	printf("PWM setup done\n");
     f72:	8b e6       	ldi	r24, 0x6B	; 107
     f74:	92 e0       	ldi	r25, 0x02	; 2
     f76:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	adc_init();
     f7a:	e6 da       	rcall	.-2612   	; 0x548 <adc_init>
	printf("ADC setup done\n");
     f7c:	8a e7       	ldi	r24, 0x7A	; 122
     f7e:	92 e0       	ldi	r25, 0x02	; 2
     f80:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	motor_init();
     f84:	a3 de       	rcall	.-698    	; 0xccc <motor_init>
	printf("Motor setup done\n");
     f86:	89 e8       	ldi	r24, 0x89	; 137
     f88:	92 e0       	ldi	r25, 0x02	; 2
     f8a:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	dac_initialize(0b111);
     f8e:	87 e0       	ldi	r24, 0x07	; 7
     f90:	3b de       	rcall	.-906    	; 0xc08 <dac_initialize>
	printf("DAC setup done\n");
     f92:	8a e9       	ldi	r24, 0x9A	; 154
     f94:	92 e0       	ldi	r25, 0x02	; 2
     f96:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	solenoid_init();
     f9a:	9f df       	rcall	.-194    	; 0xeda <solenoid_init>
	printf("Solenoid setup done\n");
     f9c:	89 ea       	ldi	r24, 0xA9	; 169
     f9e:	92 e0       	ldi	r25, 0x02	; 2
     fa0:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	printf("Initialization done\n");
     fa4:	8d eb       	ldi	r24, 0xBD	; 189
     fa6:	92 e0       	ldi	r25, 0x02	; 2
     fa8:	0e 94 26 11 	call	0x224c	; 0x224c <puts>
	ir_init();
     fac:	31 df       	rcall	.-414    	; 0xe10 <ir_init>
	solenoid_init();
     fae:	95 df       	rcall	.-214    	; 0xeda <solenoid_init>
	pid_init(-1.0, -2.0, -0.0);
     fb0:	e1 2c       	mov	r14, r1
     fb2:	f1 2c       	mov	r15, r1
     fb4:	00 e0       	ldi	r16, 0x00	; 0
     fb6:	10 e8       	ldi	r17, 0x80	; 128
     fb8:	20 e0       	ldi	r18, 0x00	; 0
     fba:	30 e0       	ldi	r19, 0x00	; 0
     fbc:	40 e0       	ldi	r20, 0x00	; 0
     fbe:	50 ec       	ldi	r21, 0xC0	; 192
     fc0:	60 e0       	ldi	r22, 0x00	; 0
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	80 e8       	ldi	r24, 0x80	; 128
     fc6:	9f eb       	ldi	r25, 0xBF	; 191
     fc8:	c1 d9       	rcall	.-3198   	; 0x34c <pid_init>
	
	can_message msg = {0};
     fca:	fe 01       	movw	r30, r28
     fcc:	31 96       	adiw	r30, 0x01	; 1
     fce:	8b e0       	ldi	r24, 0x0B	; 11
     fd0:	df 01       	movw	r26, r30
     fd2:	1d 92       	st	X+, r1
     fd4:	8a 95       	dec	r24
     fd6:	e9 f7       	brne	.-6      	; 0xfd2 <main+0x9c>
	uint16_t max_encoder_value = pid_encoder_max_value();
     fd8:	74 da       	rcall	.-2840   	; 0x4c2 <pid_encoder_max_value>
     fda:	5c 01       	movw	r10, r24
	uint8_t bufferSelect;
	while(1)
	{
		bufferSelect = can_pollInterrupt();
     fdc:	e3 db       	rcall	.-2106   	; 0x7a4 <can_pollInterrupt>
		if(bufferSelect){
     fde:	88 23       	and	r24, r24
     fe0:	21 f0       	breq	.+8      	; 0xfea <main+0xb4>
			msg = can_read(bufferSelect);
     fe2:	68 2f       	mov	r22, r24
     fe4:	ce 01       	movw	r24, r28
     fe6:	01 96       	adiw	r24, 0x01	; 1
     fe8:	e9 da       	rcall	.-2606   	; 0x5bc <can_read>
		}
		can_handle_message(msg, max_encoder_value);
     fea:	65 01       	movw	r12, r10
     fec:	e9 80       	ldd	r14, Y+1	; 0x01
     fee:	fa 80       	ldd	r15, Y+2	; 0x02
     ff0:	0b 81       	ldd	r16, Y+3	; 0x03
     ff2:	1c 81       	ldd	r17, Y+4	; 0x04
     ff4:	2d 81       	ldd	r18, Y+5	; 0x05
     ff6:	3e 81       	ldd	r19, Y+6	; 0x06
     ff8:	4f 81       	ldd	r20, Y+7	; 0x07
     ffa:	58 85       	ldd	r21, Y+8	; 0x08
     ffc:	69 85       	ldd	r22, Y+9	; 0x09
     ffe:	7a 85       	ldd	r23, Y+10	; 0x0a
    1000:	8b 85       	ldd	r24, Y+11	; 0x0b
    1002:	44 dd       	rcall	.-1400   	; 0xa8c <can_handle_message>
		ir_beam_blocked(adc_read(0));
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	ae da       	rcall	.-2724   	; 0x564 <adc_read>
    1008:	1f df       	rcall	.-450    	; 0xe48 <ir_beam_blocked>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    100a:	8f e3       	ldi	r24, 0x3F	; 63
    100c:	9c e9       	ldi	r25, 0x9C	; 156
    100e:	01 97       	sbiw	r24, 0x01	; 1
    1010:	f1 f7       	brne	.-4      	; 0x100e <main+0xd8>
    1012:	00 c0       	rjmp	.+0      	; 0x1014 <main+0xde>
    1014:	00 00       	nop
    1016:	e2 cf       	rjmp	.-60     	; 0xfdc <main+0xa6>

00001018 <TWI_Master_Initialise>:
		{
			msg[ i ] = TWI_buf[ i ];
		}
	}
	return( TWI_statusReg.lastTransOK );
}
    1018:	8c e0       	ldi	r24, 0x0C	; 12
    101a:	80 93 b8 00 	sts	0x00B8, r24
    101e:	8f ef       	ldi	r24, 0xFF	; 255
    1020:	80 93 bb 00 	sts	0x00BB, r24
    1024:	84 e0       	ldi	r24, 0x04	; 4
    1026:	80 93 bc 00 	sts	0x00BC, r24
    102a:	08 95       	ret

0000102c <TWI_Start_Transceiver_With_Data>:
    102c:	ec eb       	ldi	r30, 0xBC	; 188
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	20 81       	ld	r18, Z
    1032:	20 fd       	sbrc	r18, 0
    1034:	fd cf       	rjmp	.-6      	; 0x1030 <TWI_Start_Transceiver_With_Data+0x4>
    1036:	60 93 d5 02 	sts	0x02D5, r22
    103a:	fc 01       	movw	r30, r24
    103c:	20 81       	ld	r18, Z
    103e:	20 93 d6 02 	sts	0x02D6, r18
    1042:	20 fd       	sbrc	r18, 0
    1044:	0c c0       	rjmp	.+24     	; 0x105e <TWI_Start_Transceiver_With_Data+0x32>
    1046:	62 30       	cpi	r22, 0x02	; 2
    1048:	50 f0       	brcs	.+20     	; 0x105e <TWI_Start_Transceiver_With_Data+0x32>
    104a:	dc 01       	movw	r26, r24
    104c:	11 96       	adiw	r26, 0x01	; 1
    104e:	e7 ed       	ldi	r30, 0xD7	; 215
    1050:	f2 e0       	ldi	r31, 0x02	; 2
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	9d 91       	ld	r25, X+
    1056:	91 93       	st	Z+, r25
    1058:	8f 5f       	subi	r24, 0xFF	; 255
    105a:	86 13       	cpse	r24, r22
    105c:	fb cf       	rjmp	.-10     	; 0x1054 <TWI_Start_Transceiver_With_Data+0x28>
    105e:	10 92 d4 02 	sts	0x02D4, r1
    1062:	88 ef       	ldi	r24, 0xF8	; 248
    1064:	80 93 06 02 	sts	0x0206, r24
    1068:	85 ea       	ldi	r24, 0xA5	; 165
    106a:	80 93 bc 00 	sts	0x00BC, r24
    106e:	08 95       	ret

00001070 <__vector_39>:
This function is the Interrupt Service Routine (ISR), and called when the TWI interrupt is triggered;
that is whenever a TWI event has occurred. This function should not be called directly from the main
application.
****************************************************************************/
ISR(TWI_vect)
{
    1070:	1f 92       	push	r1
    1072:	0f 92       	push	r0
    1074:	0f b6       	in	r0, 0x3f	; 63
    1076:	0f 92       	push	r0
    1078:	11 24       	eor	r1, r1
    107a:	0b b6       	in	r0, 0x3b	; 59
    107c:	0f 92       	push	r0
    107e:	2f 93       	push	r18
    1080:	3f 93       	push	r19
    1082:	8f 93       	push	r24
    1084:	9f 93       	push	r25
    1086:	af 93       	push	r26
    1088:	bf 93       	push	r27
    108a:	ef 93       	push	r30
    108c:	ff 93       	push	r31
	static unsigned char TWI_bufPtr;
	
	switch (TWSR)
    108e:	80 91 b9 00 	lds	r24, 0x00B9
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	fc 01       	movw	r30, r24
    1096:	38 97       	sbiw	r30, 0x08	; 8
    1098:	e1 35       	cpi	r30, 0x51	; 81
    109a:	f1 05       	cpc	r31, r1
    109c:	08 f0       	brcs	.+2      	; 0x10a0 <__vector_39+0x30>
    109e:	55 c0       	rjmp	.+170    	; 0x114a <__vector_39+0xda>
    10a0:	ee 58       	subi	r30, 0x8E	; 142
    10a2:	ff 4f       	sbci	r31, 0xFF	; 255
    10a4:	43 c7       	rjmp	.+3718   	; 0x1f2c <__tablejump2__>
	{
		case TWI_START:             // START has been transmitted
		case TWI_REP_START:         // Repeated START has been transmitted
		TWI_bufPtr = 0;                                     // Set buffer pointer to the TWI Address location
    10a6:	10 92 d3 02 	sts	0x02D3, r1
		case TWI_MTX_ADR_ACK:       // SLA+W has been tramsmitted and ACK received
		case TWI_MTX_DATA_ACK:      // Data byte has been tramsmitted and ACK received
		if (TWI_bufPtr < TWI_msgSize)
    10aa:	e0 91 d3 02 	lds	r30, 0x02D3
    10ae:	80 91 d5 02 	lds	r24, 0x02D5
    10b2:	e8 17       	cp	r30, r24
    10b4:	70 f4       	brcc	.+28     	; 0x10d2 <__vector_39+0x62>
		{
			TWDR = TWI_buf[TWI_bufPtr++];
    10b6:	81 e0       	ldi	r24, 0x01	; 1
    10b8:	8e 0f       	add	r24, r30
    10ba:	80 93 d3 02 	sts	0x02D3, r24
    10be:	f0 e0       	ldi	r31, 0x00	; 0
    10c0:	ea 52       	subi	r30, 0x2A	; 42
    10c2:	fd 4f       	sbci	r31, 0xFD	; 253
    10c4:	80 81       	ld	r24, Z
    10c6:	80 93 bb 00 	sts	0x00BB, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    10ca:	85 e8       	ldi	r24, 0x85	; 133
    10cc:	80 93 bc 00 	sts	0x00BC, r24
    10d0:	43 c0       	rjmp	.+134    	; 0x1158 <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to send byte
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           //
			(0<<TWWC);                                 //
		}else                    // Send STOP after last byte
		{
			TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
    10d2:	80 91 d4 02 	lds	r24, 0x02D4
    10d6:	81 60       	ori	r24, 0x01	; 1
    10d8:	80 93 d4 02 	sts	0x02D4, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    10dc:	84 e9       	ldi	r24, 0x94	; 148
    10de:	80 93 bc 00 	sts	0x00BC, r24
    10e2:	3a c0       	rjmp	.+116    	; 0x1158 <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_ACK:      // Data byte has been received and ACK tramsmitted
		TWI_buf[TWI_bufPtr++] = TWDR;
    10e4:	e0 91 d3 02 	lds	r30, 0x02D3
    10e8:	81 e0       	ldi	r24, 0x01	; 1
    10ea:	8e 0f       	add	r24, r30
    10ec:	80 93 d3 02 	sts	0x02D3, r24
    10f0:	80 91 bb 00 	lds	r24, 0x00BB
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	ea 52       	subi	r30, 0x2A	; 42
    10f8:	fd 4f       	sbci	r31, 0xFD	; 253
    10fa:	80 83       	st	Z, r24
		case TWI_MRX_ADR_ACK:       // SLA+R has been tramsmitted and ACK received
		if (TWI_bufPtr < (TWI_msgSize-1) )                  // Detect the last byte to NACK it.
    10fc:	20 91 d3 02 	lds	r18, 0x02D3
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	80 91 d5 02 	lds	r24, 0x02D5
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	01 97       	sbiw	r24, 0x01	; 1
    110a:	28 17       	cp	r18, r24
    110c:	39 07       	cpc	r19, r25
    110e:	24 f4       	brge	.+8      	; 0x1118 <__vector_39+0xa8>
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    1110:	85 ec       	ldi	r24, 0xC5	; 197
    1112:	80 93 bc 00 	sts	0x00BC, r24
    1116:	20 c0       	rjmp	.+64     	; 0x1158 <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to read next byte
			(1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send ACK after reception
			(0<<TWWC);                                 //
		}else                    // Send NACK after next reception
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    1118:	85 e8       	ldi	r24, 0x85	; 133
    111a:	80 93 bc 00 	sts	0x00BC, r24
    111e:	1c c0       	rjmp	.+56     	; 0x1158 <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send NACK after reception
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_NACK:     // Data byte has been received and NACK tramsmitted
		TWI_buf[TWI_bufPtr] = TWDR;
    1120:	80 91 bb 00 	lds	r24, 0x00BB
    1124:	e0 91 d3 02 	lds	r30, 0x02D3
    1128:	f0 e0       	ldi	r31, 0x00	; 0
    112a:	ea 52       	subi	r30, 0x2A	; 42
    112c:	fd 4f       	sbci	r31, 0xFD	; 253
    112e:	80 83       	st	Z, r24
		TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
    1130:	80 91 d4 02 	lds	r24, 0x02D4
    1134:	81 60       	ori	r24, 0x01	; 1
    1136:	80 93 d4 02 	sts	0x02D4, r24
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    113a:	84 e9       	ldi	r24, 0x94	; 148
    113c:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(1<<TWINT)|                      // Disable TWI Interrupt and clear the flag
		(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
		(0<<TWWC);                                 //
		break;
    1140:	0b c0       	rjmp	.+22     	; 0x1158 <__vector_39+0xe8>
		case TWI_ARB_LOST:          // Arbitration lost
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
    1142:	85 ea       	ldi	r24, 0xA5	; 165
    1144:	80 93 bc 00 	sts	0x00BC, r24
		(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag
		(0<<TWEA)|(1<<TWSTA)|(0<<TWSTO)|           // Initiate a (RE)START condition.
		(0<<TWWC);                                 //
		break;
    1148:	07 c0       	rjmp	.+14     	; 0x1158 <__vector_39+0xe8>
		case TWI_MRX_ADR_NACK:      // SLA+R has been tramsmitted and NACK received
		case TWI_MTX_DATA_NACK:     // Data byte has been tramsmitted and NACK received
		//    case TWI_NO_STATE              // No relevant state information available; TWINT = ?0?
		case TWI_BUS_ERROR:         // Bus error due to an illegal START or STOP condition
		default:
		TWI_state = TWSR;                                 // Store TWSR and automatically sets clears noErrors bit.
    114a:	80 91 b9 00 	lds	r24, 0x00B9
    114e:	80 93 06 02 	sts	0x0206, r24
		// Reset TWI Interface
		TWCR = (1<<TWEN)|                                 // Enable TWI-interface and release TWI pins
    1152:	84 e0       	ldi	r24, 0x04	; 4
    1154:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(0<<TWINT)|                      // Disable Interupt
		(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // No Signal requests
		(0<<TWWC);                                 //
	}
    1158:	ff 91       	pop	r31
    115a:	ef 91       	pop	r30
    115c:	bf 91       	pop	r27
    115e:	af 91       	pop	r26
    1160:	9f 91       	pop	r25
    1162:	8f 91       	pop	r24
    1164:	3f 91       	pop	r19
    1166:	2f 91       	pop	r18
    1168:	0f 90       	pop	r0
    116a:	0b be       	out	0x3b, r0	; 59
    116c:	0f 90       	pop	r0
    116e:	0f be       	out	0x3f, r0	; 63
    1170:	0f 90       	pop	r0
    1172:	1f 90       	pop	r1
    1174:	18 95       	reti

00001176 <__subsf3>:
    1176:	50 58       	subi	r21, 0x80	; 128

00001178 <__addsf3>:
    1178:	bb 27       	eor	r27, r27
    117a:	aa 27       	eor	r26, r26
    117c:	0e d0       	rcall	.+28     	; 0x119a <__addsf3x>
    117e:	4d c1       	rjmp	.+666    	; 0x141a <__fp_round>
    1180:	3e d1       	rcall	.+636    	; 0x13fe <__fp_pscA>
    1182:	30 f0       	brcs	.+12     	; 0x1190 <__addsf3+0x18>
    1184:	43 d1       	rcall	.+646    	; 0x140c <__fp_pscB>
    1186:	20 f0       	brcs	.+8      	; 0x1190 <__addsf3+0x18>
    1188:	31 f4       	brne	.+12     	; 0x1196 <__addsf3+0x1e>
    118a:	9f 3f       	cpi	r25, 0xFF	; 255
    118c:	11 f4       	brne	.+4      	; 0x1192 <__addsf3+0x1a>
    118e:	1e f4       	brtc	.+6      	; 0x1196 <__addsf3+0x1e>
    1190:	33 c1       	rjmp	.+614    	; 0x13f8 <__fp_nan>
    1192:	0e f4       	brtc	.+2      	; 0x1196 <__addsf3+0x1e>
    1194:	e0 95       	com	r30
    1196:	e7 fb       	bst	r30, 7
    1198:	29 c1       	rjmp	.+594    	; 0x13ec <__fp_inf>

0000119a <__addsf3x>:
    119a:	e9 2f       	mov	r30, r25
    119c:	4f d1       	rcall	.+670    	; 0x143c <__fp_split3>
    119e:	80 f3       	brcs	.-32     	; 0x1180 <__addsf3+0x8>
    11a0:	ba 17       	cp	r27, r26
    11a2:	62 07       	cpc	r22, r18
    11a4:	73 07       	cpc	r23, r19
    11a6:	84 07       	cpc	r24, r20
    11a8:	95 07       	cpc	r25, r21
    11aa:	18 f0       	brcs	.+6      	; 0x11b2 <__addsf3x+0x18>
    11ac:	71 f4       	brne	.+28     	; 0x11ca <__addsf3x+0x30>
    11ae:	9e f5       	brtc	.+102    	; 0x1216 <__addsf3x+0x7c>
    11b0:	67 c1       	rjmp	.+718    	; 0x1480 <__fp_zero>
    11b2:	0e f4       	brtc	.+2      	; 0x11b6 <__addsf3x+0x1c>
    11b4:	e0 95       	com	r30
    11b6:	0b 2e       	mov	r0, r27
    11b8:	ba 2f       	mov	r27, r26
    11ba:	a0 2d       	mov	r26, r0
    11bc:	0b 01       	movw	r0, r22
    11be:	b9 01       	movw	r22, r18
    11c0:	90 01       	movw	r18, r0
    11c2:	0c 01       	movw	r0, r24
    11c4:	ca 01       	movw	r24, r20
    11c6:	a0 01       	movw	r20, r0
    11c8:	11 24       	eor	r1, r1
    11ca:	ff 27       	eor	r31, r31
    11cc:	59 1b       	sub	r21, r25
    11ce:	99 f0       	breq	.+38     	; 0x11f6 <__addsf3x+0x5c>
    11d0:	59 3f       	cpi	r21, 0xF9	; 249
    11d2:	50 f4       	brcc	.+20     	; 0x11e8 <__addsf3x+0x4e>
    11d4:	50 3e       	cpi	r21, 0xE0	; 224
    11d6:	68 f1       	brcs	.+90     	; 0x1232 <__addsf3x+0x98>
    11d8:	1a 16       	cp	r1, r26
    11da:	f0 40       	sbci	r31, 0x00	; 0
    11dc:	a2 2f       	mov	r26, r18
    11de:	23 2f       	mov	r18, r19
    11e0:	34 2f       	mov	r19, r20
    11e2:	44 27       	eor	r20, r20
    11e4:	58 5f       	subi	r21, 0xF8	; 248
    11e6:	f3 cf       	rjmp	.-26     	; 0x11ce <__addsf3x+0x34>
    11e8:	46 95       	lsr	r20
    11ea:	37 95       	ror	r19
    11ec:	27 95       	ror	r18
    11ee:	a7 95       	ror	r26
    11f0:	f0 40       	sbci	r31, 0x00	; 0
    11f2:	53 95       	inc	r21
    11f4:	c9 f7       	brne	.-14     	; 0x11e8 <__addsf3x+0x4e>
    11f6:	7e f4       	brtc	.+30     	; 0x1216 <__addsf3x+0x7c>
    11f8:	1f 16       	cp	r1, r31
    11fa:	ba 0b       	sbc	r27, r26
    11fc:	62 0b       	sbc	r22, r18
    11fe:	73 0b       	sbc	r23, r19
    1200:	84 0b       	sbc	r24, r20
    1202:	ba f0       	brmi	.+46     	; 0x1232 <__addsf3x+0x98>
    1204:	91 50       	subi	r25, 0x01	; 1
    1206:	a1 f0       	breq	.+40     	; 0x1230 <__addsf3x+0x96>
    1208:	ff 0f       	add	r31, r31
    120a:	bb 1f       	adc	r27, r27
    120c:	66 1f       	adc	r22, r22
    120e:	77 1f       	adc	r23, r23
    1210:	88 1f       	adc	r24, r24
    1212:	c2 f7       	brpl	.-16     	; 0x1204 <__addsf3x+0x6a>
    1214:	0e c0       	rjmp	.+28     	; 0x1232 <__addsf3x+0x98>
    1216:	ba 0f       	add	r27, r26
    1218:	62 1f       	adc	r22, r18
    121a:	73 1f       	adc	r23, r19
    121c:	84 1f       	adc	r24, r20
    121e:	48 f4       	brcc	.+18     	; 0x1232 <__addsf3x+0x98>
    1220:	87 95       	ror	r24
    1222:	77 95       	ror	r23
    1224:	67 95       	ror	r22
    1226:	b7 95       	ror	r27
    1228:	f7 95       	ror	r31
    122a:	9e 3f       	cpi	r25, 0xFE	; 254
    122c:	08 f0       	brcs	.+2      	; 0x1230 <__addsf3x+0x96>
    122e:	b3 cf       	rjmp	.-154    	; 0x1196 <__addsf3+0x1e>
    1230:	93 95       	inc	r25
    1232:	88 0f       	add	r24, r24
    1234:	08 f0       	brcs	.+2      	; 0x1238 <__addsf3x+0x9e>
    1236:	99 27       	eor	r25, r25
    1238:	ee 0f       	add	r30, r30
    123a:	97 95       	ror	r25
    123c:	87 95       	ror	r24
    123e:	08 95       	ret

00001240 <__divsf3>:
    1240:	0c d0       	rcall	.+24     	; 0x125a <__divsf3x>
    1242:	eb c0       	rjmp	.+470    	; 0x141a <__fp_round>
    1244:	e3 d0       	rcall	.+454    	; 0x140c <__fp_pscB>
    1246:	40 f0       	brcs	.+16     	; 0x1258 <__divsf3+0x18>
    1248:	da d0       	rcall	.+436    	; 0x13fe <__fp_pscA>
    124a:	30 f0       	brcs	.+12     	; 0x1258 <__divsf3+0x18>
    124c:	21 f4       	brne	.+8      	; 0x1256 <__divsf3+0x16>
    124e:	5f 3f       	cpi	r21, 0xFF	; 255
    1250:	19 f0       	breq	.+6      	; 0x1258 <__divsf3+0x18>
    1252:	cc c0       	rjmp	.+408    	; 0x13ec <__fp_inf>
    1254:	51 11       	cpse	r21, r1
    1256:	15 c1       	rjmp	.+554    	; 0x1482 <__fp_szero>
    1258:	cf c0       	rjmp	.+414    	; 0x13f8 <__fp_nan>

0000125a <__divsf3x>:
    125a:	f0 d0       	rcall	.+480    	; 0x143c <__fp_split3>
    125c:	98 f3       	brcs	.-26     	; 0x1244 <__divsf3+0x4>

0000125e <__divsf3_pse>:
    125e:	99 23       	and	r25, r25
    1260:	c9 f3       	breq	.-14     	; 0x1254 <__divsf3+0x14>
    1262:	55 23       	and	r21, r21
    1264:	b1 f3       	breq	.-20     	; 0x1252 <__divsf3+0x12>
    1266:	95 1b       	sub	r25, r21
    1268:	55 0b       	sbc	r21, r21
    126a:	bb 27       	eor	r27, r27
    126c:	aa 27       	eor	r26, r26
    126e:	62 17       	cp	r22, r18
    1270:	73 07       	cpc	r23, r19
    1272:	84 07       	cpc	r24, r20
    1274:	38 f0       	brcs	.+14     	; 0x1284 <__divsf3_pse+0x26>
    1276:	9f 5f       	subi	r25, 0xFF	; 255
    1278:	5f 4f       	sbci	r21, 0xFF	; 255
    127a:	22 0f       	add	r18, r18
    127c:	33 1f       	adc	r19, r19
    127e:	44 1f       	adc	r20, r20
    1280:	aa 1f       	adc	r26, r26
    1282:	a9 f3       	breq	.-22     	; 0x126e <__divsf3_pse+0x10>
    1284:	33 d0       	rcall	.+102    	; 0x12ec <__divsf3_pse+0x8e>
    1286:	0e 2e       	mov	r0, r30
    1288:	3a f0       	brmi	.+14     	; 0x1298 <__divsf3_pse+0x3a>
    128a:	e0 e8       	ldi	r30, 0x80	; 128
    128c:	30 d0       	rcall	.+96     	; 0x12ee <__divsf3_pse+0x90>
    128e:	91 50       	subi	r25, 0x01	; 1
    1290:	50 40       	sbci	r21, 0x00	; 0
    1292:	e6 95       	lsr	r30
    1294:	00 1c       	adc	r0, r0
    1296:	ca f7       	brpl	.-14     	; 0x128a <__divsf3_pse+0x2c>
    1298:	29 d0       	rcall	.+82     	; 0x12ec <__divsf3_pse+0x8e>
    129a:	fe 2f       	mov	r31, r30
    129c:	27 d0       	rcall	.+78     	; 0x12ec <__divsf3_pse+0x8e>
    129e:	66 0f       	add	r22, r22
    12a0:	77 1f       	adc	r23, r23
    12a2:	88 1f       	adc	r24, r24
    12a4:	bb 1f       	adc	r27, r27
    12a6:	26 17       	cp	r18, r22
    12a8:	37 07       	cpc	r19, r23
    12aa:	48 07       	cpc	r20, r24
    12ac:	ab 07       	cpc	r26, r27
    12ae:	b0 e8       	ldi	r27, 0x80	; 128
    12b0:	09 f0       	breq	.+2      	; 0x12b4 <__divsf3_pse+0x56>
    12b2:	bb 0b       	sbc	r27, r27
    12b4:	80 2d       	mov	r24, r0
    12b6:	bf 01       	movw	r22, r30
    12b8:	ff 27       	eor	r31, r31
    12ba:	93 58       	subi	r25, 0x83	; 131
    12bc:	5f 4f       	sbci	r21, 0xFF	; 255
    12be:	2a f0       	brmi	.+10     	; 0x12ca <__divsf3_pse+0x6c>
    12c0:	9e 3f       	cpi	r25, 0xFE	; 254
    12c2:	51 05       	cpc	r21, r1
    12c4:	68 f0       	brcs	.+26     	; 0x12e0 <__divsf3_pse+0x82>
    12c6:	92 c0       	rjmp	.+292    	; 0x13ec <__fp_inf>
    12c8:	dc c0       	rjmp	.+440    	; 0x1482 <__fp_szero>
    12ca:	5f 3f       	cpi	r21, 0xFF	; 255
    12cc:	ec f3       	brlt	.-6      	; 0x12c8 <__divsf3_pse+0x6a>
    12ce:	98 3e       	cpi	r25, 0xE8	; 232
    12d0:	dc f3       	brlt	.-10     	; 0x12c8 <__divsf3_pse+0x6a>
    12d2:	86 95       	lsr	r24
    12d4:	77 95       	ror	r23
    12d6:	67 95       	ror	r22
    12d8:	b7 95       	ror	r27
    12da:	f7 95       	ror	r31
    12dc:	9f 5f       	subi	r25, 0xFF	; 255
    12de:	c9 f7       	brne	.-14     	; 0x12d2 <__divsf3_pse+0x74>
    12e0:	88 0f       	add	r24, r24
    12e2:	91 1d       	adc	r25, r1
    12e4:	96 95       	lsr	r25
    12e6:	87 95       	ror	r24
    12e8:	97 f9       	bld	r25, 7
    12ea:	08 95       	ret
    12ec:	e1 e0       	ldi	r30, 0x01	; 1
    12ee:	66 0f       	add	r22, r22
    12f0:	77 1f       	adc	r23, r23
    12f2:	88 1f       	adc	r24, r24
    12f4:	bb 1f       	adc	r27, r27
    12f6:	62 17       	cp	r22, r18
    12f8:	73 07       	cpc	r23, r19
    12fa:	84 07       	cpc	r24, r20
    12fc:	ba 07       	cpc	r27, r26
    12fe:	20 f0       	brcs	.+8      	; 0x1308 <__divsf3_pse+0xaa>
    1300:	62 1b       	sub	r22, r18
    1302:	73 0b       	sbc	r23, r19
    1304:	84 0b       	sbc	r24, r20
    1306:	ba 0b       	sbc	r27, r26
    1308:	ee 1f       	adc	r30, r30
    130a:	88 f7       	brcc	.-30     	; 0x12ee <__divsf3_pse+0x90>
    130c:	e0 95       	com	r30
    130e:	08 95       	ret

00001310 <__fixsfsi>:
    1310:	04 d0       	rcall	.+8      	; 0x131a <__fixunssfsi>
    1312:	68 94       	set
    1314:	b1 11       	cpse	r27, r1
    1316:	b5 c0       	rjmp	.+362    	; 0x1482 <__fp_szero>
    1318:	08 95       	ret

0000131a <__fixunssfsi>:
    131a:	98 d0       	rcall	.+304    	; 0x144c <__fp_splitA>
    131c:	88 f0       	brcs	.+34     	; 0x1340 <__fixunssfsi+0x26>
    131e:	9f 57       	subi	r25, 0x7F	; 127
    1320:	90 f0       	brcs	.+36     	; 0x1346 <__fixunssfsi+0x2c>
    1322:	b9 2f       	mov	r27, r25
    1324:	99 27       	eor	r25, r25
    1326:	b7 51       	subi	r27, 0x17	; 23
    1328:	a0 f0       	brcs	.+40     	; 0x1352 <__fixunssfsi+0x38>
    132a:	d1 f0       	breq	.+52     	; 0x1360 <__fixunssfsi+0x46>
    132c:	66 0f       	add	r22, r22
    132e:	77 1f       	adc	r23, r23
    1330:	88 1f       	adc	r24, r24
    1332:	99 1f       	adc	r25, r25
    1334:	1a f0       	brmi	.+6      	; 0x133c <__fixunssfsi+0x22>
    1336:	ba 95       	dec	r27
    1338:	c9 f7       	brne	.-14     	; 0x132c <__fixunssfsi+0x12>
    133a:	12 c0       	rjmp	.+36     	; 0x1360 <__fixunssfsi+0x46>
    133c:	b1 30       	cpi	r27, 0x01	; 1
    133e:	81 f0       	breq	.+32     	; 0x1360 <__fixunssfsi+0x46>
    1340:	9f d0       	rcall	.+318    	; 0x1480 <__fp_zero>
    1342:	b1 e0       	ldi	r27, 0x01	; 1
    1344:	08 95       	ret
    1346:	9c c0       	rjmp	.+312    	; 0x1480 <__fp_zero>
    1348:	67 2f       	mov	r22, r23
    134a:	78 2f       	mov	r23, r24
    134c:	88 27       	eor	r24, r24
    134e:	b8 5f       	subi	r27, 0xF8	; 248
    1350:	39 f0       	breq	.+14     	; 0x1360 <__fixunssfsi+0x46>
    1352:	b9 3f       	cpi	r27, 0xF9	; 249
    1354:	cc f3       	brlt	.-14     	; 0x1348 <__fixunssfsi+0x2e>
    1356:	86 95       	lsr	r24
    1358:	77 95       	ror	r23
    135a:	67 95       	ror	r22
    135c:	b3 95       	inc	r27
    135e:	d9 f7       	brne	.-10     	; 0x1356 <__fixunssfsi+0x3c>
    1360:	3e f4       	brtc	.+14     	; 0x1370 <__fixunssfsi+0x56>
    1362:	90 95       	com	r25
    1364:	80 95       	com	r24
    1366:	70 95       	com	r23
    1368:	61 95       	neg	r22
    136a:	7f 4f       	sbci	r23, 0xFF	; 255
    136c:	8f 4f       	sbci	r24, 0xFF	; 255
    136e:	9f 4f       	sbci	r25, 0xFF	; 255
    1370:	08 95       	ret

00001372 <__floatunsisf>:
    1372:	e8 94       	clt
    1374:	09 c0       	rjmp	.+18     	; 0x1388 <__floatsisf+0x12>

00001376 <__floatsisf>:
    1376:	97 fb       	bst	r25, 7
    1378:	3e f4       	brtc	.+14     	; 0x1388 <__floatsisf+0x12>
    137a:	90 95       	com	r25
    137c:	80 95       	com	r24
    137e:	70 95       	com	r23
    1380:	61 95       	neg	r22
    1382:	7f 4f       	sbci	r23, 0xFF	; 255
    1384:	8f 4f       	sbci	r24, 0xFF	; 255
    1386:	9f 4f       	sbci	r25, 0xFF	; 255
    1388:	99 23       	and	r25, r25
    138a:	a9 f0       	breq	.+42     	; 0x13b6 <__floatsisf+0x40>
    138c:	f9 2f       	mov	r31, r25
    138e:	96 e9       	ldi	r25, 0x96	; 150
    1390:	bb 27       	eor	r27, r27
    1392:	93 95       	inc	r25
    1394:	f6 95       	lsr	r31
    1396:	87 95       	ror	r24
    1398:	77 95       	ror	r23
    139a:	67 95       	ror	r22
    139c:	b7 95       	ror	r27
    139e:	f1 11       	cpse	r31, r1
    13a0:	f8 cf       	rjmp	.-16     	; 0x1392 <__floatsisf+0x1c>
    13a2:	fa f4       	brpl	.+62     	; 0x13e2 <__floatsisf+0x6c>
    13a4:	bb 0f       	add	r27, r27
    13a6:	11 f4       	brne	.+4      	; 0x13ac <__floatsisf+0x36>
    13a8:	60 ff       	sbrs	r22, 0
    13aa:	1b c0       	rjmp	.+54     	; 0x13e2 <__floatsisf+0x6c>
    13ac:	6f 5f       	subi	r22, 0xFF	; 255
    13ae:	7f 4f       	sbci	r23, 0xFF	; 255
    13b0:	8f 4f       	sbci	r24, 0xFF	; 255
    13b2:	9f 4f       	sbci	r25, 0xFF	; 255
    13b4:	16 c0       	rjmp	.+44     	; 0x13e2 <__floatsisf+0x6c>
    13b6:	88 23       	and	r24, r24
    13b8:	11 f0       	breq	.+4      	; 0x13be <__floatsisf+0x48>
    13ba:	96 e9       	ldi	r25, 0x96	; 150
    13bc:	11 c0       	rjmp	.+34     	; 0x13e0 <__floatsisf+0x6a>
    13be:	77 23       	and	r23, r23
    13c0:	21 f0       	breq	.+8      	; 0x13ca <__floatsisf+0x54>
    13c2:	9e e8       	ldi	r25, 0x8E	; 142
    13c4:	87 2f       	mov	r24, r23
    13c6:	76 2f       	mov	r23, r22
    13c8:	05 c0       	rjmp	.+10     	; 0x13d4 <__floatsisf+0x5e>
    13ca:	66 23       	and	r22, r22
    13cc:	71 f0       	breq	.+28     	; 0x13ea <__floatsisf+0x74>
    13ce:	96 e8       	ldi	r25, 0x86	; 134
    13d0:	86 2f       	mov	r24, r22
    13d2:	70 e0       	ldi	r23, 0x00	; 0
    13d4:	60 e0       	ldi	r22, 0x00	; 0
    13d6:	2a f0       	brmi	.+10     	; 0x13e2 <__floatsisf+0x6c>
    13d8:	9a 95       	dec	r25
    13da:	66 0f       	add	r22, r22
    13dc:	77 1f       	adc	r23, r23
    13de:	88 1f       	adc	r24, r24
    13e0:	da f7       	brpl	.-10     	; 0x13d8 <__floatsisf+0x62>
    13e2:	88 0f       	add	r24, r24
    13e4:	96 95       	lsr	r25
    13e6:	87 95       	ror	r24
    13e8:	97 f9       	bld	r25, 7
    13ea:	08 95       	ret

000013ec <__fp_inf>:
    13ec:	97 f9       	bld	r25, 7
    13ee:	9f 67       	ori	r25, 0x7F	; 127
    13f0:	80 e8       	ldi	r24, 0x80	; 128
    13f2:	70 e0       	ldi	r23, 0x00	; 0
    13f4:	60 e0       	ldi	r22, 0x00	; 0
    13f6:	08 95       	ret

000013f8 <__fp_nan>:
    13f8:	9f ef       	ldi	r25, 0xFF	; 255
    13fa:	80 ec       	ldi	r24, 0xC0	; 192
    13fc:	08 95       	ret

000013fe <__fp_pscA>:
    13fe:	00 24       	eor	r0, r0
    1400:	0a 94       	dec	r0
    1402:	16 16       	cp	r1, r22
    1404:	17 06       	cpc	r1, r23
    1406:	18 06       	cpc	r1, r24
    1408:	09 06       	cpc	r0, r25
    140a:	08 95       	ret

0000140c <__fp_pscB>:
    140c:	00 24       	eor	r0, r0
    140e:	0a 94       	dec	r0
    1410:	12 16       	cp	r1, r18
    1412:	13 06       	cpc	r1, r19
    1414:	14 06       	cpc	r1, r20
    1416:	05 06       	cpc	r0, r21
    1418:	08 95       	ret

0000141a <__fp_round>:
    141a:	09 2e       	mov	r0, r25
    141c:	03 94       	inc	r0
    141e:	00 0c       	add	r0, r0
    1420:	11 f4       	brne	.+4      	; 0x1426 <__fp_round+0xc>
    1422:	88 23       	and	r24, r24
    1424:	52 f0       	brmi	.+20     	; 0x143a <__fp_round+0x20>
    1426:	bb 0f       	add	r27, r27
    1428:	40 f4       	brcc	.+16     	; 0x143a <__fp_round+0x20>
    142a:	bf 2b       	or	r27, r31
    142c:	11 f4       	brne	.+4      	; 0x1432 <__fp_round+0x18>
    142e:	60 ff       	sbrs	r22, 0
    1430:	04 c0       	rjmp	.+8      	; 0x143a <__fp_round+0x20>
    1432:	6f 5f       	subi	r22, 0xFF	; 255
    1434:	7f 4f       	sbci	r23, 0xFF	; 255
    1436:	8f 4f       	sbci	r24, 0xFF	; 255
    1438:	9f 4f       	sbci	r25, 0xFF	; 255
    143a:	08 95       	ret

0000143c <__fp_split3>:
    143c:	57 fd       	sbrc	r21, 7
    143e:	90 58       	subi	r25, 0x80	; 128
    1440:	44 0f       	add	r20, r20
    1442:	55 1f       	adc	r21, r21
    1444:	59 f0       	breq	.+22     	; 0x145c <__fp_splitA+0x10>
    1446:	5f 3f       	cpi	r21, 0xFF	; 255
    1448:	71 f0       	breq	.+28     	; 0x1466 <__fp_splitA+0x1a>
    144a:	47 95       	ror	r20

0000144c <__fp_splitA>:
    144c:	88 0f       	add	r24, r24
    144e:	97 fb       	bst	r25, 7
    1450:	99 1f       	adc	r25, r25
    1452:	61 f0       	breq	.+24     	; 0x146c <__fp_splitA+0x20>
    1454:	9f 3f       	cpi	r25, 0xFF	; 255
    1456:	79 f0       	breq	.+30     	; 0x1476 <__fp_splitA+0x2a>
    1458:	87 95       	ror	r24
    145a:	08 95       	ret
    145c:	12 16       	cp	r1, r18
    145e:	13 06       	cpc	r1, r19
    1460:	14 06       	cpc	r1, r20
    1462:	55 1f       	adc	r21, r21
    1464:	f2 cf       	rjmp	.-28     	; 0x144a <__fp_split3+0xe>
    1466:	46 95       	lsr	r20
    1468:	f1 df       	rcall	.-30     	; 0x144c <__fp_splitA>
    146a:	08 c0       	rjmp	.+16     	; 0x147c <__fp_splitA+0x30>
    146c:	16 16       	cp	r1, r22
    146e:	17 06       	cpc	r1, r23
    1470:	18 06       	cpc	r1, r24
    1472:	99 1f       	adc	r25, r25
    1474:	f1 cf       	rjmp	.-30     	; 0x1458 <__fp_splitA+0xc>
    1476:	86 95       	lsr	r24
    1478:	71 05       	cpc	r23, r1
    147a:	61 05       	cpc	r22, r1
    147c:	08 94       	sec
    147e:	08 95       	ret

00001480 <__fp_zero>:
    1480:	e8 94       	clt

00001482 <__fp_szero>:
    1482:	bb 27       	eor	r27, r27
    1484:	66 27       	eor	r22, r22
    1486:	77 27       	eor	r23, r23
    1488:	cb 01       	movw	r24, r22
    148a:	97 f9       	bld	r25, 7
    148c:	08 95       	ret

0000148e <__mulsf3>:
    148e:	0b d0       	rcall	.+22     	; 0x14a6 <__mulsf3x>
    1490:	c4 cf       	rjmp	.-120    	; 0x141a <__fp_round>
    1492:	b5 df       	rcall	.-150    	; 0x13fe <__fp_pscA>
    1494:	28 f0       	brcs	.+10     	; 0x14a0 <__mulsf3+0x12>
    1496:	ba df       	rcall	.-140    	; 0x140c <__fp_pscB>
    1498:	18 f0       	brcs	.+6      	; 0x14a0 <__mulsf3+0x12>
    149a:	95 23       	and	r25, r21
    149c:	09 f0       	breq	.+2      	; 0x14a0 <__mulsf3+0x12>
    149e:	a6 cf       	rjmp	.-180    	; 0x13ec <__fp_inf>
    14a0:	ab cf       	rjmp	.-170    	; 0x13f8 <__fp_nan>
    14a2:	11 24       	eor	r1, r1
    14a4:	ee cf       	rjmp	.-36     	; 0x1482 <__fp_szero>

000014a6 <__mulsf3x>:
    14a6:	ca df       	rcall	.-108    	; 0x143c <__fp_split3>
    14a8:	a0 f3       	brcs	.-24     	; 0x1492 <__mulsf3+0x4>

000014aa <__mulsf3_pse>:
    14aa:	95 9f       	mul	r25, r21
    14ac:	d1 f3       	breq	.-12     	; 0x14a2 <__mulsf3+0x14>
    14ae:	95 0f       	add	r25, r21
    14b0:	50 e0       	ldi	r21, 0x00	; 0
    14b2:	55 1f       	adc	r21, r21
    14b4:	62 9f       	mul	r22, r18
    14b6:	f0 01       	movw	r30, r0
    14b8:	72 9f       	mul	r23, r18
    14ba:	bb 27       	eor	r27, r27
    14bc:	f0 0d       	add	r31, r0
    14be:	b1 1d       	adc	r27, r1
    14c0:	63 9f       	mul	r22, r19
    14c2:	aa 27       	eor	r26, r26
    14c4:	f0 0d       	add	r31, r0
    14c6:	b1 1d       	adc	r27, r1
    14c8:	aa 1f       	adc	r26, r26
    14ca:	64 9f       	mul	r22, r20
    14cc:	66 27       	eor	r22, r22
    14ce:	b0 0d       	add	r27, r0
    14d0:	a1 1d       	adc	r26, r1
    14d2:	66 1f       	adc	r22, r22
    14d4:	82 9f       	mul	r24, r18
    14d6:	22 27       	eor	r18, r18
    14d8:	b0 0d       	add	r27, r0
    14da:	a1 1d       	adc	r26, r1
    14dc:	62 1f       	adc	r22, r18
    14de:	73 9f       	mul	r23, r19
    14e0:	b0 0d       	add	r27, r0
    14e2:	a1 1d       	adc	r26, r1
    14e4:	62 1f       	adc	r22, r18
    14e6:	83 9f       	mul	r24, r19
    14e8:	a0 0d       	add	r26, r0
    14ea:	61 1d       	adc	r22, r1
    14ec:	22 1f       	adc	r18, r18
    14ee:	74 9f       	mul	r23, r20
    14f0:	33 27       	eor	r19, r19
    14f2:	a0 0d       	add	r26, r0
    14f4:	61 1d       	adc	r22, r1
    14f6:	23 1f       	adc	r18, r19
    14f8:	84 9f       	mul	r24, r20
    14fa:	60 0d       	add	r22, r0
    14fc:	21 1d       	adc	r18, r1
    14fe:	82 2f       	mov	r24, r18
    1500:	76 2f       	mov	r23, r22
    1502:	6a 2f       	mov	r22, r26
    1504:	11 24       	eor	r1, r1
    1506:	9f 57       	subi	r25, 0x7F	; 127
    1508:	50 40       	sbci	r21, 0x00	; 0
    150a:	8a f0       	brmi	.+34     	; 0x152e <__mulsf3_pse+0x84>
    150c:	e1 f0       	breq	.+56     	; 0x1546 <__mulsf3_pse+0x9c>
    150e:	88 23       	and	r24, r24
    1510:	4a f0       	brmi	.+18     	; 0x1524 <__mulsf3_pse+0x7a>
    1512:	ee 0f       	add	r30, r30
    1514:	ff 1f       	adc	r31, r31
    1516:	bb 1f       	adc	r27, r27
    1518:	66 1f       	adc	r22, r22
    151a:	77 1f       	adc	r23, r23
    151c:	88 1f       	adc	r24, r24
    151e:	91 50       	subi	r25, 0x01	; 1
    1520:	50 40       	sbci	r21, 0x00	; 0
    1522:	a9 f7       	brne	.-22     	; 0x150e <__mulsf3_pse+0x64>
    1524:	9e 3f       	cpi	r25, 0xFE	; 254
    1526:	51 05       	cpc	r21, r1
    1528:	70 f0       	brcs	.+28     	; 0x1546 <__mulsf3_pse+0x9c>
    152a:	60 cf       	rjmp	.-320    	; 0x13ec <__fp_inf>
    152c:	aa cf       	rjmp	.-172    	; 0x1482 <__fp_szero>
    152e:	5f 3f       	cpi	r21, 0xFF	; 255
    1530:	ec f3       	brlt	.-6      	; 0x152c <__mulsf3_pse+0x82>
    1532:	98 3e       	cpi	r25, 0xE8	; 232
    1534:	dc f3       	brlt	.-10     	; 0x152c <__mulsf3_pse+0x82>
    1536:	86 95       	lsr	r24
    1538:	77 95       	ror	r23
    153a:	67 95       	ror	r22
    153c:	b7 95       	ror	r27
    153e:	f7 95       	ror	r31
    1540:	e7 95       	ror	r30
    1542:	9f 5f       	subi	r25, 0xFF	; 255
    1544:	c1 f7       	brne	.-16     	; 0x1536 <__mulsf3_pse+0x8c>
    1546:	fe 2b       	or	r31, r30
    1548:	88 0f       	add	r24, r24
    154a:	91 1d       	adc	r25, r1
    154c:	96 95       	lsr	r25
    154e:	87 95       	ror	r24
    1550:	97 f9       	bld	r25, 7
    1552:	08 95       	ret

00001554 <pow>:
    1554:	fa 01       	movw	r30, r20
    1556:	ee 0f       	add	r30, r30
    1558:	ff 1f       	adc	r31, r31
    155a:	30 96       	adiw	r30, 0x00	; 0
    155c:	21 05       	cpc	r18, r1
    155e:	31 05       	cpc	r19, r1
    1560:	99 f1       	breq	.+102    	; 0x15c8 <pow+0x74>
    1562:	61 15       	cp	r22, r1
    1564:	71 05       	cpc	r23, r1
    1566:	61 f4       	brne	.+24     	; 0x1580 <pow+0x2c>
    1568:	80 38       	cpi	r24, 0x80	; 128
    156a:	bf e3       	ldi	r27, 0x3F	; 63
    156c:	9b 07       	cpc	r25, r27
    156e:	49 f1       	breq	.+82     	; 0x15c2 <pow+0x6e>
    1570:	68 94       	set
    1572:	90 38       	cpi	r25, 0x80	; 128
    1574:	81 05       	cpc	r24, r1
    1576:	61 f0       	breq	.+24     	; 0x1590 <pow+0x3c>
    1578:	80 38       	cpi	r24, 0x80	; 128
    157a:	bf ef       	ldi	r27, 0xFF	; 255
    157c:	9b 07       	cpc	r25, r27
    157e:	41 f0       	breq	.+16     	; 0x1590 <pow+0x3c>
    1580:	99 23       	and	r25, r25
    1582:	42 f5       	brpl	.+80     	; 0x15d4 <pow+0x80>
    1584:	ff 3f       	cpi	r31, 0xFF	; 255
    1586:	e1 05       	cpc	r30, r1
    1588:	31 05       	cpc	r19, r1
    158a:	21 05       	cpc	r18, r1
    158c:	11 f1       	breq	.+68     	; 0x15d2 <pow+0x7e>
    158e:	e8 94       	clt
    1590:	08 94       	sec
    1592:	e7 95       	ror	r30
    1594:	d9 01       	movw	r26, r18
    1596:	aa 23       	and	r26, r26
    1598:	29 f4       	brne	.+10     	; 0x15a4 <pow+0x50>
    159a:	ab 2f       	mov	r26, r27
    159c:	be 2f       	mov	r27, r30
    159e:	f8 5f       	subi	r31, 0xF8	; 248
    15a0:	d0 f3       	brcs	.-12     	; 0x1596 <pow+0x42>
    15a2:	10 c0       	rjmp	.+32     	; 0x15c4 <pow+0x70>
    15a4:	ff 5f       	subi	r31, 0xFF	; 255
    15a6:	70 f4       	brcc	.+28     	; 0x15c4 <pow+0x70>
    15a8:	a6 95       	lsr	r26
    15aa:	e0 f7       	brcc	.-8      	; 0x15a4 <pow+0x50>
    15ac:	f7 39       	cpi	r31, 0x97	; 151
    15ae:	50 f0       	brcs	.+20     	; 0x15c4 <pow+0x70>
    15b0:	19 f0       	breq	.+6      	; 0x15b8 <pow+0x64>
    15b2:	ff 3a       	cpi	r31, 0xAF	; 175
    15b4:	38 f4       	brcc	.+14     	; 0x15c4 <pow+0x70>
    15b6:	9f 77       	andi	r25, 0x7F	; 127
    15b8:	9f 93       	push	r25
    15ba:	0c d0       	rcall	.+24     	; 0x15d4 <pow+0x80>
    15bc:	0f 90       	pop	r0
    15be:	07 fc       	sbrc	r0, 7
    15c0:	90 58       	subi	r25, 0x80	; 128
    15c2:	08 95       	ret
    15c4:	3e f0       	brts	.+14     	; 0x15d4 <pow+0x80>
    15c6:	18 cf       	rjmp	.-464    	; 0x13f8 <__fp_nan>
    15c8:	60 e0       	ldi	r22, 0x00	; 0
    15ca:	70 e0       	ldi	r23, 0x00	; 0
    15cc:	80 e8       	ldi	r24, 0x80	; 128
    15ce:	9f e3       	ldi	r25, 0x3F	; 63
    15d0:	08 95       	ret
    15d2:	4f e7       	ldi	r20, 0x7F	; 127
    15d4:	9f 77       	andi	r25, 0x7F	; 127
    15d6:	5f 93       	push	r21
    15d8:	4f 93       	push	r20
    15da:	3f 93       	push	r19
    15dc:	2f 93       	push	r18
    15de:	9e d0       	rcall	.+316    	; 0x171c <log>
    15e0:	2f 91       	pop	r18
    15e2:	3f 91       	pop	r19
    15e4:	4f 91       	pop	r20
    15e6:	5f 91       	pop	r21
    15e8:	52 df       	rcall	.-348    	; 0x148e <__mulsf3>
    15ea:	05 c0       	rjmp	.+10     	; 0x15f6 <exp>
    15ec:	19 f4       	brne	.+6      	; 0x15f4 <pow+0xa0>
    15ee:	0e f0       	brts	.+2      	; 0x15f2 <pow+0x9e>
    15f0:	fd ce       	rjmp	.-518    	; 0x13ec <__fp_inf>
    15f2:	46 cf       	rjmp	.-372    	; 0x1480 <__fp_zero>
    15f4:	01 cf       	rjmp	.-510    	; 0x13f8 <__fp_nan>

000015f6 <exp>:
    15f6:	2a df       	rcall	.-428    	; 0x144c <__fp_splitA>
    15f8:	c8 f3       	brcs	.-14     	; 0x15ec <pow+0x98>
    15fa:	96 38       	cpi	r25, 0x86	; 134
    15fc:	c0 f7       	brcc	.-16     	; 0x15ee <pow+0x9a>
    15fe:	07 f8       	bld	r0, 7
    1600:	0f 92       	push	r0
    1602:	e8 94       	clt
    1604:	2b e3       	ldi	r18, 0x3B	; 59
    1606:	3a ea       	ldi	r19, 0xAA	; 170
    1608:	48 eb       	ldi	r20, 0xB8	; 184
    160a:	5f e7       	ldi	r21, 0x7F	; 127
    160c:	4e df       	rcall	.-356    	; 0x14aa <__mulsf3_pse>
    160e:	0f 92       	push	r0
    1610:	0f 92       	push	r0
    1612:	0f 92       	push	r0
    1614:	4d b7       	in	r20, 0x3d	; 61
    1616:	5e b7       	in	r21, 0x3e	; 62
    1618:	0f 92       	push	r0
    161a:	c0 d0       	rcall	.+384    	; 0x179c <modf>
    161c:	e6 e8       	ldi	r30, 0x86	; 134
    161e:	f1 e0       	ldi	r31, 0x01	; 1
    1620:	16 d0       	rcall	.+44     	; 0x164e <__fp_powser>
    1622:	4f 91       	pop	r20
    1624:	5f 91       	pop	r21
    1626:	ef 91       	pop	r30
    1628:	ff 91       	pop	r31
    162a:	e5 95       	asr	r30
    162c:	ee 1f       	adc	r30, r30
    162e:	ff 1f       	adc	r31, r31
    1630:	49 f0       	breq	.+18     	; 0x1644 <exp+0x4e>
    1632:	fe 57       	subi	r31, 0x7E	; 126
    1634:	e0 68       	ori	r30, 0x80	; 128
    1636:	44 27       	eor	r20, r20
    1638:	ee 0f       	add	r30, r30
    163a:	44 1f       	adc	r20, r20
    163c:	fa 95       	dec	r31
    163e:	e1 f7       	brne	.-8      	; 0x1638 <exp+0x42>
    1640:	41 95       	neg	r20
    1642:	55 0b       	sbc	r21, r21
    1644:	32 d0       	rcall	.+100    	; 0x16aa <ldexp>
    1646:	0f 90       	pop	r0
    1648:	07 fe       	sbrs	r0, 7
    164a:	26 c0       	rjmp	.+76     	; 0x1698 <inverse>
    164c:	08 95       	ret

0000164e <__fp_powser>:
    164e:	df 93       	push	r29
    1650:	cf 93       	push	r28
    1652:	1f 93       	push	r17
    1654:	0f 93       	push	r16
    1656:	ff 92       	push	r15
    1658:	ef 92       	push	r14
    165a:	df 92       	push	r13
    165c:	7b 01       	movw	r14, r22
    165e:	8c 01       	movw	r16, r24
    1660:	68 94       	set
    1662:	05 c0       	rjmp	.+10     	; 0x166e <__fp_powser+0x20>
    1664:	da 2e       	mov	r13, r26
    1666:	ef 01       	movw	r28, r30
    1668:	1e df       	rcall	.-452    	; 0x14a6 <__mulsf3x>
    166a:	fe 01       	movw	r30, r28
    166c:	e8 94       	clt
    166e:	a5 91       	lpm	r26, Z+
    1670:	25 91       	lpm	r18, Z+
    1672:	35 91       	lpm	r19, Z+
    1674:	45 91       	lpm	r20, Z+
    1676:	55 91       	lpm	r21, Z+
    1678:	ae f3       	brts	.-22     	; 0x1664 <__fp_powser+0x16>
    167a:	ef 01       	movw	r28, r30
    167c:	8e dd       	rcall	.-1252   	; 0x119a <__addsf3x>
    167e:	fe 01       	movw	r30, r28
    1680:	97 01       	movw	r18, r14
    1682:	a8 01       	movw	r20, r16
    1684:	da 94       	dec	r13
    1686:	79 f7       	brne	.-34     	; 0x1666 <__fp_powser+0x18>
    1688:	df 90       	pop	r13
    168a:	ef 90       	pop	r14
    168c:	ff 90       	pop	r15
    168e:	0f 91       	pop	r16
    1690:	1f 91       	pop	r17
    1692:	cf 91       	pop	r28
    1694:	df 91       	pop	r29
    1696:	08 95       	ret

00001698 <inverse>:
    1698:	9b 01       	movw	r18, r22
    169a:	ac 01       	movw	r20, r24
    169c:	60 e0       	ldi	r22, 0x00	; 0
    169e:	70 e0       	ldi	r23, 0x00	; 0
    16a0:	80 e8       	ldi	r24, 0x80	; 128
    16a2:	9f e3       	ldi	r25, 0x3F	; 63
    16a4:	cd cd       	rjmp	.-1126   	; 0x1240 <__divsf3>
    16a6:	a2 ce       	rjmp	.-700    	; 0x13ec <__fp_inf>
    16a8:	ac c0       	rjmp	.+344    	; 0x1802 <__fp_mpack>

000016aa <ldexp>:
    16aa:	d0 de       	rcall	.-608    	; 0x144c <__fp_splitA>
    16ac:	e8 f3       	brcs	.-6      	; 0x16a8 <inverse+0x10>
    16ae:	99 23       	and	r25, r25
    16b0:	d9 f3       	breq	.-10     	; 0x16a8 <inverse+0x10>
    16b2:	94 0f       	add	r25, r20
    16b4:	51 1d       	adc	r21, r1
    16b6:	bb f3       	brvs	.-18     	; 0x16a6 <inverse+0xe>
    16b8:	91 50       	subi	r25, 0x01	; 1
    16ba:	50 40       	sbci	r21, 0x00	; 0
    16bc:	94 f0       	brlt	.+36     	; 0x16e2 <ldexp+0x38>
    16be:	59 f0       	breq	.+22     	; 0x16d6 <ldexp+0x2c>
    16c0:	88 23       	and	r24, r24
    16c2:	32 f0       	brmi	.+12     	; 0x16d0 <ldexp+0x26>
    16c4:	66 0f       	add	r22, r22
    16c6:	77 1f       	adc	r23, r23
    16c8:	88 1f       	adc	r24, r24
    16ca:	91 50       	subi	r25, 0x01	; 1
    16cc:	50 40       	sbci	r21, 0x00	; 0
    16ce:	c1 f7       	brne	.-16     	; 0x16c0 <ldexp+0x16>
    16d0:	9e 3f       	cpi	r25, 0xFE	; 254
    16d2:	51 05       	cpc	r21, r1
    16d4:	44 f7       	brge	.-48     	; 0x16a6 <inverse+0xe>
    16d6:	88 0f       	add	r24, r24
    16d8:	91 1d       	adc	r25, r1
    16da:	96 95       	lsr	r25
    16dc:	87 95       	ror	r24
    16de:	97 f9       	bld	r25, 7
    16e0:	08 95       	ret
    16e2:	5f 3f       	cpi	r21, 0xFF	; 255
    16e4:	ac f0       	brlt	.+42     	; 0x1710 <ldexp+0x66>
    16e6:	98 3e       	cpi	r25, 0xE8	; 232
    16e8:	9c f0       	brlt	.+38     	; 0x1710 <ldexp+0x66>
    16ea:	bb 27       	eor	r27, r27
    16ec:	86 95       	lsr	r24
    16ee:	77 95       	ror	r23
    16f0:	67 95       	ror	r22
    16f2:	b7 95       	ror	r27
    16f4:	08 f4       	brcc	.+2      	; 0x16f8 <ldexp+0x4e>
    16f6:	b1 60       	ori	r27, 0x01	; 1
    16f8:	93 95       	inc	r25
    16fa:	c1 f7       	brne	.-16     	; 0x16ec <ldexp+0x42>
    16fc:	bb 0f       	add	r27, r27
    16fe:	58 f7       	brcc	.-42     	; 0x16d6 <ldexp+0x2c>
    1700:	11 f4       	brne	.+4      	; 0x1706 <ldexp+0x5c>
    1702:	60 ff       	sbrs	r22, 0
    1704:	e8 cf       	rjmp	.-48     	; 0x16d6 <ldexp+0x2c>
    1706:	6f 5f       	subi	r22, 0xFF	; 255
    1708:	7f 4f       	sbci	r23, 0xFF	; 255
    170a:	8f 4f       	sbci	r24, 0xFF	; 255
    170c:	9f 4f       	sbci	r25, 0xFF	; 255
    170e:	e3 cf       	rjmp	.-58     	; 0x16d6 <ldexp+0x2c>
    1710:	b8 ce       	rjmp	.-656    	; 0x1482 <__fp_szero>
    1712:	0e f0       	brts	.+2      	; 0x1716 <ldexp+0x6c>
    1714:	76 c0       	rjmp	.+236    	; 0x1802 <__fp_mpack>
    1716:	70 ce       	rjmp	.-800    	; 0x13f8 <__fp_nan>
    1718:	68 94       	set
    171a:	68 ce       	rjmp	.-816    	; 0x13ec <__fp_inf>

0000171c <log>:
    171c:	97 de       	rcall	.-722    	; 0x144c <__fp_splitA>
    171e:	c8 f3       	brcs	.-14     	; 0x1712 <ldexp+0x68>
    1720:	99 23       	and	r25, r25
    1722:	d1 f3       	breq	.-12     	; 0x1718 <ldexp+0x6e>
    1724:	c6 f3       	brts	.-16     	; 0x1716 <ldexp+0x6c>
    1726:	df 93       	push	r29
    1728:	cf 93       	push	r28
    172a:	1f 93       	push	r17
    172c:	0f 93       	push	r16
    172e:	ff 92       	push	r15
    1730:	c9 2f       	mov	r28, r25
    1732:	dd 27       	eor	r29, r29
    1734:	88 23       	and	r24, r24
    1736:	2a f0       	brmi	.+10     	; 0x1742 <log+0x26>
    1738:	21 97       	sbiw	r28, 0x01	; 1
    173a:	66 0f       	add	r22, r22
    173c:	77 1f       	adc	r23, r23
    173e:	88 1f       	adc	r24, r24
    1740:	da f7       	brpl	.-10     	; 0x1738 <log+0x1c>
    1742:	20 e0       	ldi	r18, 0x00	; 0
    1744:	30 e0       	ldi	r19, 0x00	; 0
    1746:	40 e8       	ldi	r20, 0x80	; 128
    1748:	5f eb       	ldi	r21, 0xBF	; 191
    174a:	9f e3       	ldi	r25, 0x3F	; 63
    174c:	88 39       	cpi	r24, 0x98	; 152
    174e:	20 f0       	brcs	.+8      	; 0x1758 <log+0x3c>
    1750:	80 3e       	cpi	r24, 0xE0	; 224
    1752:	30 f0       	brcs	.+12     	; 0x1760 <log+0x44>
    1754:	21 96       	adiw	r28, 0x01	; 1
    1756:	8f 77       	andi	r24, 0x7F	; 127
    1758:	0f dd       	rcall	.-1506   	; 0x1178 <__addsf3>
    175a:	ee ea       	ldi	r30, 0xAE	; 174
    175c:	f1 e0       	ldi	r31, 0x01	; 1
    175e:	03 c0       	rjmp	.+6      	; 0x1766 <log+0x4a>
    1760:	0b dd       	rcall	.-1514   	; 0x1178 <__addsf3>
    1762:	eb ed       	ldi	r30, 0xDB	; 219
    1764:	f1 e0       	ldi	r31, 0x01	; 1
    1766:	73 df       	rcall	.-282    	; 0x164e <__fp_powser>
    1768:	8b 01       	movw	r16, r22
    176a:	be 01       	movw	r22, r28
    176c:	ec 01       	movw	r28, r24
    176e:	fb 2e       	mov	r15, r27
    1770:	6f 57       	subi	r22, 0x7F	; 127
    1772:	71 09       	sbc	r23, r1
    1774:	75 95       	asr	r23
    1776:	77 1f       	adc	r23, r23
    1778:	88 0b       	sbc	r24, r24
    177a:	99 0b       	sbc	r25, r25
    177c:	fc dd       	rcall	.-1032   	; 0x1376 <__floatsisf>
    177e:	28 e1       	ldi	r18, 0x18	; 24
    1780:	32 e7       	ldi	r19, 0x72	; 114
    1782:	41 e3       	ldi	r20, 0x31	; 49
    1784:	5f e3       	ldi	r21, 0x3F	; 63
    1786:	8f de       	rcall	.-738    	; 0x14a6 <__mulsf3x>
    1788:	af 2d       	mov	r26, r15
    178a:	98 01       	movw	r18, r16
    178c:	ae 01       	movw	r20, r28
    178e:	ff 90       	pop	r15
    1790:	0f 91       	pop	r16
    1792:	1f 91       	pop	r17
    1794:	cf 91       	pop	r28
    1796:	df 91       	pop	r29
    1798:	00 dd       	rcall	.-1536   	; 0x119a <__addsf3x>
    179a:	3f ce       	rjmp	.-898    	; 0x141a <__fp_round>

0000179c <modf>:
    179c:	fa 01       	movw	r30, r20
    179e:	dc 01       	movw	r26, r24
    17a0:	aa 0f       	add	r26, r26
    17a2:	bb 1f       	adc	r27, r27
    17a4:	9b 01       	movw	r18, r22
    17a6:	ac 01       	movw	r20, r24
    17a8:	bf 57       	subi	r27, 0x7F	; 127
    17aa:	28 f4       	brcc	.+10     	; 0x17b6 <modf+0x1a>
    17ac:	22 27       	eor	r18, r18
    17ae:	33 27       	eor	r19, r19
    17b0:	44 27       	eor	r20, r20
    17b2:	50 78       	andi	r21, 0x80	; 128
    17b4:	1f c0       	rjmp	.+62     	; 0x17f4 <modf+0x58>
    17b6:	b7 51       	subi	r27, 0x17	; 23
    17b8:	88 f4       	brcc	.+34     	; 0x17dc <modf+0x40>
    17ba:	ab 2f       	mov	r26, r27
    17bc:	00 24       	eor	r0, r0
    17be:	46 95       	lsr	r20
    17c0:	37 95       	ror	r19
    17c2:	27 95       	ror	r18
    17c4:	01 1c       	adc	r0, r1
    17c6:	a3 95       	inc	r26
    17c8:	d2 f3       	brmi	.-12     	; 0x17be <modf+0x22>
    17ca:	00 20       	and	r0, r0
    17cc:	69 f0       	breq	.+26     	; 0x17e8 <modf+0x4c>
    17ce:	22 0f       	add	r18, r18
    17d0:	33 1f       	adc	r19, r19
    17d2:	44 1f       	adc	r20, r20
    17d4:	b3 95       	inc	r27
    17d6:	da f3       	brmi	.-10     	; 0x17ce <modf+0x32>
    17d8:	0d d0       	rcall	.+26     	; 0x17f4 <modf+0x58>
    17da:	cd cc       	rjmp	.-1638   	; 0x1176 <__subsf3>
    17dc:	61 30       	cpi	r22, 0x01	; 1
    17de:	71 05       	cpc	r23, r1
    17e0:	a0 e8       	ldi	r26, 0x80	; 128
    17e2:	8a 07       	cpc	r24, r26
    17e4:	b9 46       	sbci	r27, 0x69	; 105
    17e6:	30 f4       	brcc	.+12     	; 0x17f4 <modf+0x58>
    17e8:	9b 01       	movw	r18, r22
    17ea:	ac 01       	movw	r20, r24
    17ec:	66 27       	eor	r22, r22
    17ee:	77 27       	eor	r23, r23
    17f0:	88 27       	eor	r24, r24
    17f2:	90 78       	andi	r25, 0x80	; 128
    17f4:	30 96       	adiw	r30, 0x00	; 0
    17f6:	21 f0       	breq	.+8      	; 0x1800 <modf+0x64>
    17f8:	20 83       	st	Z, r18
    17fa:	31 83       	std	Z+1, r19	; 0x01
    17fc:	42 83       	std	Z+2, r20	; 0x02
    17fe:	53 83       	std	Z+3, r21	; 0x03
    1800:	08 95       	ret

00001802 <__fp_mpack>:
    1802:	9f 3f       	cpi	r25, 0xFF	; 255
    1804:	31 f0       	breq	.+12     	; 0x1812 <__fp_mpack_finite+0xc>

00001806 <__fp_mpack_finite>:
    1806:	91 50       	subi	r25, 0x01	; 1
    1808:	20 f4       	brcc	.+8      	; 0x1812 <__fp_mpack_finite+0xc>
    180a:	87 95       	ror	r24
    180c:	77 95       	ror	r23
    180e:	67 95       	ror	r22
    1810:	b7 95       	ror	r27
    1812:	88 0f       	add	r24, r24
    1814:	91 1d       	adc	r25, r1
    1816:	96 95       	lsr	r25
    1818:	87 95       	ror	r24
    181a:	97 f9       	bld	r25, 7
    181c:	08 95       	ret

0000181e <vfprintf>:
    181e:	2f 92       	push	r2
    1820:	3f 92       	push	r3
    1822:	4f 92       	push	r4
    1824:	5f 92       	push	r5
    1826:	6f 92       	push	r6
    1828:	7f 92       	push	r7
    182a:	8f 92       	push	r8
    182c:	9f 92       	push	r9
    182e:	af 92       	push	r10
    1830:	bf 92       	push	r11
    1832:	cf 92       	push	r12
    1834:	df 92       	push	r13
    1836:	ef 92       	push	r14
    1838:	ff 92       	push	r15
    183a:	0f 93       	push	r16
    183c:	1f 93       	push	r17
    183e:	cf 93       	push	r28
    1840:	df 93       	push	r29
    1842:	cd b7       	in	r28, 0x3d	; 61
    1844:	de b7       	in	r29, 0x3e	; 62
    1846:	63 97       	sbiw	r28, 0x13	; 19
    1848:	0f b6       	in	r0, 0x3f	; 63
    184a:	f8 94       	cli
    184c:	de bf       	out	0x3e, r29	; 62
    184e:	0f be       	out	0x3f, r0	; 63
    1850:	cd bf       	out	0x3d, r28	; 61
    1852:	7c 01       	movw	r14, r24
    1854:	1b 01       	movw	r2, r22
    1856:	6a 01       	movw	r12, r20
    1858:	fc 01       	movw	r30, r24
    185a:	17 82       	std	Z+7, r1	; 0x07
    185c:	16 82       	std	Z+6, r1	; 0x06
    185e:	83 81       	ldd	r24, Z+3	; 0x03
    1860:	81 ff       	sbrs	r24, 1
    1862:	49 c3       	rjmp	.+1682   	; 0x1ef6 <vfprintf+0x6d8>
    1864:	be 01       	movw	r22, r28
    1866:	6f 5f       	subi	r22, 0xFF	; 255
    1868:	7f 4f       	sbci	r23, 0xFF	; 255
    186a:	4b 01       	movw	r8, r22
    186c:	f7 01       	movw	r30, r14
    186e:	93 81       	ldd	r25, Z+3	; 0x03
    1870:	f1 01       	movw	r30, r2
    1872:	93 fd       	sbrc	r25, 3
    1874:	85 91       	lpm	r24, Z+
    1876:	93 ff       	sbrs	r25, 3
    1878:	81 91       	ld	r24, Z+
    187a:	1f 01       	movw	r2, r30
    187c:	88 23       	and	r24, r24
    187e:	09 f4       	brne	.+2      	; 0x1882 <vfprintf+0x64>
    1880:	36 c3       	rjmp	.+1644   	; 0x1eee <vfprintf+0x6d0>
    1882:	85 32       	cpi	r24, 0x25	; 37
    1884:	39 f4       	brne	.+14     	; 0x1894 <vfprintf+0x76>
    1886:	93 fd       	sbrc	r25, 3
    1888:	85 91       	lpm	r24, Z+
    188a:	93 ff       	sbrs	r25, 3
    188c:	81 91       	ld	r24, Z+
    188e:	1f 01       	movw	r2, r30
    1890:	85 32       	cpi	r24, 0x25	; 37
    1892:	31 f4       	brne	.+12     	; 0x18a0 <vfprintf+0x82>
    1894:	b7 01       	movw	r22, r14
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	96 d4       	rcall	.+2348   	; 0x21c6 <fputc>
    189a:	56 01       	movw	r10, r12
    189c:	65 01       	movw	r12, r10
    189e:	e6 cf       	rjmp	.-52     	; 0x186c <vfprintf+0x4e>
    18a0:	10 e0       	ldi	r17, 0x00	; 0
    18a2:	51 2c       	mov	r5, r1
    18a4:	20 e0       	ldi	r18, 0x00	; 0
    18a6:	20 32       	cpi	r18, 0x20	; 32
    18a8:	a0 f4       	brcc	.+40     	; 0x18d2 <vfprintf+0xb4>
    18aa:	8b 32       	cpi	r24, 0x2B	; 43
    18ac:	69 f0       	breq	.+26     	; 0x18c8 <vfprintf+0xaa>
    18ae:	30 f4       	brcc	.+12     	; 0x18bc <vfprintf+0x9e>
    18b0:	80 32       	cpi	r24, 0x20	; 32
    18b2:	59 f0       	breq	.+22     	; 0x18ca <vfprintf+0xac>
    18b4:	83 32       	cpi	r24, 0x23	; 35
    18b6:	69 f4       	brne	.+26     	; 0x18d2 <vfprintf+0xb4>
    18b8:	20 61       	ori	r18, 0x10	; 16
    18ba:	2c c0       	rjmp	.+88     	; 0x1914 <vfprintf+0xf6>
    18bc:	8d 32       	cpi	r24, 0x2D	; 45
    18be:	39 f0       	breq	.+14     	; 0x18ce <vfprintf+0xb0>
    18c0:	80 33       	cpi	r24, 0x30	; 48
    18c2:	39 f4       	brne	.+14     	; 0x18d2 <vfprintf+0xb4>
    18c4:	21 60       	ori	r18, 0x01	; 1
    18c6:	26 c0       	rjmp	.+76     	; 0x1914 <vfprintf+0xf6>
    18c8:	22 60       	ori	r18, 0x02	; 2
    18ca:	24 60       	ori	r18, 0x04	; 4
    18cc:	23 c0       	rjmp	.+70     	; 0x1914 <vfprintf+0xf6>
    18ce:	28 60       	ori	r18, 0x08	; 8
    18d0:	21 c0       	rjmp	.+66     	; 0x1914 <vfprintf+0xf6>
    18d2:	27 fd       	sbrc	r18, 7
    18d4:	27 c0       	rjmp	.+78     	; 0x1924 <vfprintf+0x106>
    18d6:	30 ed       	ldi	r19, 0xD0	; 208
    18d8:	38 0f       	add	r19, r24
    18da:	3a 30       	cpi	r19, 0x0A	; 10
    18dc:	78 f4       	brcc	.+30     	; 0x18fc <vfprintf+0xde>
    18de:	26 ff       	sbrs	r18, 6
    18e0:	06 c0       	rjmp	.+12     	; 0x18ee <vfprintf+0xd0>
    18e2:	fa e0       	ldi	r31, 0x0A	; 10
    18e4:	1f 9f       	mul	r17, r31
    18e6:	30 0d       	add	r19, r0
    18e8:	11 24       	eor	r1, r1
    18ea:	13 2f       	mov	r17, r19
    18ec:	13 c0       	rjmp	.+38     	; 0x1914 <vfprintf+0xf6>
    18ee:	6a e0       	ldi	r22, 0x0A	; 10
    18f0:	56 9e       	mul	r5, r22
    18f2:	30 0d       	add	r19, r0
    18f4:	11 24       	eor	r1, r1
    18f6:	53 2e       	mov	r5, r19
    18f8:	20 62       	ori	r18, 0x20	; 32
    18fa:	0c c0       	rjmp	.+24     	; 0x1914 <vfprintf+0xf6>
    18fc:	8e 32       	cpi	r24, 0x2E	; 46
    18fe:	21 f4       	brne	.+8      	; 0x1908 <vfprintf+0xea>
    1900:	26 fd       	sbrc	r18, 6
    1902:	f5 c2       	rjmp	.+1514   	; 0x1eee <vfprintf+0x6d0>
    1904:	20 64       	ori	r18, 0x40	; 64
    1906:	06 c0       	rjmp	.+12     	; 0x1914 <vfprintf+0xf6>
    1908:	8c 36       	cpi	r24, 0x6C	; 108
    190a:	11 f4       	brne	.+4      	; 0x1910 <vfprintf+0xf2>
    190c:	20 68       	ori	r18, 0x80	; 128
    190e:	02 c0       	rjmp	.+4      	; 0x1914 <vfprintf+0xf6>
    1910:	88 36       	cpi	r24, 0x68	; 104
    1912:	41 f4       	brne	.+16     	; 0x1924 <vfprintf+0x106>
    1914:	f1 01       	movw	r30, r2
    1916:	93 fd       	sbrc	r25, 3
    1918:	85 91       	lpm	r24, Z+
    191a:	93 ff       	sbrs	r25, 3
    191c:	81 91       	ld	r24, Z+
    191e:	1f 01       	movw	r2, r30
    1920:	81 11       	cpse	r24, r1
    1922:	c1 cf       	rjmp	.-126    	; 0x18a6 <vfprintf+0x88>
    1924:	9b eb       	ldi	r25, 0xBB	; 187
    1926:	98 0f       	add	r25, r24
    1928:	93 30       	cpi	r25, 0x03	; 3
    192a:	18 f4       	brcc	.+6      	; 0x1932 <vfprintf+0x114>
    192c:	20 61       	ori	r18, 0x10	; 16
    192e:	80 5e       	subi	r24, 0xE0	; 224
    1930:	06 c0       	rjmp	.+12     	; 0x193e <vfprintf+0x120>
    1932:	9b e9       	ldi	r25, 0x9B	; 155
    1934:	98 0f       	add	r25, r24
    1936:	93 30       	cpi	r25, 0x03	; 3
    1938:	08 f0       	brcs	.+2      	; 0x193c <vfprintf+0x11e>
    193a:	9a c1       	rjmp	.+820    	; 0x1c70 <vfprintf+0x452>
    193c:	2f 7e       	andi	r18, 0xEF	; 239
    193e:	26 ff       	sbrs	r18, 6
    1940:	16 e0       	ldi	r17, 0x06	; 6
    1942:	2f 73       	andi	r18, 0x3F	; 63
    1944:	72 2e       	mov	r7, r18
    1946:	85 36       	cpi	r24, 0x65	; 101
    1948:	21 f4       	brne	.+8      	; 0x1952 <vfprintf+0x134>
    194a:	f2 2f       	mov	r31, r18
    194c:	f0 64       	ori	r31, 0x40	; 64
    194e:	7f 2e       	mov	r7, r31
    1950:	08 c0       	rjmp	.+16     	; 0x1962 <vfprintf+0x144>
    1952:	86 36       	cpi	r24, 0x66	; 102
    1954:	21 f4       	brne	.+8      	; 0x195e <vfprintf+0x140>
    1956:	62 2f       	mov	r22, r18
    1958:	60 68       	ori	r22, 0x80	; 128
    195a:	76 2e       	mov	r7, r22
    195c:	02 c0       	rjmp	.+4      	; 0x1962 <vfprintf+0x144>
    195e:	11 11       	cpse	r17, r1
    1960:	11 50       	subi	r17, 0x01	; 1
    1962:	77 fe       	sbrs	r7, 7
    1964:	07 c0       	rjmp	.+14     	; 0x1974 <vfprintf+0x156>
    1966:	1c 33       	cpi	r17, 0x3C	; 60
    1968:	48 f4       	brcc	.+18     	; 0x197c <vfprintf+0x15e>
    196a:	44 24       	eor	r4, r4
    196c:	43 94       	inc	r4
    196e:	41 0e       	add	r4, r17
    1970:	27 e0       	ldi	r18, 0x07	; 7
    1972:	0b c0       	rjmp	.+22     	; 0x198a <vfprintf+0x16c>
    1974:	18 30       	cpi	r17, 0x08	; 8
    1976:	30 f4       	brcc	.+12     	; 0x1984 <vfprintf+0x166>
    1978:	21 2f       	mov	r18, r17
    197a:	06 c0       	rjmp	.+12     	; 0x1988 <vfprintf+0x16a>
    197c:	27 e0       	ldi	r18, 0x07	; 7
    197e:	4c e3       	ldi	r20, 0x3C	; 60
    1980:	44 2e       	mov	r4, r20
    1982:	03 c0       	rjmp	.+6      	; 0x198a <vfprintf+0x16c>
    1984:	27 e0       	ldi	r18, 0x07	; 7
    1986:	17 e0       	ldi	r17, 0x07	; 7
    1988:	41 2c       	mov	r4, r1
    198a:	56 01       	movw	r10, r12
    198c:	74 e0       	ldi	r23, 0x04	; 4
    198e:	a7 0e       	add	r10, r23
    1990:	b1 1c       	adc	r11, r1
    1992:	f6 01       	movw	r30, r12
    1994:	60 81       	ld	r22, Z
    1996:	71 81       	ldd	r23, Z+1	; 0x01
    1998:	82 81       	ldd	r24, Z+2	; 0x02
    199a:	93 81       	ldd	r25, Z+3	; 0x03
    199c:	04 2d       	mov	r16, r4
    199e:	a4 01       	movw	r20, r8
    19a0:	da d2       	rcall	.+1460   	; 0x1f56 <__ftoa_engine>
    19a2:	6c 01       	movw	r12, r24
    19a4:	09 81       	ldd	r16, Y+1	; 0x01
    19a6:	00 ff       	sbrs	r16, 0
    19a8:	02 c0       	rjmp	.+4      	; 0x19ae <vfprintf+0x190>
    19aa:	03 ff       	sbrs	r16, 3
    19ac:	06 c0       	rjmp	.+12     	; 0x19ba <vfprintf+0x19c>
    19ae:	71 fc       	sbrc	r7, 1
    19b0:	07 c0       	rjmp	.+14     	; 0x19c0 <vfprintf+0x1a2>
    19b2:	72 fc       	sbrc	r7, 2
    19b4:	08 c0       	rjmp	.+16     	; 0x19c6 <vfprintf+0x1a8>
    19b6:	61 2c       	mov	r6, r1
    19b8:	08 c0       	rjmp	.+16     	; 0x19ca <vfprintf+0x1ac>
    19ba:	3d e2       	ldi	r19, 0x2D	; 45
    19bc:	63 2e       	mov	r6, r19
    19be:	05 c0       	rjmp	.+10     	; 0x19ca <vfprintf+0x1ac>
    19c0:	2b e2       	ldi	r18, 0x2B	; 43
    19c2:	62 2e       	mov	r6, r18
    19c4:	02 c0       	rjmp	.+4      	; 0x19ca <vfprintf+0x1ac>
    19c6:	90 e2       	ldi	r25, 0x20	; 32
    19c8:	69 2e       	mov	r6, r25
    19ca:	80 2f       	mov	r24, r16
    19cc:	8c 70       	andi	r24, 0x0C	; 12
    19ce:	81 f1       	breq	.+96     	; 0x1a30 <vfprintf+0x212>
    19d0:	66 20       	and	r6, r6
    19d2:	11 f0       	breq	.+4      	; 0x19d8 <vfprintf+0x1ba>
    19d4:	84 e0       	ldi	r24, 0x04	; 4
    19d6:	01 c0       	rjmp	.+2      	; 0x19da <vfprintf+0x1bc>
    19d8:	83 e0       	ldi	r24, 0x03	; 3
    19da:	85 15       	cp	r24, r5
    19dc:	10 f0       	brcs	.+4      	; 0x19e2 <vfprintf+0x1c4>
    19de:	51 2c       	mov	r5, r1
    19e0:	0a c0       	rjmp	.+20     	; 0x19f6 <vfprintf+0x1d8>
    19e2:	58 1a       	sub	r5, r24
    19e4:	73 fc       	sbrc	r7, 3
    19e6:	07 c0       	rjmp	.+14     	; 0x19f6 <vfprintf+0x1d8>
    19e8:	b7 01       	movw	r22, r14
    19ea:	80 e2       	ldi	r24, 0x20	; 32
    19ec:	90 e0       	ldi	r25, 0x00	; 0
    19ee:	eb d3       	rcall	.+2006   	; 0x21c6 <fputc>
    19f0:	5a 94       	dec	r5
    19f2:	d1 f7       	brne	.-12     	; 0x19e8 <vfprintf+0x1ca>
    19f4:	f4 cf       	rjmp	.-24     	; 0x19de <vfprintf+0x1c0>
    19f6:	66 20       	and	r6, r6
    19f8:	21 f0       	breq	.+8      	; 0x1a02 <vfprintf+0x1e4>
    19fa:	b7 01       	movw	r22, r14
    19fc:	86 2d       	mov	r24, r6
    19fe:	90 e0       	ldi	r25, 0x00	; 0
    1a00:	e2 d3       	rcall	.+1988   	; 0x21c6 <fputc>
    1a02:	03 fd       	sbrc	r16, 3
    1a04:	03 c0       	rjmp	.+6      	; 0x1a0c <vfprintf+0x1ee>
    1a06:	0c e0       	ldi	r16, 0x0C	; 12
    1a08:	12 e0       	ldi	r17, 0x02	; 2
    1a0a:	02 c0       	rjmp	.+4      	; 0x1a10 <vfprintf+0x1f2>
    1a0c:	08 e0       	ldi	r16, 0x08	; 8
    1a0e:	12 e0       	ldi	r17, 0x02	; 2
    1a10:	f7 2d       	mov	r31, r7
    1a12:	f0 71       	andi	r31, 0x10	; 16
    1a14:	7f 2e       	mov	r7, r31
    1a16:	f8 01       	movw	r30, r16
    1a18:	84 91       	lpm	r24, Z
    1a1a:	88 23       	and	r24, r24
    1a1c:	09 f4       	brne	.+2      	; 0x1a20 <vfprintf+0x202>
    1a1e:	5e c2       	rjmp	.+1212   	; 0x1edc <vfprintf+0x6be>
    1a20:	71 10       	cpse	r7, r1
    1a22:	80 52       	subi	r24, 0x20	; 32
    1a24:	b7 01       	movw	r22, r14
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	ce d3       	rcall	.+1948   	; 0x21c6 <fputc>
    1a2a:	0f 5f       	subi	r16, 0xFF	; 255
    1a2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2e:	f3 cf       	rjmp	.-26     	; 0x1a16 <vfprintf+0x1f8>
    1a30:	77 fe       	sbrs	r7, 7
    1a32:	0f c0       	rjmp	.+30     	; 0x1a52 <vfprintf+0x234>
    1a34:	4c 0c       	add	r4, r12
    1a36:	04 ff       	sbrs	r16, 4
    1a38:	04 c0       	rjmp	.+8      	; 0x1a42 <vfprintf+0x224>
    1a3a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a3c:	81 33       	cpi	r24, 0x31	; 49
    1a3e:	09 f4       	brne	.+2      	; 0x1a42 <vfprintf+0x224>
    1a40:	4a 94       	dec	r4
    1a42:	14 14       	cp	r1, r4
    1a44:	74 f5       	brge	.+92     	; 0x1aa2 <vfprintf+0x284>
    1a46:	f8 e0       	ldi	r31, 0x08	; 8
    1a48:	f4 15       	cp	r31, r4
    1a4a:	78 f5       	brcc	.+94     	; 0x1aaa <vfprintf+0x28c>
    1a4c:	88 e0       	ldi	r24, 0x08	; 8
    1a4e:	48 2e       	mov	r4, r24
    1a50:	2c c0       	rjmp	.+88     	; 0x1aaa <vfprintf+0x28c>
    1a52:	76 fc       	sbrc	r7, 6
    1a54:	2a c0       	rjmp	.+84     	; 0x1aaa <vfprintf+0x28c>
    1a56:	81 2f       	mov	r24, r17
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	8c 15       	cp	r24, r12
    1a5c:	9d 05       	cpc	r25, r13
    1a5e:	9c f0       	brlt	.+38     	; 0x1a86 <vfprintf+0x268>
    1a60:	6c ef       	ldi	r22, 0xFC	; 252
    1a62:	c6 16       	cp	r12, r22
    1a64:	6f ef       	ldi	r22, 0xFF	; 255
    1a66:	d6 06       	cpc	r13, r22
    1a68:	74 f0       	brlt	.+28     	; 0x1a86 <vfprintf+0x268>
    1a6a:	77 2d       	mov	r23, r7
    1a6c:	70 68       	ori	r23, 0x80	; 128
    1a6e:	77 2e       	mov	r7, r23
    1a70:	0a c0       	rjmp	.+20     	; 0x1a86 <vfprintf+0x268>
    1a72:	e2 e0       	ldi	r30, 0x02	; 2
    1a74:	f0 e0       	ldi	r31, 0x00	; 0
    1a76:	ec 0f       	add	r30, r28
    1a78:	fd 1f       	adc	r31, r29
    1a7a:	e1 0f       	add	r30, r17
    1a7c:	f1 1d       	adc	r31, r1
    1a7e:	80 81       	ld	r24, Z
    1a80:	80 33       	cpi	r24, 0x30	; 48
    1a82:	19 f4       	brne	.+6      	; 0x1a8a <vfprintf+0x26c>
    1a84:	11 50       	subi	r17, 0x01	; 1
    1a86:	11 11       	cpse	r17, r1
    1a88:	f4 cf       	rjmp	.-24     	; 0x1a72 <vfprintf+0x254>
    1a8a:	77 fe       	sbrs	r7, 7
    1a8c:	0e c0       	rjmp	.+28     	; 0x1aaa <vfprintf+0x28c>
    1a8e:	44 24       	eor	r4, r4
    1a90:	43 94       	inc	r4
    1a92:	41 0e       	add	r4, r17
    1a94:	81 2f       	mov	r24, r17
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	c8 16       	cp	r12, r24
    1a9a:	d9 06       	cpc	r13, r25
    1a9c:	2c f4       	brge	.+10     	; 0x1aa8 <vfprintf+0x28a>
    1a9e:	1c 19       	sub	r17, r12
    1aa0:	04 c0       	rjmp	.+8      	; 0x1aaa <vfprintf+0x28c>
    1aa2:	44 24       	eor	r4, r4
    1aa4:	43 94       	inc	r4
    1aa6:	01 c0       	rjmp	.+2      	; 0x1aaa <vfprintf+0x28c>
    1aa8:	10 e0       	ldi	r17, 0x00	; 0
    1aaa:	77 fe       	sbrs	r7, 7
    1aac:	07 c0       	rjmp	.+14     	; 0x1abc <vfprintf+0x29e>
    1aae:	1c 14       	cp	r1, r12
    1ab0:	1d 04       	cpc	r1, r13
    1ab2:	3c f4       	brge	.+14     	; 0x1ac2 <vfprintf+0x2a4>
    1ab4:	96 01       	movw	r18, r12
    1ab6:	2f 5f       	subi	r18, 0xFF	; 255
    1ab8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aba:	05 c0       	rjmp	.+10     	; 0x1ac6 <vfprintf+0x2a8>
    1abc:	25 e0       	ldi	r18, 0x05	; 5
    1abe:	30 e0       	ldi	r19, 0x00	; 0
    1ac0:	02 c0       	rjmp	.+4      	; 0x1ac6 <vfprintf+0x2a8>
    1ac2:	21 e0       	ldi	r18, 0x01	; 1
    1ac4:	30 e0       	ldi	r19, 0x00	; 0
    1ac6:	66 20       	and	r6, r6
    1ac8:	11 f0       	breq	.+4      	; 0x1ace <vfprintf+0x2b0>
    1aca:	2f 5f       	subi	r18, 0xFF	; 255
    1acc:	3f 4f       	sbci	r19, 0xFF	; 255
    1ace:	11 23       	and	r17, r17
    1ad0:	31 f0       	breq	.+12     	; 0x1ade <vfprintf+0x2c0>
    1ad2:	41 2f       	mov	r20, r17
    1ad4:	50 e0       	ldi	r21, 0x00	; 0
    1ad6:	4f 5f       	subi	r20, 0xFF	; 255
    1ad8:	5f 4f       	sbci	r21, 0xFF	; 255
    1ada:	24 0f       	add	r18, r20
    1adc:	35 1f       	adc	r19, r21
    1ade:	45 2d       	mov	r20, r5
    1ae0:	50 e0       	ldi	r21, 0x00	; 0
    1ae2:	24 17       	cp	r18, r20
    1ae4:	35 07       	cpc	r19, r21
    1ae6:	14 f4       	brge	.+4      	; 0x1aec <vfprintf+0x2ce>
    1ae8:	52 1a       	sub	r5, r18
    1aea:	01 c0       	rjmp	.+2      	; 0x1aee <vfprintf+0x2d0>
    1aec:	51 2c       	mov	r5, r1
    1aee:	87 2d       	mov	r24, r7
    1af0:	89 70       	andi	r24, 0x09	; 9
    1af2:	41 f4       	brne	.+16     	; 0x1b04 <vfprintf+0x2e6>
    1af4:	55 20       	and	r5, r5
    1af6:	31 f0       	breq	.+12     	; 0x1b04 <vfprintf+0x2e6>
    1af8:	b7 01       	movw	r22, r14
    1afa:	80 e2       	ldi	r24, 0x20	; 32
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	63 d3       	rcall	.+1734   	; 0x21c6 <fputc>
    1b00:	5a 94       	dec	r5
    1b02:	f8 cf       	rjmp	.-16     	; 0x1af4 <vfprintf+0x2d6>
    1b04:	66 20       	and	r6, r6
    1b06:	21 f0       	breq	.+8      	; 0x1b10 <vfprintf+0x2f2>
    1b08:	b7 01       	movw	r22, r14
    1b0a:	86 2d       	mov	r24, r6
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	5b d3       	rcall	.+1718   	; 0x21c6 <fputc>
    1b10:	73 fc       	sbrc	r7, 3
    1b12:	08 c0       	rjmp	.+16     	; 0x1b24 <vfprintf+0x306>
    1b14:	55 20       	and	r5, r5
    1b16:	31 f0       	breq	.+12     	; 0x1b24 <vfprintf+0x306>
    1b18:	b7 01       	movw	r22, r14
    1b1a:	80 e3       	ldi	r24, 0x30	; 48
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	53 d3       	rcall	.+1702   	; 0x21c6 <fputc>
    1b20:	5a 94       	dec	r5
    1b22:	f8 cf       	rjmp	.-16     	; 0x1b14 <vfprintf+0x2f6>
    1b24:	77 fe       	sbrs	r7, 7
    1b26:	5d c0       	rjmp	.+186    	; 0x1be2 <vfprintf+0x3c4>
    1b28:	9c 2d       	mov	r25, r12
    1b2a:	8d 2d       	mov	r24, r13
    1b2c:	d7 fe       	sbrs	r13, 7
    1b2e:	02 c0       	rjmp	.+4      	; 0x1b34 <vfprintf+0x316>
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	80 e0       	ldi	r24, 0x00	; 0
    1b34:	69 2e       	mov	r6, r25
    1b36:	78 2e       	mov	r7, r24
    1b38:	40 e0       	ldi	r20, 0x00	; 0
    1b3a:	50 e0       	ldi	r21, 0x00	; 0
    1b3c:	c6 01       	movw	r24, r12
    1b3e:	84 19       	sub	r24, r4
    1b40:	91 09       	sbc	r25, r1
    1b42:	9d 87       	std	Y+13, r25	; 0x0d
    1b44:	8c 87       	std	Y+12, r24	; 0x0c
    1b46:	96 01       	movw	r18, r12
    1b48:	26 19       	sub	r18, r6
    1b4a:	37 09       	sbc	r19, r7
    1b4c:	28 0d       	add	r18, r8
    1b4e:	39 1d       	adc	r19, r9
    1b50:	81 2f       	mov	r24, r17
    1b52:	90 e0       	ldi	r25, 0x00	; 0
    1b54:	ee 27       	eor	r30, r30
    1b56:	ff 27       	eor	r31, r31
    1b58:	e8 1b       	sub	r30, r24
    1b5a:	f9 0b       	sbc	r31, r25
    1b5c:	ff 87       	std	Y+15, r31	; 0x0f
    1b5e:	ee 87       	std	Y+14, r30	; 0x0e
    1b60:	ff ef       	ldi	r31, 0xFF	; 255
    1b62:	6f 16       	cp	r6, r31
    1b64:	7f 06       	cpc	r7, r31
    1b66:	61 f4       	brne	.+24     	; 0x1b80 <vfprintf+0x362>
    1b68:	b7 01       	movw	r22, r14
    1b6a:	8e e2       	ldi	r24, 0x2E	; 46
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	2b 8b       	std	Y+19, r18	; 0x13
    1b70:	3a 8b       	std	Y+18, r19	; 0x12
    1b72:	48 8b       	std	Y+16, r20	; 0x10
    1b74:	59 8b       	std	Y+17, r21	; 0x11
    1b76:	27 d3       	rcall	.+1614   	; 0x21c6 <fputc>
    1b78:	59 89       	ldd	r21, Y+17	; 0x11
    1b7a:	48 89       	ldd	r20, Y+16	; 0x10
    1b7c:	3a 89       	ldd	r19, Y+18	; 0x12
    1b7e:	2b 89       	ldd	r18, Y+19	; 0x13
    1b80:	c6 14       	cp	r12, r6
    1b82:	d7 04       	cpc	r13, r7
    1b84:	54 f0       	brlt	.+20     	; 0x1b9a <vfprintf+0x37c>
    1b86:	6c 85       	ldd	r22, Y+12	; 0x0c
    1b88:	7d 85       	ldd	r23, Y+13	; 0x0d
    1b8a:	66 15       	cp	r22, r6
    1b8c:	77 05       	cpc	r23, r7
    1b8e:	2c f4       	brge	.+10     	; 0x1b9a <vfprintf+0x37c>
    1b90:	f9 01       	movw	r30, r18
    1b92:	e4 0f       	add	r30, r20
    1b94:	f5 1f       	adc	r31, r21
    1b96:	81 81       	ldd	r24, Z+1	; 0x01
    1b98:	01 c0       	rjmp	.+2      	; 0x1b9c <vfprintf+0x37e>
    1b9a:	80 e3       	ldi	r24, 0x30	; 48
    1b9c:	71 e0       	ldi	r23, 0x01	; 1
    1b9e:	67 1a       	sub	r6, r23
    1ba0:	71 08       	sbc	r7, r1
    1ba2:	4f 5f       	subi	r20, 0xFF	; 255
    1ba4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ba6:	ee 85       	ldd	r30, Y+14	; 0x0e
    1ba8:	ff 85       	ldd	r31, Y+15	; 0x0f
    1baa:	6e 16       	cp	r6, r30
    1bac:	7f 06       	cpc	r7, r31
    1bae:	64 f0       	brlt	.+24     	; 0x1bc8 <vfprintf+0x3aa>
    1bb0:	b7 01       	movw	r22, r14
    1bb2:	90 e0       	ldi	r25, 0x00	; 0
    1bb4:	2b 8b       	std	Y+19, r18	; 0x13
    1bb6:	3a 8b       	std	Y+18, r19	; 0x12
    1bb8:	48 8b       	std	Y+16, r20	; 0x10
    1bba:	59 8b       	std	Y+17, r21	; 0x11
    1bbc:	04 d3       	rcall	.+1544   	; 0x21c6 <fputc>
    1bbe:	2b 89       	ldd	r18, Y+19	; 0x13
    1bc0:	3a 89       	ldd	r19, Y+18	; 0x12
    1bc2:	48 89       	ldd	r20, Y+16	; 0x10
    1bc4:	59 89       	ldd	r21, Y+17	; 0x11
    1bc6:	cc cf       	rjmp	.-104    	; 0x1b60 <vfprintf+0x342>
    1bc8:	6c 14       	cp	r6, r12
    1bca:	7d 04       	cpc	r7, r13
    1bcc:	39 f4       	brne	.+14     	; 0x1bdc <vfprintf+0x3be>
    1bce:	9a 81       	ldd	r25, Y+2	; 0x02
    1bd0:	96 33       	cpi	r25, 0x36	; 54
    1bd2:	18 f4       	brcc	.+6      	; 0x1bda <vfprintf+0x3bc>
    1bd4:	95 33       	cpi	r25, 0x35	; 53
    1bd6:	11 f4       	brne	.+4      	; 0x1bdc <vfprintf+0x3be>
    1bd8:	04 ff       	sbrs	r16, 4
    1bda:	81 e3       	ldi	r24, 0x31	; 49
    1bdc:	b7 01       	movw	r22, r14
    1bde:	90 e0       	ldi	r25, 0x00	; 0
    1be0:	45 c0       	rjmp	.+138    	; 0x1c6c <vfprintf+0x44e>
    1be2:	8a 81       	ldd	r24, Y+2	; 0x02
    1be4:	81 33       	cpi	r24, 0x31	; 49
    1be6:	09 f0       	breq	.+2      	; 0x1bea <vfprintf+0x3cc>
    1be8:	0f 7e       	andi	r16, 0xEF	; 239
    1bea:	b7 01       	movw	r22, r14
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	eb d2       	rcall	.+1494   	; 0x21c6 <fputc>
    1bf0:	11 11       	cpse	r17, r1
    1bf2:	05 c0       	rjmp	.+10     	; 0x1bfe <vfprintf+0x3e0>
    1bf4:	74 fe       	sbrs	r7, 4
    1bf6:	16 c0       	rjmp	.+44     	; 0x1c24 <vfprintf+0x406>
    1bf8:	85 e4       	ldi	r24, 0x45	; 69
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	15 c0       	rjmp	.+42     	; 0x1c28 <vfprintf+0x40a>
    1bfe:	b7 01       	movw	r22, r14
    1c00:	8e e2       	ldi	r24, 0x2E	; 46
    1c02:	90 e0       	ldi	r25, 0x00	; 0
    1c04:	e0 d2       	rcall	.+1472   	; 0x21c6 <fputc>
    1c06:	82 e0       	ldi	r24, 0x02	; 2
    1c08:	66 24       	eor	r6, r6
    1c0a:	63 94       	inc	r6
    1c0c:	68 0e       	add	r6, r24
    1c0e:	f4 01       	movw	r30, r8
    1c10:	e8 0f       	add	r30, r24
    1c12:	f1 1d       	adc	r31, r1
    1c14:	80 81       	ld	r24, Z
    1c16:	b7 01       	movw	r22, r14
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	d5 d2       	rcall	.+1450   	; 0x21c6 <fputc>
    1c1c:	11 50       	subi	r17, 0x01	; 1
    1c1e:	51 f3       	breq	.-44     	; 0x1bf4 <vfprintf+0x3d6>
    1c20:	86 2d       	mov	r24, r6
    1c22:	f2 cf       	rjmp	.-28     	; 0x1c08 <vfprintf+0x3ea>
    1c24:	85 e6       	ldi	r24, 0x65	; 101
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	b7 01       	movw	r22, r14
    1c2a:	cd d2       	rcall	.+1434   	; 0x21c6 <fputc>
    1c2c:	d7 fc       	sbrc	r13, 7
    1c2e:	05 c0       	rjmp	.+10     	; 0x1c3a <vfprintf+0x41c>
    1c30:	c1 14       	cp	r12, r1
    1c32:	d1 04       	cpc	r13, r1
    1c34:	39 f4       	brne	.+14     	; 0x1c44 <vfprintf+0x426>
    1c36:	04 ff       	sbrs	r16, 4
    1c38:	05 c0       	rjmp	.+10     	; 0x1c44 <vfprintf+0x426>
    1c3a:	d1 94       	neg	r13
    1c3c:	c1 94       	neg	r12
    1c3e:	d1 08       	sbc	r13, r1
    1c40:	8d e2       	ldi	r24, 0x2D	; 45
    1c42:	01 c0       	rjmp	.+2      	; 0x1c46 <vfprintf+0x428>
    1c44:	8b e2       	ldi	r24, 0x2B	; 43
    1c46:	b7 01       	movw	r22, r14
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	bd d2       	rcall	.+1402   	; 0x21c6 <fputc>
    1c4c:	80 e3       	ldi	r24, 0x30	; 48
    1c4e:	6a e0       	ldi	r22, 0x0A	; 10
    1c50:	c6 16       	cp	r12, r22
    1c52:	d1 04       	cpc	r13, r1
    1c54:	2c f0       	brlt	.+10     	; 0x1c60 <vfprintf+0x442>
    1c56:	8f 5f       	subi	r24, 0xFF	; 255
    1c58:	fa e0       	ldi	r31, 0x0A	; 10
    1c5a:	cf 1a       	sub	r12, r31
    1c5c:	d1 08       	sbc	r13, r1
    1c5e:	f7 cf       	rjmp	.-18     	; 0x1c4e <vfprintf+0x430>
    1c60:	b7 01       	movw	r22, r14
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	b0 d2       	rcall	.+1376   	; 0x21c6 <fputc>
    1c66:	b7 01       	movw	r22, r14
    1c68:	c6 01       	movw	r24, r12
    1c6a:	c0 96       	adiw	r24, 0x30	; 48
    1c6c:	ac d2       	rcall	.+1368   	; 0x21c6 <fputc>
    1c6e:	36 c1       	rjmp	.+620    	; 0x1edc <vfprintf+0x6be>
    1c70:	83 36       	cpi	r24, 0x63	; 99
    1c72:	31 f0       	breq	.+12     	; 0x1c80 <vfprintf+0x462>
    1c74:	83 37       	cpi	r24, 0x73	; 115
    1c76:	79 f0       	breq	.+30     	; 0x1c96 <vfprintf+0x478>
    1c78:	83 35       	cpi	r24, 0x53	; 83
    1c7a:	09 f0       	breq	.+2      	; 0x1c7e <vfprintf+0x460>
    1c7c:	54 c0       	rjmp	.+168    	; 0x1d26 <vfprintf+0x508>
    1c7e:	20 c0       	rjmp	.+64     	; 0x1cc0 <vfprintf+0x4a2>
    1c80:	56 01       	movw	r10, r12
    1c82:	72 e0       	ldi	r23, 0x02	; 2
    1c84:	a7 0e       	add	r10, r23
    1c86:	b1 1c       	adc	r11, r1
    1c88:	f6 01       	movw	r30, r12
    1c8a:	80 81       	ld	r24, Z
    1c8c:	89 83       	std	Y+1, r24	; 0x01
    1c8e:	01 e0       	ldi	r16, 0x01	; 1
    1c90:	10 e0       	ldi	r17, 0x00	; 0
    1c92:	64 01       	movw	r12, r8
    1c94:	13 c0       	rjmp	.+38     	; 0x1cbc <vfprintf+0x49e>
    1c96:	56 01       	movw	r10, r12
    1c98:	f2 e0       	ldi	r31, 0x02	; 2
    1c9a:	af 0e       	add	r10, r31
    1c9c:	b1 1c       	adc	r11, r1
    1c9e:	f6 01       	movw	r30, r12
    1ca0:	c0 80       	ld	r12, Z
    1ca2:	d1 80       	ldd	r13, Z+1	; 0x01
    1ca4:	26 ff       	sbrs	r18, 6
    1ca6:	03 c0       	rjmp	.+6      	; 0x1cae <vfprintf+0x490>
    1ca8:	61 2f       	mov	r22, r17
    1caa:	70 e0       	ldi	r23, 0x00	; 0
    1cac:	02 c0       	rjmp	.+4      	; 0x1cb2 <vfprintf+0x494>
    1cae:	6f ef       	ldi	r22, 0xFF	; 255
    1cb0:	7f ef       	ldi	r23, 0xFF	; 255
    1cb2:	c6 01       	movw	r24, r12
    1cb4:	2b 8b       	std	Y+19, r18	; 0x13
    1cb6:	32 d2       	rcall	.+1124   	; 0x211c <strnlen>
    1cb8:	8c 01       	movw	r16, r24
    1cba:	2b 89       	ldd	r18, Y+19	; 0x13
    1cbc:	2f 77       	andi	r18, 0x7F	; 127
    1cbe:	14 c0       	rjmp	.+40     	; 0x1ce8 <vfprintf+0x4ca>
    1cc0:	56 01       	movw	r10, r12
    1cc2:	f2 e0       	ldi	r31, 0x02	; 2
    1cc4:	af 0e       	add	r10, r31
    1cc6:	b1 1c       	adc	r11, r1
    1cc8:	f6 01       	movw	r30, r12
    1cca:	c0 80       	ld	r12, Z
    1ccc:	d1 80       	ldd	r13, Z+1	; 0x01
    1cce:	26 ff       	sbrs	r18, 6
    1cd0:	03 c0       	rjmp	.+6      	; 0x1cd8 <vfprintf+0x4ba>
    1cd2:	61 2f       	mov	r22, r17
    1cd4:	70 e0       	ldi	r23, 0x00	; 0
    1cd6:	02 c0       	rjmp	.+4      	; 0x1cdc <vfprintf+0x4be>
    1cd8:	6f ef       	ldi	r22, 0xFF	; 255
    1cda:	7f ef       	ldi	r23, 0xFF	; 255
    1cdc:	c6 01       	movw	r24, r12
    1cde:	2b 8b       	std	Y+19, r18	; 0x13
    1ce0:	12 d2       	rcall	.+1060   	; 0x2106 <strnlen_P>
    1ce2:	8c 01       	movw	r16, r24
    1ce4:	2b 89       	ldd	r18, Y+19	; 0x13
    1ce6:	20 68       	ori	r18, 0x80	; 128
    1ce8:	72 2e       	mov	r7, r18
    1cea:	23 fd       	sbrc	r18, 3
    1cec:	18 c0       	rjmp	.+48     	; 0x1d1e <vfprintf+0x500>
    1cee:	85 2d       	mov	r24, r5
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	08 17       	cp	r16, r24
    1cf4:	19 07       	cpc	r17, r25
    1cf6:	98 f4       	brcc	.+38     	; 0x1d1e <vfprintf+0x500>
    1cf8:	b7 01       	movw	r22, r14
    1cfa:	80 e2       	ldi	r24, 0x20	; 32
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	63 d2       	rcall	.+1222   	; 0x21c6 <fputc>
    1d00:	5a 94       	dec	r5
    1d02:	f5 cf       	rjmp	.-22     	; 0x1cee <vfprintf+0x4d0>
    1d04:	f6 01       	movw	r30, r12
    1d06:	77 fc       	sbrc	r7, 7
    1d08:	85 91       	lpm	r24, Z+
    1d0a:	77 fe       	sbrs	r7, 7
    1d0c:	81 91       	ld	r24, Z+
    1d0e:	6f 01       	movw	r12, r30
    1d10:	b7 01       	movw	r22, r14
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	58 d2       	rcall	.+1200   	; 0x21c6 <fputc>
    1d16:	51 10       	cpse	r5, r1
    1d18:	5a 94       	dec	r5
    1d1a:	01 50       	subi	r16, 0x01	; 1
    1d1c:	11 09       	sbc	r17, r1
    1d1e:	01 15       	cp	r16, r1
    1d20:	11 05       	cpc	r17, r1
    1d22:	81 f7       	brne	.-32     	; 0x1d04 <vfprintf+0x4e6>
    1d24:	db c0       	rjmp	.+438    	; 0x1edc <vfprintf+0x6be>
    1d26:	84 36       	cpi	r24, 0x64	; 100
    1d28:	11 f0       	breq	.+4      	; 0x1d2e <vfprintf+0x510>
    1d2a:	89 36       	cpi	r24, 0x69	; 105
    1d2c:	49 f5       	brne	.+82     	; 0x1d80 <vfprintf+0x562>
    1d2e:	56 01       	movw	r10, r12
    1d30:	27 ff       	sbrs	r18, 7
    1d32:	09 c0       	rjmp	.+18     	; 0x1d46 <vfprintf+0x528>
    1d34:	f4 e0       	ldi	r31, 0x04	; 4
    1d36:	af 0e       	add	r10, r31
    1d38:	b1 1c       	adc	r11, r1
    1d3a:	f6 01       	movw	r30, r12
    1d3c:	60 81       	ld	r22, Z
    1d3e:	71 81       	ldd	r23, Z+1	; 0x01
    1d40:	82 81       	ldd	r24, Z+2	; 0x02
    1d42:	93 81       	ldd	r25, Z+3	; 0x03
    1d44:	0a c0       	rjmp	.+20     	; 0x1d5a <vfprintf+0x53c>
    1d46:	f2 e0       	ldi	r31, 0x02	; 2
    1d48:	af 0e       	add	r10, r31
    1d4a:	b1 1c       	adc	r11, r1
    1d4c:	f6 01       	movw	r30, r12
    1d4e:	60 81       	ld	r22, Z
    1d50:	71 81       	ldd	r23, Z+1	; 0x01
    1d52:	88 27       	eor	r24, r24
    1d54:	77 fd       	sbrc	r23, 7
    1d56:	80 95       	com	r24
    1d58:	98 2f       	mov	r25, r24
    1d5a:	02 2f       	mov	r16, r18
    1d5c:	0f 76       	andi	r16, 0x6F	; 111
    1d5e:	97 ff       	sbrs	r25, 7
    1d60:	08 c0       	rjmp	.+16     	; 0x1d72 <vfprintf+0x554>
    1d62:	90 95       	com	r25
    1d64:	80 95       	com	r24
    1d66:	70 95       	com	r23
    1d68:	61 95       	neg	r22
    1d6a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d6c:	8f 4f       	sbci	r24, 0xFF	; 255
    1d6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d70:	00 68       	ori	r16, 0x80	; 128
    1d72:	2a e0       	ldi	r18, 0x0A	; 10
    1d74:	30 e0       	ldi	r19, 0x00	; 0
    1d76:	a4 01       	movw	r20, r8
    1d78:	96 d2       	rcall	.+1324   	; 0x22a6 <__ultoa_invert>
    1d7a:	c8 2e       	mov	r12, r24
    1d7c:	c8 18       	sub	r12, r8
    1d7e:	3d c0       	rjmp	.+122    	; 0x1dfa <vfprintf+0x5dc>
    1d80:	02 2f       	mov	r16, r18
    1d82:	85 37       	cpi	r24, 0x75	; 117
    1d84:	21 f4       	brne	.+8      	; 0x1d8e <vfprintf+0x570>
    1d86:	0f 7e       	andi	r16, 0xEF	; 239
    1d88:	2a e0       	ldi	r18, 0x0A	; 10
    1d8a:	30 e0       	ldi	r19, 0x00	; 0
    1d8c:	1d c0       	rjmp	.+58     	; 0x1dc8 <vfprintf+0x5aa>
    1d8e:	09 7f       	andi	r16, 0xF9	; 249
    1d90:	8f 36       	cpi	r24, 0x6F	; 111
    1d92:	91 f0       	breq	.+36     	; 0x1db8 <vfprintf+0x59a>
    1d94:	18 f4       	brcc	.+6      	; 0x1d9c <vfprintf+0x57e>
    1d96:	88 35       	cpi	r24, 0x58	; 88
    1d98:	59 f0       	breq	.+22     	; 0x1db0 <vfprintf+0x592>
    1d9a:	a9 c0       	rjmp	.+338    	; 0x1eee <vfprintf+0x6d0>
    1d9c:	80 37       	cpi	r24, 0x70	; 112
    1d9e:	19 f0       	breq	.+6      	; 0x1da6 <vfprintf+0x588>
    1da0:	88 37       	cpi	r24, 0x78	; 120
    1da2:	11 f0       	breq	.+4      	; 0x1da8 <vfprintf+0x58a>
    1da4:	a4 c0       	rjmp	.+328    	; 0x1eee <vfprintf+0x6d0>
    1da6:	00 61       	ori	r16, 0x10	; 16
    1da8:	04 ff       	sbrs	r16, 4
    1daa:	09 c0       	rjmp	.+18     	; 0x1dbe <vfprintf+0x5a0>
    1dac:	04 60       	ori	r16, 0x04	; 4
    1dae:	07 c0       	rjmp	.+14     	; 0x1dbe <vfprintf+0x5a0>
    1db0:	24 ff       	sbrs	r18, 4
    1db2:	08 c0       	rjmp	.+16     	; 0x1dc4 <vfprintf+0x5a6>
    1db4:	06 60       	ori	r16, 0x06	; 6
    1db6:	06 c0       	rjmp	.+12     	; 0x1dc4 <vfprintf+0x5a6>
    1db8:	28 e0       	ldi	r18, 0x08	; 8
    1dba:	30 e0       	ldi	r19, 0x00	; 0
    1dbc:	05 c0       	rjmp	.+10     	; 0x1dc8 <vfprintf+0x5aa>
    1dbe:	20 e1       	ldi	r18, 0x10	; 16
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	02 c0       	rjmp	.+4      	; 0x1dc8 <vfprintf+0x5aa>
    1dc4:	20 e1       	ldi	r18, 0x10	; 16
    1dc6:	32 e0       	ldi	r19, 0x02	; 2
    1dc8:	56 01       	movw	r10, r12
    1dca:	07 ff       	sbrs	r16, 7
    1dcc:	09 c0       	rjmp	.+18     	; 0x1de0 <vfprintf+0x5c2>
    1dce:	f4 e0       	ldi	r31, 0x04	; 4
    1dd0:	af 0e       	add	r10, r31
    1dd2:	b1 1c       	adc	r11, r1
    1dd4:	f6 01       	movw	r30, r12
    1dd6:	60 81       	ld	r22, Z
    1dd8:	71 81       	ldd	r23, Z+1	; 0x01
    1dda:	82 81       	ldd	r24, Z+2	; 0x02
    1ddc:	93 81       	ldd	r25, Z+3	; 0x03
    1dde:	08 c0       	rjmp	.+16     	; 0x1df0 <vfprintf+0x5d2>
    1de0:	f2 e0       	ldi	r31, 0x02	; 2
    1de2:	af 0e       	add	r10, r31
    1de4:	b1 1c       	adc	r11, r1
    1de6:	f6 01       	movw	r30, r12
    1de8:	60 81       	ld	r22, Z
    1dea:	71 81       	ldd	r23, Z+1	; 0x01
    1dec:	80 e0       	ldi	r24, 0x00	; 0
    1dee:	90 e0       	ldi	r25, 0x00	; 0
    1df0:	a4 01       	movw	r20, r8
    1df2:	59 d2       	rcall	.+1202   	; 0x22a6 <__ultoa_invert>
    1df4:	c8 2e       	mov	r12, r24
    1df6:	c8 18       	sub	r12, r8
    1df8:	0f 77       	andi	r16, 0x7F	; 127
    1dfa:	06 ff       	sbrs	r16, 6
    1dfc:	0b c0       	rjmp	.+22     	; 0x1e14 <vfprintf+0x5f6>
    1dfe:	20 2f       	mov	r18, r16
    1e00:	2e 7f       	andi	r18, 0xFE	; 254
    1e02:	c1 16       	cp	r12, r17
    1e04:	50 f4       	brcc	.+20     	; 0x1e1a <vfprintf+0x5fc>
    1e06:	04 ff       	sbrs	r16, 4
    1e08:	0a c0       	rjmp	.+20     	; 0x1e1e <vfprintf+0x600>
    1e0a:	02 fd       	sbrc	r16, 2
    1e0c:	08 c0       	rjmp	.+16     	; 0x1e1e <vfprintf+0x600>
    1e0e:	20 2f       	mov	r18, r16
    1e10:	2e 7e       	andi	r18, 0xEE	; 238
    1e12:	05 c0       	rjmp	.+10     	; 0x1e1e <vfprintf+0x600>
    1e14:	dc 2c       	mov	r13, r12
    1e16:	20 2f       	mov	r18, r16
    1e18:	03 c0       	rjmp	.+6      	; 0x1e20 <vfprintf+0x602>
    1e1a:	dc 2c       	mov	r13, r12
    1e1c:	01 c0       	rjmp	.+2      	; 0x1e20 <vfprintf+0x602>
    1e1e:	d1 2e       	mov	r13, r17
    1e20:	24 ff       	sbrs	r18, 4
    1e22:	0d c0       	rjmp	.+26     	; 0x1e3e <vfprintf+0x620>
    1e24:	fe 01       	movw	r30, r28
    1e26:	ec 0d       	add	r30, r12
    1e28:	f1 1d       	adc	r31, r1
    1e2a:	80 81       	ld	r24, Z
    1e2c:	80 33       	cpi	r24, 0x30	; 48
    1e2e:	11 f4       	brne	.+4      	; 0x1e34 <vfprintf+0x616>
    1e30:	29 7e       	andi	r18, 0xE9	; 233
    1e32:	09 c0       	rjmp	.+18     	; 0x1e46 <vfprintf+0x628>
    1e34:	22 ff       	sbrs	r18, 2
    1e36:	06 c0       	rjmp	.+12     	; 0x1e44 <vfprintf+0x626>
    1e38:	d3 94       	inc	r13
    1e3a:	d3 94       	inc	r13
    1e3c:	04 c0       	rjmp	.+8      	; 0x1e46 <vfprintf+0x628>
    1e3e:	82 2f       	mov	r24, r18
    1e40:	86 78       	andi	r24, 0x86	; 134
    1e42:	09 f0       	breq	.+2      	; 0x1e46 <vfprintf+0x628>
    1e44:	d3 94       	inc	r13
    1e46:	23 fd       	sbrc	r18, 3
    1e48:	12 c0       	rjmp	.+36     	; 0x1e6e <vfprintf+0x650>
    1e4a:	20 ff       	sbrs	r18, 0
    1e4c:	06 c0       	rjmp	.+12     	; 0x1e5a <vfprintf+0x63c>
    1e4e:	1c 2d       	mov	r17, r12
    1e50:	d5 14       	cp	r13, r5
    1e52:	18 f4       	brcc	.+6      	; 0x1e5a <vfprintf+0x63c>
    1e54:	15 0d       	add	r17, r5
    1e56:	1d 19       	sub	r17, r13
    1e58:	d5 2c       	mov	r13, r5
    1e5a:	d5 14       	cp	r13, r5
    1e5c:	60 f4       	brcc	.+24     	; 0x1e76 <vfprintf+0x658>
    1e5e:	b7 01       	movw	r22, r14
    1e60:	80 e2       	ldi	r24, 0x20	; 32
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	2b 8b       	std	Y+19, r18	; 0x13
    1e66:	af d1       	rcall	.+862    	; 0x21c6 <fputc>
    1e68:	d3 94       	inc	r13
    1e6a:	2b 89       	ldd	r18, Y+19	; 0x13
    1e6c:	f6 cf       	rjmp	.-20     	; 0x1e5a <vfprintf+0x63c>
    1e6e:	d5 14       	cp	r13, r5
    1e70:	10 f4       	brcc	.+4      	; 0x1e76 <vfprintf+0x658>
    1e72:	5d 18       	sub	r5, r13
    1e74:	01 c0       	rjmp	.+2      	; 0x1e78 <vfprintf+0x65a>
    1e76:	51 2c       	mov	r5, r1
    1e78:	24 ff       	sbrs	r18, 4
    1e7a:	11 c0       	rjmp	.+34     	; 0x1e9e <vfprintf+0x680>
    1e7c:	b7 01       	movw	r22, r14
    1e7e:	80 e3       	ldi	r24, 0x30	; 48
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	2b 8b       	std	Y+19, r18	; 0x13
    1e84:	a0 d1       	rcall	.+832    	; 0x21c6 <fputc>
    1e86:	2b 89       	ldd	r18, Y+19	; 0x13
    1e88:	22 ff       	sbrs	r18, 2
    1e8a:	16 c0       	rjmp	.+44     	; 0x1eb8 <vfprintf+0x69a>
    1e8c:	21 ff       	sbrs	r18, 1
    1e8e:	03 c0       	rjmp	.+6      	; 0x1e96 <vfprintf+0x678>
    1e90:	88 e5       	ldi	r24, 0x58	; 88
    1e92:	90 e0       	ldi	r25, 0x00	; 0
    1e94:	02 c0       	rjmp	.+4      	; 0x1e9a <vfprintf+0x67c>
    1e96:	88 e7       	ldi	r24, 0x78	; 120
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	b7 01       	movw	r22, r14
    1e9c:	0c c0       	rjmp	.+24     	; 0x1eb6 <vfprintf+0x698>
    1e9e:	82 2f       	mov	r24, r18
    1ea0:	86 78       	andi	r24, 0x86	; 134
    1ea2:	51 f0       	breq	.+20     	; 0x1eb8 <vfprintf+0x69a>
    1ea4:	21 fd       	sbrc	r18, 1
    1ea6:	02 c0       	rjmp	.+4      	; 0x1eac <vfprintf+0x68e>
    1ea8:	80 e2       	ldi	r24, 0x20	; 32
    1eaa:	01 c0       	rjmp	.+2      	; 0x1eae <vfprintf+0x690>
    1eac:	8b e2       	ldi	r24, 0x2B	; 43
    1eae:	27 fd       	sbrc	r18, 7
    1eb0:	8d e2       	ldi	r24, 0x2D	; 45
    1eb2:	b7 01       	movw	r22, r14
    1eb4:	90 e0       	ldi	r25, 0x00	; 0
    1eb6:	87 d1       	rcall	.+782    	; 0x21c6 <fputc>
    1eb8:	c1 16       	cp	r12, r17
    1eba:	30 f4       	brcc	.+12     	; 0x1ec8 <vfprintf+0x6aa>
    1ebc:	b7 01       	movw	r22, r14
    1ebe:	80 e3       	ldi	r24, 0x30	; 48
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	81 d1       	rcall	.+770    	; 0x21c6 <fputc>
    1ec4:	11 50       	subi	r17, 0x01	; 1
    1ec6:	f8 cf       	rjmp	.-16     	; 0x1eb8 <vfprintf+0x69a>
    1ec8:	ca 94       	dec	r12
    1eca:	f4 01       	movw	r30, r8
    1ecc:	ec 0d       	add	r30, r12
    1ece:	f1 1d       	adc	r31, r1
    1ed0:	80 81       	ld	r24, Z
    1ed2:	b7 01       	movw	r22, r14
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	77 d1       	rcall	.+750    	; 0x21c6 <fputc>
    1ed8:	c1 10       	cpse	r12, r1
    1eda:	f6 cf       	rjmp	.-20     	; 0x1ec8 <vfprintf+0x6aa>
    1edc:	55 20       	and	r5, r5
    1ede:	09 f4       	brne	.+2      	; 0x1ee2 <vfprintf+0x6c4>
    1ee0:	dd cc       	rjmp	.-1606   	; 0x189c <vfprintf+0x7e>
    1ee2:	b7 01       	movw	r22, r14
    1ee4:	80 e2       	ldi	r24, 0x20	; 32
    1ee6:	90 e0       	ldi	r25, 0x00	; 0
    1ee8:	6e d1       	rcall	.+732    	; 0x21c6 <fputc>
    1eea:	5a 94       	dec	r5
    1eec:	f7 cf       	rjmp	.-18     	; 0x1edc <vfprintf+0x6be>
    1eee:	f7 01       	movw	r30, r14
    1ef0:	86 81       	ldd	r24, Z+6	; 0x06
    1ef2:	97 81       	ldd	r25, Z+7	; 0x07
    1ef4:	02 c0       	rjmp	.+4      	; 0x1efa <vfprintf+0x6dc>
    1ef6:	8f ef       	ldi	r24, 0xFF	; 255
    1ef8:	9f ef       	ldi	r25, 0xFF	; 255
    1efa:	63 96       	adiw	r28, 0x13	; 19
    1efc:	0f b6       	in	r0, 0x3f	; 63
    1efe:	f8 94       	cli
    1f00:	de bf       	out	0x3e, r29	; 62
    1f02:	0f be       	out	0x3f, r0	; 63
    1f04:	cd bf       	out	0x3d, r28	; 61
    1f06:	df 91       	pop	r29
    1f08:	cf 91       	pop	r28
    1f0a:	1f 91       	pop	r17
    1f0c:	0f 91       	pop	r16
    1f0e:	ff 90       	pop	r15
    1f10:	ef 90       	pop	r14
    1f12:	df 90       	pop	r13
    1f14:	cf 90       	pop	r12
    1f16:	bf 90       	pop	r11
    1f18:	af 90       	pop	r10
    1f1a:	9f 90       	pop	r9
    1f1c:	8f 90       	pop	r8
    1f1e:	7f 90       	pop	r7
    1f20:	6f 90       	pop	r6
    1f22:	5f 90       	pop	r5
    1f24:	4f 90       	pop	r4
    1f26:	3f 90       	pop	r3
    1f28:	2f 90       	pop	r2
    1f2a:	08 95       	ret

00001f2c <__tablejump2__>:
    1f2c:	ee 0f       	add	r30, r30
    1f2e:	ff 1f       	adc	r31, r31

00001f30 <__tablejump__>:
    1f30:	05 90       	lpm	r0, Z+
    1f32:	f4 91       	lpm	r31, Z
    1f34:	e0 2d       	mov	r30, r0
    1f36:	19 94       	eijmp

00001f38 <__umulhisi3>:
    1f38:	a2 9f       	mul	r26, r18
    1f3a:	b0 01       	movw	r22, r0
    1f3c:	b3 9f       	mul	r27, r19
    1f3e:	c0 01       	movw	r24, r0
    1f40:	a3 9f       	mul	r26, r19
    1f42:	70 0d       	add	r23, r0
    1f44:	81 1d       	adc	r24, r1
    1f46:	11 24       	eor	r1, r1
    1f48:	91 1d       	adc	r25, r1
    1f4a:	b2 9f       	mul	r27, r18
    1f4c:	70 0d       	add	r23, r0
    1f4e:	81 1d       	adc	r24, r1
    1f50:	11 24       	eor	r1, r1
    1f52:	91 1d       	adc	r25, r1
    1f54:	08 95       	ret

00001f56 <__ftoa_engine>:
    1f56:	28 30       	cpi	r18, 0x08	; 8
    1f58:	08 f0       	brcs	.+2      	; 0x1f5c <__ftoa_engine+0x6>
    1f5a:	27 e0       	ldi	r18, 0x07	; 7
    1f5c:	33 27       	eor	r19, r19
    1f5e:	da 01       	movw	r26, r20
    1f60:	99 0f       	add	r25, r25
    1f62:	31 1d       	adc	r19, r1
    1f64:	87 fd       	sbrc	r24, 7
    1f66:	91 60       	ori	r25, 0x01	; 1
    1f68:	00 96       	adiw	r24, 0x00	; 0
    1f6a:	61 05       	cpc	r22, r1
    1f6c:	71 05       	cpc	r23, r1
    1f6e:	39 f4       	brne	.+14     	; 0x1f7e <__ftoa_engine+0x28>
    1f70:	32 60       	ori	r19, 0x02	; 2
    1f72:	2e 5f       	subi	r18, 0xFE	; 254
    1f74:	3d 93       	st	X+, r19
    1f76:	30 e3       	ldi	r19, 0x30	; 48
    1f78:	2a 95       	dec	r18
    1f7a:	e1 f7       	brne	.-8      	; 0x1f74 <__ftoa_engine+0x1e>
    1f7c:	08 95       	ret
    1f7e:	9f 3f       	cpi	r25, 0xFF	; 255
    1f80:	30 f0       	brcs	.+12     	; 0x1f8e <__ftoa_engine+0x38>
    1f82:	80 38       	cpi	r24, 0x80	; 128
    1f84:	71 05       	cpc	r23, r1
    1f86:	61 05       	cpc	r22, r1
    1f88:	09 f0       	breq	.+2      	; 0x1f8c <__ftoa_engine+0x36>
    1f8a:	3c 5f       	subi	r19, 0xFC	; 252
    1f8c:	3c 5f       	subi	r19, 0xFC	; 252
    1f8e:	3d 93       	st	X+, r19
    1f90:	91 30       	cpi	r25, 0x01	; 1
    1f92:	08 f0       	brcs	.+2      	; 0x1f96 <__ftoa_engine+0x40>
    1f94:	80 68       	ori	r24, 0x80	; 128
    1f96:	91 1d       	adc	r25, r1
    1f98:	df 93       	push	r29
    1f9a:	cf 93       	push	r28
    1f9c:	1f 93       	push	r17
    1f9e:	0f 93       	push	r16
    1fa0:	ff 92       	push	r15
    1fa2:	ef 92       	push	r14
    1fa4:	19 2f       	mov	r17, r25
    1fa6:	98 7f       	andi	r25, 0xF8	; 248
    1fa8:	96 95       	lsr	r25
    1faa:	e9 2f       	mov	r30, r25
    1fac:	96 95       	lsr	r25
    1fae:	96 95       	lsr	r25
    1fb0:	e9 0f       	add	r30, r25
    1fb2:	ff 27       	eor	r31, r31
    1fb4:	e6 59       	subi	r30, 0x96	; 150
    1fb6:	fd 4f       	sbci	r31, 0xFD	; 253
    1fb8:	99 27       	eor	r25, r25
    1fba:	33 27       	eor	r19, r19
    1fbc:	ee 24       	eor	r14, r14
    1fbe:	ff 24       	eor	r15, r15
    1fc0:	a7 01       	movw	r20, r14
    1fc2:	e7 01       	movw	r28, r14
    1fc4:	05 90       	lpm	r0, Z+
    1fc6:	08 94       	sec
    1fc8:	07 94       	ror	r0
    1fca:	28 f4       	brcc	.+10     	; 0x1fd6 <__ftoa_engine+0x80>
    1fcc:	36 0f       	add	r19, r22
    1fce:	e7 1e       	adc	r14, r23
    1fd0:	f8 1e       	adc	r15, r24
    1fd2:	49 1f       	adc	r20, r25
    1fd4:	51 1d       	adc	r21, r1
    1fd6:	66 0f       	add	r22, r22
    1fd8:	77 1f       	adc	r23, r23
    1fda:	88 1f       	adc	r24, r24
    1fdc:	99 1f       	adc	r25, r25
    1fde:	06 94       	lsr	r0
    1fe0:	a1 f7       	brne	.-24     	; 0x1fca <__ftoa_engine+0x74>
    1fe2:	05 90       	lpm	r0, Z+
    1fe4:	07 94       	ror	r0
    1fe6:	28 f4       	brcc	.+10     	; 0x1ff2 <__ftoa_engine+0x9c>
    1fe8:	e7 0e       	add	r14, r23
    1fea:	f8 1e       	adc	r15, r24
    1fec:	49 1f       	adc	r20, r25
    1fee:	56 1f       	adc	r21, r22
    1ff0:	c1 1d       	adc	r28, r1
    1ff2:	77 0f       	add	r23, r23
    1ff4:	88 1f       	adc	r24, r24
    1ff6:	99 1f       	adc	r25, r25
    1ff8:	66 1f       	adc	r22, r22
    1ffa:	06 94       	lsr	r0
    1ffc:	a1 f7       	brne	.-24     	; 0x1fe6 <__ftoa_engine+0x90>
    1ffe:	05 90       	lpm	r0, Z+
    2000:	07 94       	ror	r0
    2002:	28 f4       	brcc	.+10     	; 0x200e <__ftoa_engine+0xb8>
    2004:	f8 0e       	add	r15, r24
    2006:	49 1f       	adc	r20, r25
    2008:	56 1f       	adc	r21, r22
    200a:	c7 1f       	adc	r28, r23
    200c:	d1 1d       	adc	r29, r1
    200e:	88 0f       	add	r24, r24
    2010:	99 1f       	adc	r25, r25
    2012:	66 1f       	adc	r22, r22
    2014:	77 1f       	adc	r23, r23
    2016:	06 94       	lsr	r0
    2018:	a1 f7       	brne	.-24     	; 0x2002 <__ftoa_engine+0xac>
    201a:	05 90       	lpm	r0, Z+
    201c:	07 94       	ror	r0
    201e:	20 f4       	brcc	.+8      	; 0x2028 <__ftoa_engine+0xd2>
    2020:	49 0f       	add	r20, r25
    2022:	56 1f       	adc	r21, r22
    2024:	c7 1f       	adc	r28, r23
    2026:	d8 1f       	adc	r29, r24
    2028:	99 0f       	add	r25, r25
    202a:	66 1f       	adc	r22, r22
    202c:	77 1f       	adc	r23, r23
    202e:	88 1f       	adc	r24, r24
    2030:	06 94       	lsr	r0
    2032:	a9 f7       	brne	.-22     	; 0x201e <__ftoa_engine+0xc8>
    2034:	84 91       	lpm	r24, Z
    2036:	10 95       	com	r17
    2038:	17 70       	andi	r17, 0x07	; 7
    203a:	41 f0       	breq	.+16     	; 0x204c <__ftoa_engine+0xf6>
    203c:	d6 95       	lsr	r29
    203e:	c7 95       	ror	r28
    2040:	57 95       	ror	r21
    2042:	47 95       	ror	r20
    2044:	f7 94       	ror	r15
    2046:	e7 94       	ror	r14
    2048:	1a 95       	dec	r17
    204a:	c1 f7       	brne	.-16     	; 0x203c <__ftoa_engine+0xe6>
    204c:	e0 e1       	ldi	r30, 0x10	; 16
    204e:	f2 e0       	ldi	r31, 0x02	; 2
    2050:	68 94       	set
    2052:	15 90       	lpm	r1, Z+
    2054:	15 91       	lpm	r17, Z+
    2056:	35 91       	lpm	r19, Z+
    2058:	65 91       	lpm	r22, Z+
    205a:	95 91       	lpm	r25, Z+
    205c:	05 90       	lpm	r0, Z+
    205e:	7f e2       	ldi	r23, 0x2F	; 47
    2060:	73 95       	inc	r23
    2062:	e1 18       	sub	r14, r1
    2064:	f1 0a       	sbc	r15, r17
    2066:	43 0b       	sbc	r20, r19
    2068:	56 0b       	sbc	r21, r22
    206a:	c9 0b       	sbc	r28, r25
    206c:	d0 09       	sbc	r29, r0
    206e:	c0 f7       	brcc	.-16     	; 0x2060 <__ftoa_engine+0x10a>
    2070:	e1 0c       	add	r14, r1
    2072:	f1 1e       	adc	r15, r17
    2074:	43 1f       	adc	r20, r19
    2076:	56 1f       	adc	r21, r22
    2078:	c9 1f       	adc	r28, r25
    207a:	d0 1d       	adc	r29, r0
    207c:	7e f4       	brtc	.+30     	; 0x209c <__ftoa_engine+0x146>
    207e:	70 33       	cpi	r23, 0x30	; 48
    2080:	11 f4       	brne	.+4      	; 0x2086 <__ftoa_engine+0x130>
    2082:	8a 95       	dec	r24
    2084:	e6 cf       	rjmp	.-52     	; 0x2052 <__ftoa_engine+0xfc>
    2086:	e8 94       	clt
    2088:	01 50       	subi	r16, 0x01	; 1
    208a:	30 f0       	brcs	.+12     	; 0x2098 <__ftoa_engine+0x142>
    208c:	08 0f       	add	r16, r24
    208e:	0a f4       	brpl	.+2      	; 0x2092 <__ftoa_engine+0x13c>
    2090:	00 27       	eor	r16, r16
    2092:	02 17       	cp	r16, r18
    2094:	08 f4       	brcc	.+2      	; 0x2098 <__ftoa_engine+0x142>
    2096:	20 2f       	mov	r18, r16
    2098:	23 95       	inc	r18
    209a:	02 2f       	mov	r16, r18
    209c:	7a 33       	cpi	r23, 0x3A	; 58
    209e:	28 f0       	brcs	.+10     	; 0x20aa <__ftoa_engine+0x154>
    20a0:	79 e3       	ldi	r23, 0x39	; 57
    20a2:	7d 93       	st	X+, r23
    20a4:	2a 95       	dec	r18
    20a6:	e9 f7       	brne	.-6      	; 0x20a2 <__ftoa_engine+0x14c>
    20a8:	10 c0       	rjmp	.+32     	; 0x20ca <__ftoa_engine+0x174>
    20aa:	7d 93       	st	X+, r23
    20ac:	2a 95       	dec	r18
    20ae:	89 f6       	brne	.-94     	; 0x2052 <__ftoa_engine+0xfc>
    20b0:	06 94       	lsr	r0
    20b2:	97 95       	ror	r25
    20b4:	67 95       	ror	r22
    20b6:	37 95       	ror	r19
    20b8:	17 95       	ror	r17
    20ba:	17 94       	ror	r1
    20bc:	e1 18       	sub	r14, r1
    20be:	f1 0a       	sbc	r15, r17
    20c0:	43 0b       	sbc	r20, r19
    20c2:	56 0b       	sbc	r21, r22
    20c4:	c9 0b       	sbc	r28, r25
    20c6:	d0 09       	sbc	r29, r0
    20c8:	98 f0       	brcs	.+38     	; 0x20f0 <__ftoa_engine+0x19a>
    20ca:	23 95       	inc	r18
    20cc:	7e 91       	ld	r23, -X
    20ce:	73 95       	inc	r23
    20d0:	7a 33       	cpi	r23, 0x3A	; 58
    20d2:	08 f0       	brcs	.+2      	; 0x20d6 <__ftoa_engine+0x180>
    20d4:	70 e3       	ldi	r23, 0x30	; 48
    20d6:	7c 93       	st	X, r23
    20d8:	20 13       	cpse	r18, r16
    20da:	b8 f7       	brcc	.-18     	; 0x20ca <__ftoa_engine+0x174>
    20dc:	7e 91       	ld	r23, -X
    20de:	70 61       	ori	r23, 0x10	; 16
    20e0:	7d 93       	st	X+, r23
    20e2:	30 f0       	brcs	.+12     	; 0x20f0 <__ftoa_engine+0x19a>
    20e4:	83 95       	inc	r24
    20e6:	71 e3       	ldi	r23, 0x31	; 49
    20e8:	7d 93       	st	X+, r23
    20ea:	70 e3       	ldi	r23, 0x30	; 48
    20ec:	2a 95       	dec	r18
    20ee:	e1 f7       	brne	.-8      	; 0x20e8 <__ftoa_engine+0x192>
    20f0:	11 24       	eor	r1, r1
    20f2:	ef 90       	pop	r14
    20f4:	ff 90       	pop	r15
    20f6:	0f 91       	pop	r16
    20f8:	1f 91       	pop	r17
    20fa:	cf 91       	pop	r28
    20fc:	df 91       	pop	r29
    20fe:	99 27       	eor	r25, r25
    2100:	87 fd       	sbrc	r24, 7
    2102:	90 95       	com	r25
    2104:	08 95       	ret

00002106 <strnlen_P>:
    2106:	fc 01       	movw	r30, r24
    2108:	05 90       	lpm	r0, Z+
    210a:	61 50       	subi	r22, 0x01	; 1
    210c:	70 40       	sbci	r23, 0x00	; 0
    210e:	01 10       	cpse	r0, r1
    2110:	d8 f7       	brcc	.-10     	; 0x2108 <strnlen_P+0x2>
    2112:	80 95       	com	r24
    2114:	90 95       	com	r25
    2116:	8e 0f       	add	r24, r30
    2118:	9f 1f       	adc	r25, r31
    211a:	08 95       	ret

0000211c <strnlen>:
    211c:	fc 01       	movw	r30, r24
    211e:	61 50       	subi	r22, 0x01	; 1
    2120:	70 40       	sbci	r23, 0x00	; 0
    2122:	01 90       	ld	r0, Z+
    2124:	01 10       	cpse	r0, r1
    2126:	d8 f7       	brcc	.-10     	; 0x211e <strnlen+0x2>
    2128:	80 95       	com	r24
    212a:	90 95       	com	r25
    212c:	8e 0f       	add	r24, r30
    212e:	9f 1f       	adc	r25, r31
    2130:	08 95       	ret

00002132 <fdevopen>:
    2132:	0f 93       	push	r16
    2134:	1f 93       	push	r17
    2136:	cf 93       	push	r28
    2138:	df 93       	push	r29
    213a:	ec 01       	movw	r28, r24
    213c:	8b 01       	movw	r16, r22
    213e:	00 97       	sbiw	r24, 0x00	; 0
    2140:	31 f4       	brne	.+12     	; 0x214e <fdevopen+0x1c>
    2142:	61 15       	cp	r22, r1
    2144:	71 05       	cpc	r23, r1
    2146:	19 f4       	brne	.+6      	; 0x214e <fdevopen+0x1c>
    2148:	80 e0       	ldi	r24, 0x00	; 0
    214a:	90 e0       	ldi	r25, 0x00	; 0
    214c:	37 c0       	rjmp	.+110    	; 0x21bc <fdevopen+0x8a>
    214e:	6e e0       	ldi	r22, 0x0E	; 14
    2150:	70 e0       	ldi	r23, 0x00	; 0
    2152:	81 e0       	ldi	r24, 0x01	; 1
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	05 d1       	rcall	.+522    	; 0x2362 <calloc>
    2158:	fc 01       	movw	r30, r24
    215a:	00 97       	sbiw	r24, 0x00	; 0
    215c:	a9 f3       	breq	.-22     	; 0x2148 <fdevopen+0x16>
    215e:	80 e8       	ldi	r24, 0x80	; 128
    2160:	83 83       	std	Z+3, r24	; 0x03
    2162:	01 15       	cp	r16, r1
    2164:	11 05       	cpc	r17, r1
    2166:	71 f0       	breq	.+28     	; 0x2184 <fdevopen+0x52>
    2168:	13 87       	std	Z+11, r17	; 0x0b
    216a:	02 87       	std	Z+10, r16	; 0x0a
    216c:	81 e8       	ldi	r24, 0x81	; 129
    216e:	83 83       	std	Z+3, r24	; 0x03
    2170:	80 91 f7 02 	lds	r24, 0x02F7
    2174:	90 91 f8 02 	lds	r25, 0x02F8
    2178:	89 2b       	or	r24, r25
    217a:	21 f4       	brne	.+8      	; 0x2184 <fdevopen+0x52>
    217c:	f0 93 f8 02 	sts	0x02F8, r31
    2180:	e0 93 f7 02 	sts	0x02F7, r30
    2184:	20 97       	sbiw	r28, 0x00	; 0
    2186:	c9 f0       	breq	.+50     	; 0x21ba <fdevopen+0x88>
    2188:	d1 87       	std	Z+9, r29	; 0x09
    218a:	c0 87       	std	Z+8, r28	; 0x08
    218c:	83 81       	ldd	r24, Z+3	; 0x03
    218e:	82 60       	ori	r24, 0x02	; 2
    2190:	83 83       	std	Z+3, r24	; 0x03
    2192:	80 91 f9 02 	lds	r24, 0x02F9
    2196:	90 91 fa 02 	lds	r25, 0x02FA
    219a:	89 2b       	or	r24, r25
    219c:	71 f4       	brne	.+28     	; 0x21ba <fdevopen+0x88>
    219e:	f0 93 fa 02 	sts	0x02FA, r31
    21a2:	e0 93 f9 02 	sts	0x02F9, r30
    21a6:	80 91 fb 02 	lds	r24, 0x02FB
    21aa:	90 91 fc 02 	lds	r25, 0x02FC
    21ae:	89 2b       	or	r24, r25
    21b0:	21 f4       	brne	.+8      	; 0x21ba <fdevopen+0x88>
    21b2:	f0 93 fc 02 	sts	0x02FC, r31
    21b6:	e0 93 fb 02 	sts	0x02FB, r30
    21ba:	cf 01       	movw	r24, r30
    21bc:	df 91       	pop	r29
    21be:	cf 91       	pop	r28
    21c0:	1f 91       	pop	r17
    21c2:	0f 91       	pop	r16
    21c4:	08 95       	ret

000021c6 <fputc>:
    21c6:	0f 93       	push	r16
    21c8:	1f 93       	push	r17
    21ca:	cf 93       	push	r28
    21cc:	df 93       	push	r29
    21ce:	18 2f       	mov	r17, r24
    21d0:	09 2f       	mov	r16, r25
    21d2:	eb 01       	movw	r28, r22
    21d4:	8b 81       	ldd	r24, Y+3	; 0x03
    21d6:	81 fd       	sbrc	r24, 1
    21d8:	03 c0       	rjmp	.+6      	; 0x21e0 <fputc+0x1a>
    21da:	8f ef       	ldi	r24, 0xFF	; 255
    21dc:	9f ef       	ldi	r25, 0xFF	; 255
    21de:	20 c0       	rjmp	.+64     	; 0x2220 <__stack+0x21>
    21e0:	82 ff       	sbrs	r24, 2
    21e2:	10 c0       	rjmp	.+32     	; 0x2204 <__stack+0x5>
    21e4:	4e 81       	ldd	r20, Y+6	; 0x06
    21e6:	5f 81       	ldd	r21, Y+7	; 0x07
    21e8:	2c 81       	ldd	r18, Y+4	; 0x04
    21ea:	3d 81       	ldd	r19, Y+5	; 0x05
    21ec:	42 17       	cp	r20, r18
    21ee:	53 07       	cpc	r21, r19
    21f0:	7c f4       	brge	.+30     	; 0x2210 <__stack+0x11>
    21f2:	e8 81       	ld	r30, Y
    21f4:	f9 81       	ldd	r31, Y+1	; 0x01
    21f6:	9f 01       	movw	r18, r30
    21f8:	2f 5f       	subi	r18, 0xFF	; 255
    21fa:	3f 4f       	sbci	r19, 0xFF	; 255
    21fc:	39 83       	std	Y+1, r19	; 0x01
    21fe:	28 83       	st	Y, r18
    2200:	10 83       	st	Z, r17
    2202:	06 c0       	rjmp	.+12     	; 0x2210 <__stack+0x11>
    2204:	e8 85       	ldd	r30, Y+8	; 0x08
    2206:	f9 85       	ldd	r31, Y+9	; 0x09
    2208:	81 2f       	mov	r24, r17
    220a:	19 95       	eicall
    220c:	89 2b       	or	r24, r25
    220e:	29 f7       	brne	.-54     	; 0x21da <fputc+0x14>
    2210:	2e 81       	ldd	r18, Y+6	; 0x06
    2212:	3f 81       	ldd	r19, Y+7	; 0x07
    2214:	2f 5f       	subi	r18, 0xFF	; 255
    2216:	3f 4f       	sbci	r19, 0xFF	; 255
    2218:	3f 83       	std	Y+7, r19	; 0x07
    221a:	2e 83       	std	Y+6, r18	; 0x06
    221c:	81 2f       	mov	r24, r17
    221e:	90 2f       	mov	r25, r16
    2220:	df 91       	pop	r29
    2222:	cf 91       	pop	r28
    2224:	1f 91       	pop	r17
    2226:	0f 91       	pop	r16
    2228:	08 95       	ret

0000222a <printf>:
    222a:	cf 93       	push	r28
    222c:	df 93       	push	r29
    222e:	cd b7       	in	r28, 0x3d	; 61
    2230:	de b7       	in	r29, 0x3e	; 62
    2232:	fe 01       	movw	r30, r28
    2234:	36 96       	adiw	r30, 0x06	; 6
    2236:	61 91       	ld	r22, Z+
    2238:	71 91       	ld	r23, Z+
    223a:	af 01       	movw	r20, r30
    223c:	80 91 f9 02 	lds	r24, 0x02F9
    2240:	90 91 fa 02 	lds	r25, 0x02FA
    2244:	ec da       	rcall	.-2600   	; 0x181e <vfprintf>
    2246:	df 91       	pop	r29
    2248:	cf 91       	pop	r28
    224a:	08 95       	ret

0000224c <puts>:
    224c:	0f 93       	push	r16
    224e:	1f 93       	push	r17
    2250:	cf 93       	push	r28
    2252:	df 93       	push	r29
    2254:	e0 91 f9 02 	lds	r30, 0x02F9
    2258:	f0 91 fa 02 	lds	r31, 0x02FA
    225c:	23 81       	ldd	r18, Z+3	; 0x03
    225e:	21 ff       	sbrs	r18, 1
    2260:	1b c0       	rjmp	.+54     	; 0x2298 <puts+0x4c>
    2262:	ec 01       	movw	r28, r24
    2264:	00 e0       	ldi	r16, 0x00	; 0
    2266:	10 e0       	ldi	r17, 0x00	; 0
    2268:	89 91       	ld	r24, Y+
    226a:	60 91 f9 02 	lds	r22, 0x02F9
    226e:	70 91 fa 02 	lds	r23, 0x02FA
    2272:	db 01       	movw	r26, r22
    2274:	18 96       	adiw	r26, 0x08	; 8
    2276:	ed 91       	ld	r30, X+
    2278:	fc 91       	ld	r31, X
    227a:	19 97       	sbiw	r26, 0x09	; 9
    227c:	88 23       	and	r24, r24
    227e:	31 f0       	breq	.+12     	; 0x228c <puts+0x40>
    2280:	19 95       	eicall
    2282:	89 2b       	or	r24, r25
    2284:	89 f3       	breq	.-30     	; 0x2268 <puts+0x1c>
    2286:	0f ef       	ldi	r16, 0xFF	; 255
    2288:	1f ef       	ldi	r17, 0xFF	; 255
    228a:	ee cf       	rjmp	.-36     	; 0x2268 <puts+0x1c>
    228c:	8a e0       	ldi	r24, 0x0A	; 10
    228e:	19 95       	eicall
    2290:	89 2b       	or	r24, r25
    2292:	11 f4       	brne	.+4      	; 0x2298 <puts+0x4c>
    2294:	c8 01       	movw	r24, r16
    2296:	02 c0       	rjmp	.+4      	; 0x229c <puts+0x50>
    2298:	8f ef       	ldi	r24, 0xFF	; 255
    229a:	9f ef       	ldi	r25, 0xFF	; 255
    229c:	df 91       	pop	r29
    229e:	cf 91       	pop	r28
    22a0:	1f 91       	pop	r17
    22a2:	0f 91       	pop	r16
    22a4:	08 95       	ret

000022a6 <__ultoa_invert>:
    22a6:	fa 01       	movw	r30, r20
    22a8:	aa 27       	eor	r26, r26
    22aa:	28 30       	cpi	r18, 0x08	; 8
    22ac:	51 f1       	breq	.+84     	; 0x2302 <__ultoa_invert+0x5c>
    22ae:	20 31       	cpi	r18, 0x10	; 16
    22b0:	81 f1       	breq	.+96     	; 0x2312 <__ultoa_invert+0x6c>
    22b2:	e8 94       	clt
    22b4:	6f 93       	push	r22
    22b6:	6e 7f       	andi	r22, 0xFE	; 254
    22b8:	6e 5f       	subi	r22, 0xFE	; 254
    22ba:	7f 4f       	sbci	r23, 0xFF	; 255
    22bc:	8f 4f       	sbci	r24, 0xFF	; 255
    22be:	9f 4f       	sbci	r25, 0xFF	; 255
    22c0:	af 4f       	sbci	r26, 0xFF	; 255
    22c2:	b1 e0       	ldi	r27, 0x01	; 1
    22c4:	3e d0       	rcall	.+124    	; 0x2342 <__ultoa_invert+0x9c>
    22c6:	b4 e0       	ldi	r27, 0x04	; 4
    22c8:	3c d0       	rcall	.+120    	; 0x2342 <__ultoa_invert+0x9c>
    22ca:	67 0f       	add	r22, r23
    22cc:	78 1f       	adc	r23, r24
    22ce:	89 1f       	adc	r24, r25
    22d0:	9a 1f       	adc	r25, r26
    22d2:	a1 1d       	adc	r26, r1
    22d4:	68 0f       	add	r22, r24
    22d6:	79 1f       	adc	r23, r25
    22d8:	8a 1f       	adc	r24, r26
    22da:	91 1d       	adc	r25, r1
    22dc:	a1 1d       	adc	r26, r1
    22de:	6a 0f       	add	r22, r26
    22e0:	71 1d       	adc	r23, r1
    22e2:	81 1d       	adc	r24, r1
    22e4:	91 1d       	adc	r25, r1
    22e6:	a1 1d       	adc	r26, r1
    22e8:	20 d0       	rcall	.+64     	; 0x232a <__ultoa_invert+0x84>
    22ea:	09 f4       	brne	.+2      	; 0x22ee <__ultoa_invert+0x48>
    22ec:	68 94       	set
    22ee:	3f 91       	pop	r19
    22f0:	2a e0       	ldi	r18, 0x0A	; 10
    22f2:	26 9f       	mul	r18, r22
    22f4:	11 24       	eor	r1, r1
    22f6:	30 19       	sub	r19, r0
    22f8:	30 5d       	subi	r19, 0xD0	; 208
    22fa:	31 93       	st	Z+, r19
    22fc:	de f6       	brtc	.-74     	; 0x22b4 <__ultoa_invert+0xe>
    22fe:	cf 01       	movw	r24, r30
    2300:	08 95       	ret
    2302:	46 2f       	mov	r20, r22
    2304:	47 70       	andi	r20, 0x07	; 7
    2306:	40 5d       	subi	r20, 0xD0	; 208
    2308:	41 93       	st	Z+, r20
    230a:	b3 e0       	ldi	r27, 0x03	; 3
    230c:	0f d0       	rcall	.+30     	; 0x232c <__ultoa_invert+0x86>
    230e:	c9 f7       	brne	.-14     	; 0x2302 <__ultoa_invert+0x5c>
    2310:	f6 cf       	rjmp	.-20     	; 0x22fe <__ultoa_invert+0x58>
    2312:	46 2f       	mov	r20, r22
    2314:	4f 70       	andi	r20, 0x0F	; 15
    2316:	40 5d       	subi	r20, 0xD0	; 208
    2318:	4a 33       	cpi	r20, 0x3A	; 58
    231a:	18 f0       	brcs	.+6      	; 0x2322 <__ultoa_invert+0x7c>
    231c:	49 5d       	subi	r20, 0xD9	; 217
    231e:	31 fd       	sbrc	r19, 1
    2320:	40 52       	subi	r20, 0x20	; 32
    2322:	41 93       	st	Z+, r20
    2324:	02 d0       	rcall	.+4      	; 0x232a <__ultoa_invert+0x84>
    2326:	a9 f7       	brne	.-22     	; 0x2312 <__ultoa_invert+0x6c>
    2328:	ea cf       	rjmp	.-44     	; 0x22fe <__ultoa_invert+0x58>
    232a:	b4 e0       	ldi	r27, 0x04	; 4
    232c:	a6 95       	lsr	r26
    232e:	97 95       	ror	r25
    2330:	87 95       	ror	r24
    2332:	77 95       	ror	r23
    2334:	67 95       	ror	r22
    2336:	ba 95       	dec	r27
    2338:	c9 f7       	brne	.-14     	; 0x232c <__ultoa_invert+0x86>
    233a:	00 97       	sbiw	r24, 0x00	; 0
    233c:	61 05       	cpc	r22, r1
    233e:	71 05       	cpc	r23, r1
    2340:	08 95       	ret
    2342:	9b 01       	movw	r18, r22
    2344:	ac 01       	movw	r20, r24
    2346:	0a 2e       	mov	r0, r26
    2348:	06 94       	lsr	r0
    234a:	57 95       	ror	r21
    234c:	47 95       	ror	r20
    234e:	37 95       	ror	r19
    2350:	27 95       	ror	r18
    2352:	ba 95       	dec	r27
    2354:	c9 f7       	brne	.-14     	; 0x2348 <__ultoa_invert+0xa2>
    2356:	62 0f       	add	r22, r18
    2358:	73 1f       	adc	r23, r19
    235a:	84 1f       	adc	r24, r20
    235c:	95 1f       	adc	r25, r21
    235e:	a0 1d       	adc	r26, r0
    2360:	08 95       	ret

00002362 <calloc>:
    2362:	0f 93       	push	r16
    2364:	1f 93       	push	r17
    2366:	cf 93       	push	r28
    2368:	df 93       	push	r29
    236a:	86 9f       	mul	r24, r22
    236c:	80 01       	movw	r16, r0
    236e:	87 9f       	mul	r24, r23
    2370:	10 0d       	add	r17, r0
    2372:	96 9f       	mul	r25, r22
    2374:	10 0d       	add	r17, r0
    2376:	11 24       	eor	r1, r1
    2378:	c8 01       	movw	r24, r16
    237a:	0d d0       	rcall	.+26     	; 0x2396 <malloc>
    237c:	ec 01       	movw	r28, r24
    237e:	00 97       	sbiw	r24, 0x00	; 0
    2380:	21 f0       	breq	.+8      	; 0x238a <calloc+0x28>
    2382:	a8 01       	movw	r20, r16
    2384:	60 e0       	ldi	r22, 0x00	; 0
    2386:	70 e0       	ldi	r23, 0x00	; 0
    2388:	2d d1       	rcall	.+602    	; 0x25e4 <memset>
    238a:	ce 01       	movw	r24, r28
    238c:	df 91       	pop	r29
    238e:	cf 91       	pop	r28
    2390:	1f 91       	pop	r17
    2392:	0f 91       	pop	r16
    2394:	08 95       	ret

00002396 <malloc>:
    2396:	cf 93       	push	r28
    2398:	df 93       	push	r29
    239a:	82 30       	cpi	r24, 0x02	; 2
    239c:	91 05       	cpc	r25, r1
    239e:	10 f4       	brcc	.+4      	; 0x23a4 <malloc+0xe>
    23a0:	82 e0       	ldi	r24, 0x02	; 2
    23a2:	90 e0       	ldi	r25, 0x00	; 0
    23a4:	e0 91 ff 02 	lds	r30, 0x02FF
    23a8:	f0 91 00 03 	lds	r31, 0x0300
    23ac:	20 e0       	ldi	r18, 0x00	; 0
    23ae:	30 e0       	ldi	r19, 0x00	; 0
    23b0:	a0 e0       	ldi	r26, 0x00	; 0
    23b2:	b0 e0       	ldi	r27, 0x00	; 0
    23b4:	30 97       	sbiw	r30, 0x00	; 0
    23b6:	39 f1       	breq	.+78     	; 0x2406 <malloc+0x70>
    23b8:	40 81       	ld	r20, Z
    23ba:	51 81       	ldd	r21, Z+1	; 0x01
    23bc:	48 17       	cp	r20, r24
    23be:	59 07       	cpc	r21, r25
    23c0:	b8 f0       	brcs	.+46     	; 0x23f0 <malloc+0x5a>
    23c2:	48 17       	cp	r20, r24
    23c4:	59 07       	cpc	r21, r25
    23c6:	71 f4       	brne	.+28     	; 0x23e4 <malloc+0x4e>
    23c8:	82 81       	ldd	r24, Z+2	; 0x02
    23ca:	93 81       	ldd	r25, Z+3	; 0x03
    23cc:	10 97       	sbiw	r26, 0x00	; 0
    23ce:	29 f0       	breq	.+10     	; 0x23da <malloc+0x44>
    23d0:	13 96       	adiw	r26, 0x03	; 3
    23d2:	9c 93       	st	X, r25
    23d4:	8e 93       	st	-X, r24
    23d6:	12 97       	sbiw	r26, 0x02	; 2
    23d8:	2c c0       	rjmp	.+88     	; 0x2432 <malloc+0x9c>
    23da:	90 93 00 03 	sts	0x0300, r25
    23de:	80 93 ff 02 	sts	0x02FF, r24
    23e2:	27 c0       	rjmp	.+78     	; 0x2432 <malloc+0x9c>
    23e4:	21 15       	cp	r18, r1
    23e6:	31 05       	cpc	r19, r1
    23e8:	31 f0       	breq	.+12     	; 0x23f6 <malloc+0x60>
    23ea:	42 17       	cp	r20, r18
    23ec:	53 07       	cpc	r21, r19
    23ee:	18 f0       	brcs	.+6      	; 0x23f6 <malloc+0x60>
    23f0:	a9 01       	movw	r20, r18
    23f2:	db 01       	movw	r26, r22
    23f4:	01 c0       	rjmp	.+2      	; 0x23f8 <malloc+0x62>
    23f6:	ef 01       	movw	r28, r30
    23f8:	9a 01       	movw	r18, r20
    23fa:	bd 01       	movw	r22, r26
    23fc:	df 01       	movw	r26, r30
    23fe:	02 80       	ldd	r0, Z+2	; 0x02
    2400:	f3 81       	ldd	r31, Z+3	; 0x03
    2402:	e0 2d       	mov	r30, r0
    2404:	d7 cf       	rjmp	.-82     	; 0x23b4 <malloc+0x1e>
    2406:	21 15       	cp	r18, r1
    2408:	31 05       	cpc	r19, r1
    240a:	f9 f0       	breq	.+62     	; 0x244a <malloc+0xb4>
    240c:	28 1b       	sub	r18, r24
    240e:	39 0b       	sbc	r19, r25
    2410:	24 30       	cpi	r18, 0x04	; 4
    2412:	31 05       	cpc	r19, r1
    2414:	80 f4       	brcc	.+32     	; 0x2436 <malloc+0xa0>
    2416:	8a 81       	ldd	r24, Y+2	; 0x02
    2418:	9b 81       	ldd	r25, Y+3	; 0x03
    241a:	61 15       	cp	r22, r1
    241c:	71 05       	cpc	r23, r1
    241e:	21 f0       	breq	.+8      	; 0x2428 <malloc+0x92>
    2420:	fb 01       	movw	r30, r22
    2422:	93 83       	std	Z+3, r25	; 0x03
    2424:	82 83       	std	Z+2, r24	; 0x02
    2426:	04 c0       	rjmp	.+8      	; 0x2430 <malloc+0x9a>
    2428:	90 93 00 03 	sts	0x0300, r25
    242c:	80 93 ff 02 	sts	0x02FF, r24
    2430:	fe 01       	movw	r30, r28
    2432:	32 96       	adiw	r30, 0x02	; 2
    2434:	44 c0       	rjmp	.+136    	; 0x24be <malloc+0x128>
    2436:	fe 01       	movw	r30, r28
    2438:	e2 0f       	add	r30, r18
    243a:	f3 1f       	adc	r31, r19
    243c:	81 93       	st	Z+, r24
    243e:	91 93       	st	Z+, r25
    2440:	22 50       	subi	r18, 0x02	; 2
    2442:	31 09       	sbc	r19, r1
    2444:	39 83       	std	Y+1, r19	; 0x01
    2446:	28 83       	st	Y, r18
    2448:	3a c0       	rjmp	.+116    	; 0x24be <malloc+0x128>
    244a:	20 91 fd 02 	lds	r18, 0x02FD
    244e:	30 91 fe 02 	lds	r19, 0x02FE
    2452:	23 2b       	or	r18, r19
    2454:	41 f4       	brne	.+16     	; 0x2466 <malloc+0xd0>
    2456:	20 91 02 02 	lds	r18, 0x0202
    245a:	30 91 03 02 	lds	r19, 0x0203
    245e:	30 93 fe 02 	sts	0x02FE, r19
    2462:	20 93 fd 02 	sts	0x02FD, r18
    2466:	20 91 00 02 	lds	r18, 0x0200
    246a:	30 91 01 02 	lds	r19, 0x0201
    246e:	21 15       	cp	r18, r1
    2470:	31 05       	cpc	r19, r1
    2472:	41 f4       	brne	.+16     	; 0x2484 <malloc+0xee>
    2474:	2d b7       	in	r18, 0x3d	; 61
    2476:	3e b7       	in	r19, 0x3e	; 62
    2478:	40 91 04 02 	lds	r20, 0x0204
    247c:	50 91 05 02 	lds	r21, 0x0205
    2480:	24 1b       	sub	r18, r20
    2482:	35 0b       	sbc	r19, r21
    2484:	e0 91 fd 02 	lds	r30, 0x02FD
    2488:	f0 91 fe 02 	lds	r31, 0x02FE
    248c:	e2 17       	cp	r30, r18
    248e:	f3 07       	cpc	r31, r19
    2490:	a0 f4       	brcc	.+40     	; 0x24ba <malloc+0x124>
    2492:	2e 1b       	sub	r18, r30
    2494:	3f 0b       	sbc	r19, r31
    2496:	28 17       	cp	r18, r24
    2498:	39 07       	cpc	r19, r25
    249a:	78 f0       	brcs	.+30     	; 0x24ba <malloc+0x124>
    249c:	ac 01       	movw	r20, r24
    249e:	4e 5f       	subi	r20, 0xFE	; 254
    24a0:	5f 4f       	sbci	r21, 0xFF	; 255
    24a2:	24 17       	cp	r18, r20
    24a4:	35 07       	cpc	r19, r21
    24a6:	48 f0       	brcs	.+18     	; 0x24ba <malloc+0x124>
    24a8:	4e 0f       	add	r20, r30
    24aa:	5f 1f       	adc	r21, r31
    24ac:	50 93 fe 02 	sts	0x02FE, r21
    24b0:	40 93 fd 02 	sts	0x02FD, r20
    24b4:	81 93       	st	Z+, r24
    24b6:	91 93       	st	Z+, r25
    24b8:	02 c0       	rjmp	.+4      	; 0x24be <malloc+0x128>
    24ba:	e0 e0       	ldi	r30, 0x00	; 0
    24bc:	f0 e0       	ldi	r31, 0x00	; 0
    24be:	cf 01       	movw	r24, r30
    24c0:	df 91       	pop	r29
    24c2:	cf 91       	pop	r28
    24c4:	08 95       	ret

000024c6 <free>:
    24c6:	cf 93       	push	r28
    24c8:	df 93       	push	r29
    24ca:	00 97       	sbiw	r24, 0x00	; 0
    24cc:	09 f4       	brne	.+2      	; 0x24d0 <free+0xa>
    24ce:	87 c0       	rjmp	.+270    	; 0x25de <free+0x118>
    24d0:	fc 01       	movw	r30, r24
    24d2:	32 97       	sbiw	r30, 0x02	; 2
    24d4:	13 82       	std	Z+3, r1	; 0x03
    24d6:	12 82       	std	Z+2, r1	; 0x02
    24d8:	c0 91 ff 02 	lds	r28, 0x02FF
    24dc:	d0 91 00 03 	lds	r29, 0x0300
    24e0:	20 97       	sbiw	r28, 0x00	; 0
    24e2:	81 f4       	brne	.+32     	; 0x2504 <free+0x3e>
    24e4:	20 81       	ld	r18, Z
    24e6:	31 81       	ldd	r19, Z+1	; 0x01
    24e8:	28 0f       	add	r18, r24
    24ea:	39 1f       	adc	r19, r25
    24ec:	80 91 fd 02 	lds	r24, 0x02FD
    24f0:	90 91 fe 02 	lds	r25, 0x02FE
    24f4:	82 17       	cp	r24, r18
    24f6:	93 07       	cpc	r25, r19
    24f8:	79 f5       	brne	.+94     	; 0x2558 <free+0x92>
    24fa:	f0 93 fe 02 	sts	0x02FE, r31
    24fe:	e0 93 fd 02 	sts	0x02FD, r30
    2502:	6d c0       	rjmp	.+218    	; 0x25de <free+0x118>
    2504:	de 01       	movw	r26, r28
    2506:	20 e0       	ldi	r18, 0x00	; 0
    2508:	30 e0       	ldi	r19, 0x00	; 0
    250a:	ae 17       	cp	r26, r30
    250c:	bf 07       	cpc	r27, r31
    250e:	50 f4       	brcc	.+20     	; 0x2524 <free+0x5e>
    2510:	12 96       	adiw	r26, 0x02	; 2
    2512:	4d 91       	ld	r20, X+
    2514:	5c 91       	ld	r21, X
    2516:	13 97       	sbiw	r26, 0x03	; 3
    2518:	9d 01       	movw	r18, r26
    251a:	41 15       	cp	r20, r1
    251c:	51 05       	cpc	r21, r1
    251e:	09 f1       	breq	.+66     	; 0x2562 <free+0x9c>
    2520:	da 01       	movw	r26, r20
    2522:	f3 cf       	rjmp	.-26     	; 0x250a <free+0x44>
    2524:	b3 83       	std	Z+3, r27	; 0x03
    2526:	a2 83       	std	Z+2, r26	; 0x02
    2528:	40 81       	ld	r20, Z
    252a:	51 81       	ldd	r21, Z+1	; 0x01
    252c:	84 0f       	add	r24, r20
    252e:	95 1f       	adc	r25, r21
    2530:	8a 17       	cp	r24, r26
    2532:	9b 07       	cpc	r25, r27
    2534:	71 f4       	brne	.+28     	; 0x2552 <free+0x8c>
    2536:	8d 91       	ld	r24, X+
    2538:	9c 91       	ld	r25, X
    253a:	11 97       	sbiw	r26, 0x01	; 1
    253c:	84 0f       	add	r24, r20
    253e:	95 1f       	adc	r25, r21
    2540:	02 96       	adiw	r24, 0x02	; 2
    2542:	91 83       	std	Z+1, r25	; 0x01
    2544:	80 83       	st	Z, r24
    2546:	12 96       	adiw	r26, 0x02	; 2
    2548:	8d 91       	ld	r24, X+
    254a:	9c 91       	ld	r25, X
    254c:	13 97       	sbiw	r26, 0x03	; 3
    254e:	93 83       	std	Z+3, r25	; 0x03
    2550:	82 83       	std	Z+2, r24	; 0x02
    2552:	21 15       	cp	r18, r1
    2554:	31 05       	cpc	r19, r1
    2556:	29 f4       	brne	.+10     	; 0x2562 <free+0x9c>
    2558:	f0 93 00 03 	sts	0x0300, r31
    255c:	e0 93 ff 02 	sts	0x02FF, r30
    2560:	3e c0       	rjmp	.+124    	; 0x25de <free+0x118>
    2562:	d9 01       	movw	r26, r18
    2564:	13 96       	adiw	r26, 0x03	; 3
    2566:	fc 93       	st	X, r31
    2568:	ee 93       	st	-X, r30
    256a:	12 97       	sbiw	r26, 0x02	; 2
    256c:	4d 91       	ld	r20, X+
    256e:	5d 91       	ld	r21, X+
    2570:	a4 0f       	add	r26, r20
    2572:	b5 1f       	adc	r27, r21
    2574:	ea 17       	cp	r30, r26
    2576:	fb 07       	cpc	r31, r27
    2578:	79 f4       	brne	.+30     	; 0x2598 <free+0xd2>
    257a:	80 81       	ld	r24, Z
    257c:	91 81       	ldd	r25, Z+1	; 0x01
    257e:	84 0f       	add	r24, r20
    2580:	95 1f       	adc	r25, r21
    2582:	02 96       	adiw	r24, 0x02	; 2
    2584:	d9 01       	movw	r26, r18
    2586:	11 96       	adiw	r26, 0x01	; 1
    2588:	9c 93       	st	X, r25
    258a:	8e 93       	st	-X, r24
    258c:	82 81       	ldd	r24, Z+2	; 0x02
    258e:	93 81       	ldd	r25, Z+3	; 0x03
    2590:	13 96       	adiw	r26, 0x03	; 3
    2592:	9c 93       	st	X, r25
    2594:	8e 93       	st	-X, r24
    2596:	12 97       	sbiw	r26, 0x02	; 2
    2598:	e0 e0       	ldi	r30, 0x00	; 0
    259a:	f0 e0       	ldi	r31, 0x00	; 0
    259c:	8a 81       	ldd	r24, Y+2	; 0x02
    259e:	9b 81       	ldd	r25, Y+3	; 0x03
    25a0:	00 97       	sbiw	r24, 0x00	; 0
    25a2:	19 f0       	breq	.+6      	; 0x25aa <free+0xe4>
    25a4:	fe 01       	movw	r30, r28
    25a6:	ec 01       	movw	r28, r24
    25a8:	f9 cf       	rjmp	.-14     	; 0x259c <free+0xd6>
    25aa:	ce 01       	movw	r24, r28
    25ac:	02 96       	adiw	r24, 0x02	; 2
    25ae:	28 81       	ld	r18, Y
    25b0:	39 81       	ldd	r19, Y+1	; 0x01
    25b2:	82 0f       	add	r24, r18
    25b4:	93 1f       	adc	r25, r19
    25b6:	20 91 fd 02 	lds	r18, 0x02FD
    25ba:	30 91 fe 02 	lds	r19, 0x02FE
    25be:	28 17       	cp	r18, r24
    25c0:	39 07       	cpc	r19, r25
    25c2:	69 f4       	brne	.+26     	; 0x25de <free+0x118>
    25c4:	30 97       	sbiw	r30, 0x00	; 0
    25c6:	29 f4       	brne	.+10     	; 0x25d2 <free+0x10c>
    25c8:	10 92 00 03 	sts	0x0300, r1
    25cc:	10 92 ff 02 	sts	0x02FF, r1
    25d0:	02 c0       	rjmp	.+4      	; 0x25d6 <free+0x110>
    25d2:	13 82       	std	Z+3, r1	; 0x03
    25d4:	12 82       	std	Z+2, r1	; 0x02
    25d6:	d0 93 fe 02 	sts	0x02FE, r29
    25da:	c0 93 fd 02 	sts	0x02FD, r28
    25de:	df 91       	pop	r29
    25e0:	cf 91       	pop	r28
    25e2:	08 95       	ret

000025e4 <memset>:
    25e4:	dc 01       	movw	r26, r24
    25e6:	01 c0       	rjmp	.+2      	; 0x25ea <memset+0x6>
    25e8:	6d 93       	st	X+, r22
    25ea:	41 50       	subi	r20, 0x01	; 1
    25ec:	50 40       	sbci	r21, 0x00	; 0
    25ee:	e0 f7       	brcc	.-8      	; 0x25e8 <memset+0x4>
    25f0:	08 95       	ret

000025f2 <_exit>:
    25f2:	f8 94       	cli

000025f4 <__stop_program>:
    25f4:	ff cf       	rjmp	.-2      	; 0x25f4 <__stop_program>
