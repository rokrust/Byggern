
Node2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800200  00001ffc  00002090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ffc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002a  0080029e  0080029e  0000212e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000212e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002b8  00000000  00000000  0000218a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002257  00000000  00000000  00002442  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001006  00000000  00000000  00004699  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001709  00000000  00000000  0000569f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000006d0  00000000  00000000  00006da8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006f9  00000000  00000000  00007478  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000125f  00000000  00000000  00007b71  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001f8  00000000  00000000  00008dd0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	43 c1       	rjmp	.+646    	; 0x288 <__ctors_end>
       2:	00 00       	nop
       4:	61 c1       	rjmp	.+706    	; 0x2c8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c1       	rjmp	.+702    	; 0x2c8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c1       	rjmp	.+698    	; 0x2c8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c1       	rjmp	.+694    	; 0x2c8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c1       	rjmp	.+690    	; 0x2c8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c1       	rjmp	.+686    	; 0x2c8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c1       	rjmp	.+682    	; 0x2c8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c1       	rjmp	.+678    	; 0x2c8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c1       	rjmp	.+674    	; 0x2c8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c1       	rjmp	.+670    	; 0x2c8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c1       	rjmp	.+666    	; 0x2c8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c1       	rjmp	.+662    	; 0x2c8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c1       	rjmp	.+658    	; 0x2c8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c1       	rjmp	.+654    	; 0x2c8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c1       	rjmp	.+650    	; 0x2c8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c1       	rjmp	.+646    	; 0x2c8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c1       	rjmp	.+642    	; 0x2c8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c1       	rjmp	.+638    	; 0x2c8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c1       	rjmp	.+634    	; 0x2c8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c1       	rjmp	.+630    	; 0x2c8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c1       	rjmp	.+626    	; 0x2c8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c1       	rjmp	.+622    	; 0x2c8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c1       	rjmp	.+618    	; 0x2c8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c1       	rjmp	.+614    	; 0x2c8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c1       	rjmp	.+610    	; 0x2c8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c1       	rjmp	.+606    	; 0x2c8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c1       	rjmp	.+602    	; 0x2c8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c1       	rjmp	.+598    	; 0x2c8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c1       	rjmp	.+594    	; 0x2c8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c1       	rjmp	.+590    	; 0x2c8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c1       	rjmp	.+586    	; 0x2c8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c1       	rjmp	.+582    	; 0x2c8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c1       	rjmp	.+578    	; 0x2c8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c1       	rjmp	.+574    	; 0x2c8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1d c1       	rjmp	.+570    	; 0x2c8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1b c1       	rjmp	.+566    	; 0x2c8 <__bad_interrupt>
      92:	00 00       	nop
      94:	19 c1       	rjmp	.+562    	; 0x2c8 <__bad_interrupt>
      96:	00 00       	nop
      98:	17 c1       	rjmp	.+558    	; 0x2c8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	51 c6       	rjmp	.+3234   	; 0xd40 <__vector_39>
      9e:	00 00       	nop
      a0:	13 c1       	rjmp	.+550    	; 0x2c8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	11 c1       	rjmp	.+546    	; 0x2c8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0f c1       	rjmp	.+542    	; 0x2c8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0d c1       	rjmp	.+538    	; 0x2c8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	0b c1       	rjmp	.+534    	; 0x2c8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	09 c1       	rjmp	.+530    	; 0x2c8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	07 c1       	rjmp	.+526    	; 0x2c8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	05 c1       	rjmp	.+522    	; 0x2c8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	03 c1       	rjmp	.+518    	; 0x2c8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	01 c1       	rjmp	.+514    	; 0x2c8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ff c0       	rjmp	.+510    	; 0x2c8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	fd c0       	rjmp	.+506    	; 0x2c8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	fb c0       	rjmp	.+502    	; 0x2c8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	f9 c0       	rjmp	.+498    	; 0x2c8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	f7 c0       	rjmp	.+494    	; 0x2c8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	f5 c0       	rjmp	.+490    	; 0x2c8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	f3 c0       	rjmp	.+486    	; 0x2c8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	bb 06       	cpc	r11, r27
      e6:	0d 07       	cpc	r16, r29
      e8:	0d 07       	cpc	r16, r29
      ea:	0d 07       	cpc	r16, r29
      ec:	0d 07       	cpc	r16, r29
      ee:	0d 07       	cpc	r16, r29
      f0:	0d 07       	cpc	r16, r29
      f2:	0d 07       	cpc	r16, r29
      f4:	bb 06       	cpc	r11, r27
      f6:	0d 07       	cpc	r16, r29
      f8:	0d 07       	cpc	r16, r29
      fa:	0d 07       	cpc	r16, r29
      fc:	0d 07       	cpc	r16, r29
      fe:	0d 07       	cpc	r16, r29
     100:	0d 07       	cpc	r16, r29
     102:	0d 07       	cpc	r16, r29
     104:	bd 06       	cpc	r11, r29
     106:	0d 07       	cpc	r16, r29
     108:	0d 07       	cpc	r16, r29
     10a:	0d 07       	cpc	r16, r29
     10c:	0d 07       	cpc	r16, r29
     10e:	0d 07       	cpc	r16, r29
     110:	0d 07       	cpc	r16, r29
     112:	0d 07       	cpc	r16, r29
     114:	0d 07       	cpc	r16, r29
     116:	0d 07       	cpc	r16, r29
     118:	0d 07       	cpc	r16, r29
     11a:	0d 07       	cpc	r16, r29
     11c:	0d 07       	cpc	r16, r29
     11e:	0d 07       	cpc	r16, r29
     120:	0d 07       	cpc	r16, r29
     122:	0d 07       	cpc	r16, r29
     124:	bd 06       	cpc	r11, r29
     126:	0d 07       	cpc	r16, r29
     128:	0d 07       	cpc	r16, r29
     12a:	0d 07       	cpc	r16, r29
     12c:	0d 07       	cpc	r16, r29
     12e:	0d 07       	cpc	r16, r29
     130:	0d 07       	cpc	r16, r29
     132:	0d 07       	cpc	r16, r29
     134:	0d 07       	cpc	r16, r29
     136:	0d 07       	cpc	r16, r29
     138:	0d 07       	cpc	r16, r29
     13a:	0d 07       	cpc	r16, r29
     13c:	0d 07       	cpc	r16, r29
     13e:	0d 07       	cpc	r16, r29
     140:	0d 07       	cpc	r16, r29
     142:	0d 07       	cpc	r16, r29
     144:	09 07       	cpc	r16, r25
     146:	0d 07       	cpc	r16, r29
     148:	0d 07       	cpc	r16, r29
     14a:	0d 07       	cpc	r16, r29
     14c:	0d 07       	cpc	r16, r29
     14e:	0d 07       	cpc	r16, r29
     150:	0d 07       	cpc	r16, r29
     152:	0d 07       	cpc	r16, r29
     154:	e6 06       	cpc	r14, r22
     156:	0d 07       	cpc	r16, r29
     158:	0d 07       	cpc	r16, r29
     15a:	0d 07       	cpc	r16, r29
     15c:	0d 07       	cpc	r16, r29
     15e:	0d 07       	cpc	r16, r29
     160:	0d 07       	cpc	r16, r29
     162:	0d 07       	cpc	r16, r29
     164:	0d 07       	cpc	r16, r29
     166:	0d 07       	cpc	r16, r29
     168:	0d 07       	cpc	r16, r29
     16a:	0d 07       	cpc	r16, r29
     16c:	0d 07       	cpc	r16, r29
     16e:	0d 07       	cpc	r16, r29
     170:	0d 07       	cpc	r16, r29
     172:	0d 07       	cpc	r16, r29
     174:	da 06       	cpc	r13, r26
     176:	0d 07       	cpc	r16, r29
     178:	0d 07       	cpc	r16, r29
     17a:	0d 07       	cpc	r16, r29
     17c:	0d 07       	cpc	r16, r29
     17e:	0d 07       	cpc	r16, r29
     180:	0d 07       	cpc	r16, r29
     182:	0d 07       	cpc	r16, r29
     184:	f8 06       	cpc	r15, r24

00000186 <__trampolines_end>:
     186:	6e 61       	ori	r22, 0x1E	; 30
     188:	6e 00       	.word	0x006e	; ????

0000018a <__c.2159>:
     18a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     19a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     1aa:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     1ba:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     1ca:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1da:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1ea:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1fa:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     20a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     21a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     22a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     23a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     24a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     25a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     26a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     27a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000288 <__ctors_end>:
     288:	11 24       	eor	r1, r1
     28a:	1f be       	out	0x3f, r1	; 63
     28c:	cf ef       	ldi	r28, 0xFF	; 255
     28e:	d1 e2       	ldi	r29, 0x21	; 33
     290:	de bf       	out	0x3e, r29	; 62
     292:	cd bf       	out	0x3d, r28	; 61
     294:	00 e0       	ldi	r16, 0x00	; 0
     296:	0c bf       	out	0x3c, r16	; 60

00000298 <__do_copy_data>:
     298:	12 e0       	ldi	r17, 0x02	; 2
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b2 e0       	ldi	r27, 0x02	; 2
     29e:	ec ef       	ldi	r30, 0xFC	; 252
     2a0:	ff e1       	ldi	r31, 0x1F	; 31
     2a2:	00 e0       	ldi	r16, 0x00	; 0
     2a4:	0b bf       	out	0x3b, r16	; 59
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__do_copy_data+0x14>
     2a8:	07 90       	elpm	r0, Z+
     2aa:	0d 92       	st	X+, r0
     2ac:	ae 39       	cpi	r26, 0x9E	; 158
     2ae:	b1 07       	cpc	r27, r17
     2b0:	d9 f7       	brne	.-10     	; 0x2a8 <__do_copy_data+0x10>

000002b2 <__do_clear_bss>:
     2b2:	22 e0       	ldi	r18, 0x02	; 2
     2b4:	ae e9       	ldi	r26, 0x9E	; 158
     2b6:	b2 e0       	ldi	r27, 0x02	; 2
     2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
     2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
     2bc:	a8 3c       	cpi	r26, 0xC8	; 200
     2be:	b2 07       	cpc	r27, r18
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
     2c2:	96 d4       	rcall	.+2348   	; 0xbf0 <main>
     2c4:	0c 94 fc 0f 	jmp	0x1ff8	; 0x1ff8 <_exit>

000002c8 <__bad_interrupt>:
     2c8:	9b ce       	rjmp	.-714    	; 0x0 <__vectors>

000002ca <pid_init>:

float reference;
float integral;
float prev_error;

void pid_init(float _kp, float _ki, float _kd){
     2ca:	ef 92       	push	r14
     2cc:	ff 92       	push	r15
     2ce:	0f 93       	push	r16
     2d0:	1f 93       	push	r17
	kp = _kp;
     2d2:	60 93 ba 02 	sts	0x02BA, r22
     2d6:	70 93 bb 02 	sts	0x02BB, r23
     2da:	80 93 bc 02 	sts	0x02BC, r24
     2de:	90 93 bd 02 	sts	0x02BD, r25
	ki = _ki;
     2e2:	20 93 ae 02 	sts	0x02AE, r18
     2e6:	30 93 af 02 	sts	0x02AF, r19
     2ea:	40 93 b0 02 	sts	0x02B0, r20
     2ee:	50 93 b1 02 	sts	0x02B1, r21
	kd = _kd;
     2f2:	e0 92 a6 02 	sts	0x02A6, r14
     2f6:	f0 92 a7 02 	sts	0x02A7, r15
     2fa:	00 93 a8 02 	sts	0x02A8, r16
     2fe:	10 93 a9 02 	sts	0x02A9, r17
	
	reference	= 0;
     302:	10 92 aa 02 	sts	0x02AA, r1
     306:	10 92 ab 02 	sts	0x02AB, r1
     30a:	10 92 ac 02 	sts	0x02AC, r1
     30e:	10 92 ad 02 	sts	0x02AD, r1
	integral	= 0;
     312:	10 92 b6 02 	sts	0x02B6, r1
     316:	10 92 b7 02 	sts	0x02B7, r1
     31a:	10 92 b8 02 	sts	0x02B8, r1
     31e:	10 92 b9 02 	sts	0x02B9, r1
	prev_error	= 0;
     322:	10 92 b2 02 	sts	0x02B2, r1
     326:	10 92 b3 02 	sts	0x02B3, r1
     32a:	10 92 b4 02 	sts	0x02B4, r1
     32e:	10 92 b5 02 	sts	0x02B5, r1
	
}
     332:	1f 91       	pop	r17
     334:	0f 91       	pop	r16
     336:	ff 90       	pop	r15
     338:	ef 90       	pop	r14
     33a:	08 95       	ret

0000033c <pid_generate>:


float pid_generate(float r, float y, float dt){
     33c:	4f 92       	push	r4
     33e:	5f 92       	push	r5
     340:	6f 92       	push	r6
     342:	7f 92       	push	r7
     344:	8f 92       	push	r8
     346:	9f 92       	push	r9
     348:	af 92       	push	r10
     34a:	bf 92       	push	r11
     34c:	cf 92       	push	r12
     34e:	df 92       	push	r13
     350:	ef 92       	push	r14
     352:	ff 92       	push	r15
     354:	0f 93       	push	r16
     356:	1f 93       	push	r17
     358:	27 01       	movw	r4, r14
     35a:	38 01       	movw	r6, r16
	float error = r - y;
     35c:	74 d5       	rcall	.+2792   	; 0xe46 <__subsf3>
     35e:	6b 01       	movw	r12, r22
     360:	7c 01       	movw	r14, r24
	integral += error * dt;
     362:	a3 01       	movw	r20, r6
     364:	92 01       	movw	r18, r4
     366:	fb d6       	rcall	.+3574   	; 0x115e <__mulsf3>
     368:	20 91 b6 02 	lds	r18, 0x02B6
     36c:	30 91 b7 02 	lds	r19, 0x02B7
     370:	40 91 b8 02 	lds	r20, 0x02B8
     374:	50 91 b9 02 	lds	r21, 0x02B9
     378:	67 d5       	rcall	.+2766   	; 0xe48 <__addsf3>
     37a:	4b 01       	movw	r8, r22
     37c:	5c 01       	movw	r10, r24
     37e:	60 93 b6 02 	sts	0x02B6, r22
     382:	70 93 b7 02 	sts	0x02B7, r23
     386:	80 93 b8 02 	sts	0x02B8, r24
     38a:	90 93 b9 02 	sts	0x02B9, r25
	float derivative = (error - prev_error) / dt;
     38e:	20 91 b2 02 	lds	r18, 0x02B2
     392:	30 91 b3 02 	lds	r19, 0x02B3
     396:	40 91 b4 02 	lds	r20, 0x02B4
     39a:	50 91 b5 02 	lds	r21, 0x02B5
     39e:	c7 01       	movw	r24, r14
     3a0:	b6 01       	movw	r22, r12
     3a2:	51 d5       	rcall	.+2722   	; 0xe46 <__subsf3>
     3a4:	a3 01       	movw	r20, r6
     3a6:	92 01       	movw	r18, r4
     3a8:	b3 d5       	rcall	.+2918   	; 0xf10 <__divsf3>
     3aa:	2b 01       	movw	r4, r22
     3ac:	3c 01       	movw	r6, r24

	prev_error = error;
     3ae:	c0 92 b2 02 	sts	0x02B2, r12
     3b2:	d0 92 b3 02 	sts	0x02B3, r13
     3b6:	e0 92 b4 02 	sts	0x02B4, r14
     3ba:	f0 92 b5 02 	sts	0x02B5, r15
	return kp*error + ki*integral + kd*derivative;
     3be:	20 91 ba 02 	lds	r18, 0x02BA
     3c2:	30 91 bb 02 	lds	r19, 0x02BB
     3c6:	40 91 bc 02 	lds	r20, 0x02BC
     3ca:	50 91 bd 02 	lds	r21, 0x02BD
     3ce:	c7 01       	movw	r24, r14
     3d0:	b6 01       	movw	r22, r12
     3d2:	c5 d6       	rcall	.+3466   	; 0x115e <__mulsf3>
     3d4:	6b 01       	movw	r12, r22
     3d6:	7c 01       	movw	r14, r24
     3d8:	20 91 ae 02 	lds	r18, 0x02AE
     3dc:	30 91 af 02 	lds	r19, 0x02AF
     3e0:	40 91 b0 02 	lds	r20, 0x02B0
     3e4:	50 91 b1 02 	lds	r21, 0x02B1
     3e8:	c5 01       	movw	r24, r10
     3ea:	b4 01       	movw	r22, r8
     3ec:	b8 d6       	rcall	.+3440   	; 0x115e <__mulsf3>
     3ee:	9b 01       	movw	r18, r22
     3f0:	ac 01       	movw	r20, r24
     3f2:	c7 01       	movw	r24, r14
     3f4:	b6 01       	movw	r22, r12
     3f6:	28 d5       	rcall	.+2640   	; 0xe48 <__addsf3>
     3f8:	6b 01       	movw	r12, r22
     3fa:	7c 01       	movw	r14, r24
     3fc:	20 91 a6 02 	lds	r18, 0x02A6
     400:	30 91 a7 02 	lds	r19, 0x02A7
     404:	40 91 a8 02 	lds	r20, 0x02A8
     408:	50 91 a9 02 	lds	r21, 0x02A9
     40c:	c3 01       	movw	r24, r6
     40e:	b2 01       	movw	r22, r4
     410:	a6 d6       	rcall	.+3404   	; 0x115e <__mulsf3>
     412:	9b 01       	movw	r18, r22
     414:	ac 01       	movw	r20, r24
     416:	c7 01       	movw	r24, r14
     418:	b6 01       	movw	r22, r12
     41a:	16 d5       	rcall	.+2604   	; 0xe48 <__addsf3>
}
     41c:	1f 91       	pop	r17
     41e:	0f 91       	pop	r16
     420:	ff 90       	pop	r15
     422:	ef 90       	pop	r14
     424:	df 90       	pop	r13
     426:	cf 90       	pop	r12
     428:	bf 90       	pop	r11
     42a:	af 90       	pop	r10
     42c:	9f 90       	pop	r9
     42e:	8f 90       	pop	r8
     430:	7f 90       	pop	r7
     432:	6f 90       	pop	r6
     434:	5f 90       	pop	r5
     436:	4f 90       	pop	r4
     438:	08 95       	ret

0000043a <pid_encoder_max_value>:

uint16_t pid_encoder_max_value(void){
     43a:	0f 93       	push	r16
     43c:	1f 93       	push	r17
     43e:	cf 93       	push	r28
     440:	df 93       	push	r29
	motor_speed(100);
     442:	84 e6       	ldi	r24, 0x64	; 100
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	13 d3       	rcall	.+1574   	; 0xa6e <motor_speed>
	uint16_t enc_val = 0, prev_enc_val = -1;
     448:	8f ef       	ldi	r24, 0xFF	; 255
     44a:	9f ef       	ldi	r25, 0xFF	; 255
     44c:	c0 e0       	ldi	r28, 0x00	; 0
     44e:	d0 e0       	ldi	r29, 0x00	; 0
	while(enc_val != prev_enc_val){
		printf("In while: %d %d\n", enc_val, prev_enc_val);
     450:	07 e0       	ldi	r16, 0x07	; 7
     452:	12 e0       	ldi	r17, 0x02	; 2
     454:	9f 93       	push	r25
     456:	8f 93       	push	r24
     458:	df 93       	push	r29
     45a:	cf 93       	push	r28
     45c:	1f 93       	push	r17
     45e:	0f 93       	push	r16
     460:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <printf>
		enc_val = motor_encoder_read();
     464:	34 d3       	rcall	.+1640   	; 0xace <motor_encoder_read>
     466:	ec 01       	movw	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     468:	87 ea       	ldi	r24, 0xA7	; 167
     46a:	91 e6       	ldi	r25, 0x61	; 97
     46c:	01 97       	sbiw	r24, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <pid_encoder_max_value+0x32>
     470:	00 c0       	rjmp	.+0      	; 0x472 <pid_encoder_max_value+0x38>
     472:	00 00       	nop
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
     474:	2c d3       	rcall	.+1624   	; 0xace <motor_encoder_read>
}

uint16_t pid_encoder_max_value(void){
	motor_speed(100);
	uint16_t enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
     476:	0f 90       	pop	r0
     478:	0f 90       	pop	r0
     47a:	0f 90       	pop	r0
     47c:	0f 90       	pop	r0
     47e:	0f 90       	pop	r0
     480:	0f 90       	pop	r0
     482:	c8 17       	cp	r28, r24
     484:	d9 07       	cpc	r29, r25
     486:	31 f7       	brne	.-52     	; 0x454 <pid_encoder_max_value+0x1a>
		printf("In while: %d %d\n", enc_val, prev_enc_val);
		enc_val = motor_encoder_read();
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
	}
	motor_speed(0);
     488:	80 e0       	ldi	r24, 0x00	; 0
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	f0 d2       	rcall	.+1504   	; 0xa6e <motor_speed>
	motor_encoder_reset();
     48e:	da d2       	rcall	.+1460   	; 0xa44 <motor_encoder_reset>
	
	motor_speed(-100);
     490:	8c e9       	ldi	r24, 0x9C	; 156
     492:	9f ef       	ldi	r25, 0xFF	; 255
     494:	ec d2       	rcall	.+1496   	; 0xa6e <motor_speed>
	enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
		enc_val = motor_encoder_read();
     496:	1b d3       	rcall	.+1590   	; 0xace <motor_encoder_read>
     498:	ec 01       	movw	r28, r24
     49a:	87 ea       	ldi	r24, 0xA7	; 167
     49c:	91 e6       	ldi	r25, 0x61	; 97
     49e:	01 97       	sbiw	r24, 0x01	; 1
     4a0:	f1 f7       	brne	.-4      	; 0x49e <pid_encoder_max_value+0x64>
     4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <pid_encoder_max_value+0x6a>
     4a4:	00 00       	nop
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
     4a6:	13 d3       	rcall	.+1574   	; 0xace <motor_encoder_read>
	motor_speed(0);
	motor_encoder_reset();
	
	motor_speed(-100);
	enc_val = 0, prev_enc_val = -1;
	while(enc_val != prev_enc_val){
     4a8:	c8 17       	cp	r28, r24
     4aa:	d9 07       	cpc	r29, r25
     4ac:	a1 f7       	brne	.-24     	; 0x496 <pid_encoder_max_value+0x5c>
		enc_val = motor_encoder_read();
		_delay_ms(100);
		prev_enc_val = motor_encoder_read();
	}
	motor_speed(0);
     4ae:	80 e0       	ldi	r24, 0x00	; 0
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	dd d2       	rcall	.+1466   	; 0xa6e <motor_speed>
	
	//Find max value of encoder.
	return enc_val;
     4b4:	ce 01       	movw	r24, r28
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28
     4ba:	1f 91       	pop	r17
     4bc:	0f 91       	pop	r16
     4be:	08 95       	ret

000004c0 <adc_init>:
#include <avr/io.h>
#include <stdint.h>
void adc_init(void){
	ADCSRA	|= (1 << ADEN) | (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2);
     4c0:	ea e7       	ldi	r30, 0x7A	; 122
     4c2:	f0 e0       	ldi	r31, 0x00	; 0
     4c4:	80 81       	ld	r24, Z
     4c6:	87 68       	ori	r24, 0x87	; 135
     4c8:	80 83       	st	Z, r24
	ADMUX	|= (1<<REFS0);
     4ca:	ec e7       	ldi	r30, 0x7C	; 124
     4cc:	f0 e0       	ldi	r31, 0x00	; 0
     4ce:	80 81       	ld	r24, Z
     4d0:	80 64       	ori	r24, 0x40	; 64
     4d2:	80 83       	st	Z, r24
	ADMUX	&= ~(1<<REFS1);
     4d4:	80 81       	ld	r24, Z
     4d6:	8f 77       	andi	r24, 0x7F	; 127
     4d8:	80 83       	st	Z, r24
     4da:	08 95       	ret

000004dc <adc_read>:
}

uint16_t adc_read(uint8_t channel){
	ADMUX	|= ((1<<channel) & 0x03);
     4dc:	ec e7       	ldi	r30, 0x7C	; 124
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	90 81       	ld	r25, Z
     4e2:	21 e0       	ldi	r18, 0x01	; 1
     4e4:	30 e0       	ldi	r19, 0x00	; 0
     4e6:	02 c0       	rjmp	.+4      	; 0x4ec <adc_read+0x10>
     4e8:	22 0f       	add	r18, r18
     4ea:	33 1f       	adc	r19, r19
     4ec:	8a 95       	dec	r24
     4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <adc_read+0xc>
     4f0:	23 70       	andi	r18, 0x03	; 3
     4f2:	92 2b       	or	r25, r18
     4f4:	90 83       	st	Z, r25
	ADCSRA	|= (1 << ADSC);
     4f6:	ea e7       	ldi	r30, 0x7A	; 122
     4f8:	f0 e0       	ldi	r31, 0x00	; 0
     4fa:	80 81       	ld	r24, Z
     4fc:	80 64       	ori	r24, 0x40	; 64
     4fe:	80 83       	st	Z, r24

	while((ADCSRA & (1<<ADSC))){ ; }
     500:	80 81       	ld	r24, Z
     502:	86 fd       	sbrc	r24, 6
     504:	fd cf       	rjmp	.-6      	; 0x500 <adc_read+0x24>

	return ADC;
     506:	80 91 78 00 	lds	r24, 0x0078
     50a:	90 91 79 00 	lds	r25, 0x0079
     50e:	08 95       	ret

00000510 <can_init>:
	printf("\n");
}

void can_handle_joystick_message(can_message msg){
		pwm_set_servo(msg.data[0]);
}
     510:	96 d2       	rcall	.+1324   	; 0xa3e <mcp_init>
     512:	4f ef       	ldi	r20, 0xFF	; 255
     514:	60 e6       	ldi	r22, 0x60	; 96
     516:	80 e6       	ldi	r24, 0x60	; 96
     518:	7a d2       	rcall	.+1268   	; 0xa0e <mcp_bitModify>
     51a:	4f ef       	ldi	r20, 0xFF	; 255
     51c:	60 e6       	ldi	r22, 0x60	; 96
     51e:	80 e7       	ldi	r24, 0x70	; 112
     520:	76 d2       	rcall	.+1260   	; 0xa0e <mcp_bitModify>
     522:	43 e0       	ldi	r20, 0x03	; 3
     524:	63 e0       	ldi	r22, 0x03	; 3
     526:	8e e2       	ldi	r24, 0x2E	; 46
     528:	72 d2       	rcall	.+1252   	; 0xa0e <mcp_bitModify>
     52a:	40 e0       	ldi	r20, 0x00	; 0
     52c:	60 ee       	ldi	r22, 0xE0	; 224
     52e:	8f e0       	ldi	r24, 0x0F	; 15
     530:	6e c2       	rjmp	.+1244   	; 0xa0e <mcp_bitModify>
     532:	08 95       	ret

00000534 <new_can_message>:
     534:	cf 93       	push	r28
     536:	df 93       	push	r29
     538:	cd b7       	in	r28, 0x3d	; 61
     53a:	de b7       	in	r29, 0x3e	; 62
     53c:	2b 97       	sbiw	r28, 0x0b	; 11
     53e:	0f b6       	in	r0, 0x3f	; 63
     540:	f8 94       	cli
     542:	de bf       	out	0x3e, r29	; 62
     544:	0f be       	out	0x3f, r0	; 63
     546:	cd bf       	out	0x3d, r28	; 61
     548:	44 23       	and	r20, r20
     54a:	61 f0       	breq	.+24     	; 0x564 <new_can_message+0x30>
     54c:	a2 2f       	mov	r26, r18
     54e:	b3 2f       	mov	r27, r19
     550:	fe 01       	movw	r30, r28
     552:	34 96       	adiw	r30, 0x04	; 4
     554:	9f 01       	movw	r18, r30
     556:	24 0f       	add	r18, r20
     558:	31 1d       	adc	r19, r1
     55a:	5d 91       	ld	r21, X+
     55c:	51 93       	st	Z+, r21
     55e:	e2 17       	cp	r30, r18
     560:	f3 07       	cpc	r31, r19
     562:	d9 f7       	brne	.-10     	; 0x55a <new_can_message+0x26>
     564:	7a 83       	std	Y+2, r23	; 0x02
     566:	69 83       	std	Y+1, r22	; 0x01
     568:	4b 83       	std	Y+3, r20	; 0x03
     56a:	2b e0       	ldi	r18, 0x0B	; 11
     56c:	fe 01       	movw	r30, r28
     56e:	31 96       	adiw	r30, 0x01	; 1
     570:	dc 01       	movw	r26, r24
     572:	01 90       	ld	r0, Z+
     574:	0d 92       	st	X+, r0
     576:	2a 95       	dec	r18
     578:	e1 f7       	brne	.-8      	; 0x572 <new_can_message+0x3e>
     57a:	2b 96       	adiw	r28, 0x0b	; 11
     57c:	0f b6       	in	r0, 0x3f	; 63
     57e:	f8 94       	cli
     580:	de bf       	out	0x3e, r29	; 62
     582:	0f be       	out	0x3f, r0	; 63
     584:	cd bf       	out	0x3d, r28	; 61
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <can_write>:
     58c:	cf 92       	push	r12
     58e:	df 92       	push	r13
     590:	ef 92       	push	r14
     592:	ff 92       	push	r15
     594:	0f 93       	push	r16
     596:	1f 93       	push	r17
     598:	cf 93       	push	r28
     59a:	df 93       	push	r29
     59c:	cd b7       	in	r28, 0x3d	; 61
     59e:	de b7       	in	r29, 0x3e	; 62
     5a0:	2b 97       	sbiw	r28, 0x0b	; 11
     5a2:	0f b6       	in	r0, 0x3f	; 63
     5a4:	f8 94       	cli
     5a6:	de bf       	out	0x3e, r29	; 62
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	cd bf       	out	0x3d, r28	; 61
     5ac:	e9 82       	std	Y+1, r14	; 0x01
     5ae:	fa 82       	std	Y+2, r15	; 0x02
     5b0:	0b 83       	std	Y+3, r16	; 0x03
     5b2:	1c 83       	std	Y+4, r17	; 0x04
     5b4:	2d 83       	std	Y+5, r18	; 0x05
     5b6:	3e 83       	std	Y+6, r19	; 0x06
     5b8:	4f 83       	std	Y+7, r20	; 0x07
     5ba:	58 87       	std	Y+8, r21	; 0x08
     5bc:	69 87       	std	Y+9, r22	; 0x09
     5be:	7a 87       	std	Y+10, r23	; 0x0a
     5c0:	8b 87       	std	Y+11, r24	; 0x0b
     5c2:	e9 80       	ldd	r14, Y+1	; 0x01
     5c4:	fa 80       	ldd	r15, Y+2	; 0x02
     5c6:	8c 2d       	mov	r24, r12
     5c8:	02 d2       	rcall	.+1028   	; 0x9ce <mcp_read>
     5ca:	83 fd       	sbrc	r24, 3
     5cc:	fc cf       	rjmp	.-8      	; 0x5c6 <can_write+0x3a>
     5ce:	b7 01       	movw	r22, r14
     5d0:	76 95       	lsr	r23
     5d2:	67 95       	ror	r22
     5d4:	76 95       	lsr	r23
     5d6:	67 95       	ror	r22
     5d8:	76 95       	lsr	r23
     5da:	67 95       	ror	r22
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	8c 0d       	add	r24, r12
     5e0:	02 d2       	rcall	.+1028   	; 0x9e6 <mcp_write>
     5e2:	6e 2d       	mov	r22, r14
     5e4:	62 95       	swap	r22
     5e6:	66 0f       	add	r22, r22
     5e8:	60 7e       	andi	r22, 0xE0	; 224
     5ea:	82 e0       	ldi	r24, 0x02	; 2
     5ec:	8c 0d       	add	r24, r12
     5ee:	fb d1       	rcall	.+1014   	; 0x9e6 <mcp_write>
     5f0:	60 2f       	mov	r22, r16
     5f2:	6f 70       	andi	r22, 0x0F	; 15
     5f4:	85 e0       	ldi	r24, 0x05	; 5
     5f6:	8c 0d       	add	r24, r12
     5f8:	f6 d1       	rcall	.+1004   	; 0x9e6 <mcp_write>
     5fa:	00 23       	and	r16, r16
     5fc:	b1 f0       	breq	.+44     	; 0x62a <can_write+0x9e>
     5fe:	7e 01       	movw	r14, r28
     600:	84 e0       	ldi	r24, 0x04	; 4
     602:	e8 0e       	add	r14, r24
     604:	f1 1c       	adc	r15, r1
     606:	0f 2e       	mov	r0, r31
     608:	f6 e0       	ldi	r31, 0x06	; 6
     60a:	df 2e       	mov	r13, r31
     60c:	f0 2d       	mov	r31, r0
     60e:	dc 0c       	add	r13, r12
     610:	f7 01       	movw	r30, r14
     612:	e0 0f       	add	r30, r16
     614:	f1 1d       	adc	r31, r1
     616:	8f 01       	movw	r16, r30
     618:	f7 01       	movw	r30, r14
     61a:	61 91       	ld	r22, Z+
     61c:	7f 01       	movw	r14, r30
     61e:	8d 2d       	mov	r24, r13
     620:	e2 d1       	rcall	.+964    	; 0x9e6 <mcp_write>
     622:	d3 94       	inc	r13
     624:	e0 16       	cp	r14, r16
     626:	f1 06       	cpc	r15, r17
     628:	b9 f7       	brne	.-18     	; 0x618 <can_write+0x8c>
     62a:	8c 2d       	mov	r24, r12
     62c:	82 95       	swap	r24
     62e:	8f 70       	andi	r24, 0x0F	; 15
     630:	82 58       	subi	r24, 0x82	; 130
     632:	01 d2       	rcall	.+1026   	; 0xa36 <mcp_requestToSend>
     634:	2b 96       	adiw	r28, 0x0b	; 11
     636:	0f b6       	in	r0, 0x3f	; 63
     638:	f8 94       	cli
     63a:	de bf       	out	0x3e, r29	; 62
     63c:	0f be       	out	0x3f, r0	; 63
     63e:	cd bf       	out	0x3d, r28	; 61
     640:	df 91       	pop	r29
     642:	cf 91       	pop	r28
     644:	1f 91       	pop	r17
     646:	0f 91       	pop	r16
     648:	ff 90       	pop	r15
     64a:	ef 90       	pop	r14
     64c:	df 90       	pop	r13
     64e:	cf 90       	pop	r12
     650:	08 95       	ret

00000652 <can_pollInterrupt>:
     652:	80 b1       	in	r24, 0x00	; 0
     654:	8c e2       	ldi	r24, 0x2C	; 44
     656:	bb d1       	rcall	.+886    	; 0x9ce <mcp_read>
     658:	80 ff       	sbrs	r24, 0
     65a:	06 c0       	rjmp	.+12     	; 0x668 <can_pollInterrupt+0x16>
     65c:	4f ef       	ldi	r20, 0xFF	; 255
     65e:	61 e0       	ldi	r22, 0x01	; 1
     660:	8c e2       	ldi	r24, 0x2C	; 44
     662:	d5 d1       	rcall	.+938    	; 0xa0e <mcp_bitModify>
     664:	90 e6       	ldi	r25, 0x60	; 96
     666:	09 c0       	rjmp	.+18     	; 0x67a <can_pollInterrupt+0x28>
     668:	98 2f       	mov	r25, r24
     66a:	92 70       	andi	r25, 0x02	; 2
     66c:	81 ff       	sbrs	r24, 1
     66e:	05 c0       	rjmp	.+10     	; 0x67a <can_pollInterrupt+0x28>
     670:	4f ef       	ldi	r20, 0xFF	; 255
     672:	62 e0       	ldi	r22, 0x02	; 2
     674:	8c e2       	ldi	r24, 0x2C	; 44
     676:	cb d1       	rcall	.+918    	; 0xa0e <mcp_bitModify>
     678:	90 e7       	ldi	r25, 0x70	; 112
     67a:	89 2f       	mov	r24, r25
     67c:	08 95       	ret

0000067e <can_read>:
     67e:	8f 92       	push	r8
     680:	9f 92       	push	r9
     682:	af 92       	push	r10
     684:	bf 92       	push	r11
     686:	cf 92       	push	r12
     688:	df 92       	push	r13
     68a:	ef 92       	push	r14
     68c:	ff 92       	push	r15
     68e:	0f 93       	push	r16
     690:	1f 93       	push	r17
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	cd b7       	in	r28, 0x3d	; 61
     698:	de b7       	in	r29, 0x3e	; 62
     69a:	2b 97       	sbiw	r28, 0x0b	; 11
     69c:	0f b6       	in	r0, 0x3f	; 63
     69e:	f8 94       	cli
     6a0:	de bf       	out	0x3e, r29	; 62
     6a2:	0f be       	out	0x3f, r0	; 63
     6a4:	cd bf       	out	0x3d, r28	; 61
     6a6:	6c 01       	movw	r12, r24
     6a8:	d4 df       	rcall	.-88     	; 0x652 <can_pollInterrupt>
     6aa:	18 2f       	mov	r17, r24
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	81 0f       	add	r24, r17
     6b0:	8e d1       	rcall	.+796    	; 0x9ce <mcp_read>
     6b2:	a8 2e       	mov	r10, r24
     6b4:	82 e0       	ldi	r24, 0x02	; 2
     6b6:	81 0f       	add	r24, r17
     6b8:	8a d1       	rcall	.+788    	; 0x9ce <mcp_read>
     6ba:	82 95       	swap	r24
     6bc:	86 95       	lsr	r24
     6be:	87 70       	andi	r24, 0x07	; 7
     6c0:	b1 2c       	mov	r11, r1
     6c2:	aa 0c       	add	r10, r10
     6c4:	bb 1c       	adc	r11, r11
     6c6:	aa 0c       	add	r10, r10
     6c8:	bb 1c       	adc	r11, r11
     6ca:	aa 0c       	add	r10, r10
     6cc:	bb 1c       	adc	r11, r11
     6ce:	a8 2a       	or	r10, r24
     6d0:	85 e0       	ldi	r24, 0x05	; 5
     6d2:	81 0f       	add	r24, r17
     6d4:	7c d1       	rcall	.+760    	; 0x9ce <mcp_read>
     6d6:	8f 70       	andi	r24, 0x0F	; 15
     6d8:	88 2e       	mov	r8, r24
     6da:	a1 f0       	breq	.+40     	; 0x704 <can_read+0x86>
     6dc:	0f 2e       	mov	r0, r31
     6de:	f6 e0       	ldi	r31, 0x06	; 6
     6e0:	9f 2e       	mov	r9, r31
     6e2:	f0 2d       	mov	r31, r0
     6e4:	91 0e       	add	r9, r17
     6e6:	8e 01       	movw	r16, r28
     6e8:	0c 5f       	subi	r16, 0xFC	; 252
     6ea:	1f 4f       	sbci	r17, 0xFF	; 255
     6ec:	78 01       	movw	r14, r16
     6ee:	e8 0e       	add	r14, r24
     6f0:	f1 1c       	adc	r15, r1
     6f2:	89 2d       	mov	r24, r9
     6f4:	6c d1       	rcall	.+728    	; 0x9ce <mcp_read>
     6f6:	f8 01       	movw	r30, r16
     6f8:	81 93       	st	Z+, r24
     6fa:	8f 01       	movw	r16, r30
     6fc:	93 94       	inc	r9
     6fe:	ee 15       	cp	r30, r14
     700:	ff 05       	cpc	r31, r15
     702:	b9 f7       	brne	.-18     	; 0x6f2 <can_read+0x74>
     704:	40 e0       	ldi	r20, 0x00	; 0
     706:	61 e0       	ldi	r22, 0x01	; 1
     708:	8c e2       	ldi	r24, 0x2C	; 44
     70a:	81 d1       	rcall	.+770    	; 0xa0e <mcp_bitModify>
     70c:	ba 82       	std	Y+2, r11	; 0x02
     70e:	a9 82       	std	Y+1, r10	; 0x01
     710:	8b 82       	std	Y+3, r8	; 0x03
     712:	8b e0       	ldi	r24, 0x0B	; 11
     714:	fe 01       	movw	r30, r28
     716:	31 96       	adiw	r30, 0x01	; 1
     718:	d6 01       	movw	r26, r12
     71a:	01 90       	ld	r0, Z+
     71c:	0d 92       	st	X+, r0
     71e:	8a 95       	dec	r24
     720:	e1 f7       	brne	.-8      	; 0x71a <can_read+0x9c>
     722:	c6 01       	movw	r24, r12
     724:	2b 96       	adiw	r28, 0x0b	; 11
     726:	0f b6       	in	r0, 0x3f	; 63
     728:	f8 94       	cli
     72a:	de bf       	out	0x3e, r29	; 62
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	cd bf       	out	0x3d, r28	; 61
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	0f 91       	pop	r16
     738:	ff 90       	pop	r15
     73a:	ef 90       	pop	r14
     73c:	df 90       	pop	r13
     73e:	cf 90       	pop	r12
     740:	bf 90       	pop	r11
     742:	af 90       	pop	r10
     744:	9f 90       	pop	r9
     746:	8f 90       	pop	r8
     748:	08 95       	ret

0000074a <can_handle_solenoid_message>:
void can_handle_solenoid_message(can_message msg){
     74a:	ef 92       	push	r14
     74c:	ff 92       	push	r15
     74e:	0f 93       	push	r16
     750:	1f 93       	push	r17
     752:	cf 93       	push	r28
     754:	df 93       	push	r29
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
     75a:	2b 97       	sbiw	r28, 0x0b	; 11
     75c:	0f b6       	in	r0, 0x3f	; 63
     75e:	f8 94       	cli
     760:	de bf       	out	0x3e, r29	; 62
     762:	0f be       	out	0x3f, r0	; 63
     764:	cd bf       	out	0x3d, r28	; 61
     766:	e9 82       	std	Y+1, r14	; 0x01
     768:	fa 82       	std	Y+2, r15	; 0x02
     76a:	0b 83       	std	Y+3, r16	; 0x03
     76c:	1c 83       	std	Y+4, r17	; 0x04
     76e:	2d 83       	std	Y+5, r18	; 0x05
     770:	3e 83       	std	Y+6, r19	; 0x06
     772:	4f 83       	std	Y+7, r20	; 0x07
     774:	58 87       	std	Y+8, r21	; 0x08
     776:	69 87       	std	Y+9, r22	; 0x09
     778:	7a 87       	std	Y+10, r23	; 0x0a
     77a:	8b 87       	std	Y+11, r24	; 0x0b
	if(msg.data[0]){
     77c:	11 23       	and	r17, r17
     77e:	11 f0       	breq	.+4      	; 0x784 <can_handle_solenoid_message+0x3a>
		PORTA |= (1<<PA2); //stop relay
     780:	12 9a       	sbi	0x02, 2	; 2
     782:	01 c0       	rjmp	.+2      	; 0x786 <can_handle_solenoid_message+0x3c>
	}
	else{
		PORTA &= ~(1<<PA2); //activate relay
     784:	12 98       	cbi	0x02, 2	; 2
	}
}
     786:	2b 96       	adiw	r28, 0x0b	; 11
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	f8 94       	cli
     78c:	de bf       	out	0x3e, r29	; 62
     78e:	0f be       	out	0x3f, r0	; 63
     790:	cd bf       	out	0x3d, r28	; 61
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	1f 91       	pop	r17
     798:	0f 91       	pop	r16
     79a:	ff 90       	pop	r15
     79c:	ef 90       	pop	r14
     79e:	08 95       	ret

000007a0 <can_handle_slider_message>:
void can_handle_slider_message(can_message msg, uint16_t max_encoder_value){
     7a0:	8f 92       	push	r8
     7a2:	9f 92       	push	r9
     7a4:	af 92       	push	r10
     7a6:	bf 92       	push	r11
     7a8:	cf 92       	push	r12
     7aa:	df 92       	push	r13
     7ac:	ef 92       	push	r14
     7ae:	ff 92       	push	r15
     7b0:	0f 93       	push	r16
     7b2:	1f 93       	push	r17
     7b4:	cf 93       	push	r28
     7b6:	df 93       	push	r29
     7b8:	cd b7       	in	r28, 0x3d	; 61
     7ba:	de b7       	in	r29, 0x3e	; 62
     7bc:	2b 97       	sbiw	r28, 0x0b	; 11
     7be:	0f b6       	in	r0, 0x3f	; 63
     7c0:	f8 94       	cli
     7c2:	de bf       	out	0x3e, r29	; 62
     7c4:	0f be       	out	0x3f, r0	; 63
     7c6:	cd bf       	out	0x3d, r28	; 61
	uint8_t slider_value = msg.data[0];
	
	//Reverse the slider values and convert to encoder values
	float r = (255 - slider_value)*(max_encoder_value/255.0);
     7c8:	6f ef       	ldi	r22, 0xFF	; 255
     7ca:	70 e0       	ldi	r23, 0x00	; 0
     7cc:	61 1b       	sub	r22, r17
     7ce:	71 09       	sbc	r23, r1
     7d0:	88 27       	eor	r24, r24
     7d2:	77 fd       	sbrc	r23, 7
     7d4:	80 95       	com	r24
     7d6:	98 2f       	mov	r25, r24
     7d8:	36 d4       	rcall	.+2156   	; 0x1046 <__floatsisf>
     7da:	4b 01       	movw	r8, r22
     7dc:	5c 01       	movw	r10, r24
     7de:	b6 01       	movw	r22, r12
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	2e d4       	rcall	.+2140   	; 0x1042 <__floatunsisf>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	4f e7       	ldi	r20, 0x7F	; 127
     7ec:	53 e4       	ldi	r21, 0x43	; 67
     7ee:	90 d3       	rcall	.+1824   	; 0xf10 <__divsf3>
     7f0:	9b 01       	movw	r18, r22
     7f2:	ac 01       	movw	r20, r24
     7f4:	c5 01       	movw	r24, r10
     7f6:	b4 01       	movw	r22, r8
     7f8:	b2 d4       	rcall	.+2404   	; 0x115e <__mulsf3>
     7fa:	4b 01       	movw	r8, r22
     7fc:	5c 01       	movw	r10, r24
	float y = motor_encoder_read();
     7fe:	67 d1       	rcall	.+718    	; 0xace <motor_encoder_read>
     800:	bc 01       	movw	r22, r24
     802:	88 27       	eor	r24, r24
     804:	77 fd       	sbrc	r23, 7
     806:	80 95       	com	r24
     808:	98 2f       	mov	r25, r24
     80a:	1d d4       	rcall	.+2106   	; 0x1046 <__floatsisf>
     80c:	9b 01       	movw	r18, r22
     80e:	ac 01       	movw	r20, r24
	
	//Convert to speed-values
	float u = pid_generate(r, y, 0.01) / ((max_encoder_value+1)/255);
     810:	1a e0       	ldi	r17, 0x0A	; 10
     812:	e1 2e       	mov	r14, r17
     814:	17 ed       	ldi	r17, 0xD7	; 215
     816:	f1 2e       	mov	r15, r17
     818:	03 e2       	ldi	r16, 0x23	; 35
     81a:	1c e3       	ldi	r17, 0x3C	; 60
     81c:	c5 01       	movw	r24, r10
     81e:	b4 01       	movw	r22, r8
     820:	8d dd       	rcall	.-1254   	; 0x33c <pid_generate>
     822:	4b 01       	movw	r8, r22
     824:	5c 01       	movw	r10, r24
     826:	96 01       	movw	r18, r12
     828:	2f 5f       	subi	r18, 0xFF	; 255
     82a:	3f 4f       	sbci	r19, 0xFF	; 255
     82c:	a1 e8       	ldi	r26, 0x81	; 129
     82e:	b0 e8       	ldi	r27, 0x80	; 128
     830:	0e 94 9f 0c 	call	0x193e	; 0x193e <__umulhisi3>
     834:	88 0f       	add	r24, r24
     836:	89 2f       	mov	r24, r25
     838:	88 1f       	adc	r24, r24
     83a:	99 0b       	sbc	r25, r25
     83c:	91 95       	neg	r25
     83e:	bc 01       	movw	r22, r24
     840:	80 e0       	ldi	r24, 0x00	; 0
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	fe d3       	rcall	.+2044   	; 0x1042 <__floatunsisf>
     846:	9b 01       	movw	r18, r22
     848:	ac 01       	movw	r20, r24
     84a:	c5 01       	movw	r24, r10
     84c:	b4 01       	movw	r22, r8
     84e:	60 d3       	rcall	.+1728   	; 0xf10 <__divsf3>
	motor_speed(u);
     850:	c7 d3       	rcall	.+1934   	; 0xfe0 <__fixsfsi>
     852:	cb 01       	movw	r24, r22
     854:	0c d1       	rcall	.+536    	; 0xa6e <motor_speed>
}
     856:	2b 96       	adiw	r28, 0x0b	; 11
     858:	0f b6       	in	r0, 0x3f	; 63
     85a:	f8 94       	cli
     85c:	de bf       	out	0x3e, r29	; 62
     85e:	0f be       	out	0x3f, r0	; 63
     860:	cd bf       	out	0x3d, r28	; 61
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	1f 91       	pop	r17
     868:	0f 91       	pop	r16
     86a:	ff 90       	pop	r15
     86c:	ef 90       	pop	r14
     86e:	df 90       	pop	r13
     870:	cf 90       	pop	r12
     872:	bf 90       	pop	r11
     874:	af 90       	pop	r10
     876:	9f 90       	pop	r9
     878:	8f 90       	pop	r8
     87a:	08 95       	ret

0000087c <can_handle_message>:
void can_handle_message(can_message msg, uint16_t max_encoder_value){
     87c:	cf 92       	push	r12
     87e:	df 92       	push	r13
     880:	ef 92       	push	r14
     882:	ff 92       	push	r15
     884:	0f 93       	push	r16
     886:	1f 93       	push	r17
     888:	cf 93       	push	r28
     88a:	df 93       	push	r29
     88c:	cd b7       	in	r28, 0x3d	; 61
     88e:	de b7       	in	r29, 0x3e	; 62
     890:	2b 97       	sbiw	r28, 0x0b	; 11
     892:	0f b6       	in	r0, 0x3f	; 63
     894:	f8 94       	cli
     896:	de bf       	out	0x3e, r29	; 62
     898:	0f be       	out	0x3f, r0	; 63
     89a:	cd bf       	out	0x3d, r28	; 61
     89c:	e9 82       	std	Y+1, r14	; 0x01
     89e:	fa 82       	std	Y+2, r15	; 0x02
     8a0:	0b 83       	std	Y+3, r16	; 0x03
     8a2:	1c 83       	std	Y+4, r17	; 0x04
     8a4:	2d 83       	std	Y+5, r18	; 0x05
     8a6:	3e 83       	std	Y+6, r19	; 0x06
     8a8:	4f 83       	std	Y+7, r20	; 0x07
     8aa:	58 87       	std	Y+8, r21	; 0x08
     8ac:	69 87       	std	Y+9, r22	; 0x09
     8ae:	7a 87       	std	Y+10, r23	; 0x0a
     8b0:	8b 87       	std	Y+11, r24	; 0x0b
	switch(msg.id){
     8b2:	89 81       	ldd	r24, Y+1	; 0x01
     8b4:	9a 81       	ldd	r25, Y+2	; 0x02
     8b6:	87 37       	cpi	r24, 0x77	; 119
     8b8:	91 05       	cpc	r25, r1
     8ba:	51 f0       	breq	.+20     	; 0x8d0 <can_handle_message+0x54>
     8bc:	88 38       	cpi	r24, 0x88	; 136
     8be:	91 05       	cpc	r25, r1
     8c0:	a1 f0       	breq	.+40     	; 0x8ea <can_handle_message+0x6e>
     8c2:	85 35       	cpi	r24, 0x55	; 85
     8c4:	91 05       	cpc	r25, r1
     8c6:	e9 f4       	brne	.+58     	; 0x902 <can_handle_message+0x86>
	}
	printf("\n");
}

void can_handle_joystick_message(can_message msg){
		pwm_set_servo(msg.data[0]);
     8c8:	81 2f       	mov	r24, r17
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	38 d1       	rcall	.+624    	; 0xb3e <pwm_set_servo>
     8ce:	19 c0       	rjmp	.+50     	; 0x902 <can_handle_message+0x86>
		case MCP_JOYSTICK_MESSAGE:
			can_handle_joystick_message(msg);
			break;
		
		case MCP_SOLENOID_MESSAGE:
			can_handle_solenoid_message(msg);
     8d0:	e9 80       	ldd	r14, Y+1	; 0x01
     8d2:	fa 80       	ldd	r15, Y+2	; 0x02
     8d4:	0b 81       	ldd	r16, Y+3	; 0x03
     8d6:	1c 81       	ldd	r17, Y+4	; 0x04
     8d8:	2d 81       	ldd	r18, Y+5	; 0x05
     8da:	3e 81       	ldd	r19, Y+6	; 0x06
     8dc:	4f 81       	ldd	r20, Y+7	; 0x07
     8de:	58 85       	ldd	r21, Y+8	; 0x08
     8e0:	69 85       	ldd	r22, Y+9	; 0x09
     8e2:	7a 85       	ldd	r23, Y+10	; 0x0a
     8e4:	8b 85       	ldd	r24, Y+11	; 0x0b
     8e6:	31 df       	rcall	.-414    	; 0x74a <can_handle_solenoid_message>
			break;
     8e8:	0c c0       	rjmp	.+24     	; 0x902 <can_handle_message+0x86>
		
		case MCP_SLIDER_MESSAGE:
			can_handle_slider_message(msg, max_encoder_value);
     8ea:	e9 80       	ldd	r14, Y+1	; 0x01
     8ec:	fa 80       	ldd	r15, Y+2	; 0x02
     8ee:	0b 81       	ldd	r16, Y+3	; 0x03
     8f0:	1c 81       	ldd	r17, Y+4	; 0x04
     8f2:	2d 81       	ldd	r18, Y+5	; 0x05
     8f4:	3e 81       	ldd	r19, Y+6	; 0x06
     8f6:	4f 81       	ldd	r20, Y+7	; 0x07
     8f8:	58 85       	ldd	r21, Y+8	; 0x08
     8fa:	69 85       	ldd	r22, Y+9	; 0x09
     8fc:	7a 85       	ldd	r23, Y+10	; 0x0a
     8fe:	8b 85       	ldd	r24, Y+11	; 0x0b
     900:	4f df       	rcall	.-354    	; 0x7a0 <can_handle_slider_message>
			break;
	}
}
     902:	2b 96       	adiw	r28, 0x0b	; 11
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	f8 94       	cli
     908:	de bf       	out	0x3e, r29	; 62
     90a:	0f be       	out	0x3f, r0	; 63
     90c:	cd bf       	out	0x3d, r28	; 61
     90e:	df 91       	pop	r29
     910:	cf 91       	pop	r28
     912:	1f 91       	pop	r17
     914:	0f 91       	pop	r16
     916:	ff 90       	pop	r15
     918:	ef 90       	pop	r14
     91a:	df 90       	pop	r13
     91c:	cf 90       	pop	r12
     91e:	08 95       	ret

00000920 <can_transmit_ir_value>:

void can_transmit_ir_value(uint8_t ir_value){
     920:	cf 92       	push	r12
     922:	ef 92       	push	r14
     924:	ff 92       	push	r15
     926:	0f 93       	push	r16
     928:	1f 93       	push	r17
     92a:	cf 93       	push	r28
     92c:	df 93       	push	r29
     92e:	cd b7       	in	r28, 0x3d	; 61
     930:	de b7       	in	r29, 0x3e	; 62
     932:	2c 97       	sbiw	r28, 0x0c	; 12
     934:	0f b6       	in	r0, 0x3f	; 63
     936:	f8 94       	cli
     938:	de bf       	out	0x3e, r29	; 62
     93a:	0f be       	out	0x3f, r0	; 63
     93c:	cd bf       	out	0x3d, r28	; 61
     93e:	8c 87       	std	Y+12, r24	; 0x0c
	can_message msg;
	msg = new_can_message(MCP_IR_MESSAGE, 1, &ir_value);
     940:	9e 01       	movw	r18, r28
     942:	24 5f       	subi	r18, 0xF4	; 244
     944:	3f 4f       	sbci	r19, 0xFF	; 255
     946:	41 e0       	ldi	r20, 0x01	; 1
     948:	66 e6       	ldi	r22, 0x66	; 102
     94a:	70 e0       	ldi	r23, 0x00	; 0
     94c:	ce 01       	movw	r24, r28
     94e:	01 96       	adiw	r24, 0x01	; 1
     950:	f1 dd       	rcall	.-1054   	; 0x534 <new_can_message>
	can_write(msg, MCP_TXB0CTRL);
     952:	0f 2e       	mov	r0, r31
     954:	f0 e3       	ldi	r31, 0x30	; 48
     956:	cf 2e       	mov	r12, r31
     958:	f0 2d       	mov	r31, r0
     95a:	e9 80       	ldd	r14, Y+1	; 0x01
     95c:	fa 80       	ldd	r15, Y+2	; 0x02
     95e:	0b 81       	ldd	r16, Y+3	; 0x03
     960:	1c 81       	ldd	r17, Y+4	; 0x04
     962:	2d 81       	ldd	r18, Y+5	; 0x05
     964:	3e 81       	ldd	r19, Y+6	; 0x06
     966:	4f 81       	ldd	r20, Y+7	; 0x07
     968:	58 85       	ldd	r21, Y+8	; 0x08
     96a:	69 85       	ldd	r22, Y+9	; 0x09
     96c:	7a 85       	ldd	r23, Y+10	; 0x0a
     96e:	8b 85       	ldd	r24, Y+11	; 0x0b
     970:	0d de       	rcall	.-998    	; 0x58c <can_write>
     972:	2c 96       	adiw	r28, 0x0c	; 12
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	f8 94       	cli
     978:	de bf       	out	0x3e, r29	; 62
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	cd bf       	out	0x3d, r28	; 61
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	ff 90       	pop	r15
     988:	ef 90       	pop	r14
     98a:	cf 90       	pop	r12
     98c:	08 95       	ret

0000098e <dac_initialize>:
#include <stdint.h>

#define MAX520_TWI_ADDR_BASE 0b01010000
static uint8_t twi_address = 0x00;

void dac_initialize(uint8_t MAX520_addr){
     98e:	cf 93       	push	r28
     990:	c8 2f       	mov	r28, r24
	TWI_Master_Initialise();
     992:	aa d1       	rcall	.+852    	; 0xce8 <TWI_Master_Initialise>
	sei();
     994:	78 94       	sei
	
	twi_address = MAX520_addr;
     996:	c0 93 9e 02 	sts	0x029E, r28
}	
     99a:	cf 91       	pop	r28
     99c:	08 95       	ret

0000099e <dac_write>:


void dac_write(uint8_t channel, uint8_t val){
     99e:	cf 93       	push	r28
     9a0:	df 93       	push	r29
     9a2:	00 d0       	rcall	.+0      	; 0x9a4 <dac_write+0x6>
     9a4:	cd b7       	in	r28, 0x3d	; 61
     9a6:	de b7       	in	r29, 0x3e	; 62
	uint8_t message[3] = {	MAX520_TWI_ADDR_BASE | ((twi_address & 0x07) << 1), //Set address
     9a8:	90 91 9e 02 	lds	r25, 0x029E
     9ac:	97 70       	andi	r25, 0x07	; 7
     9ae:	99 0f       	add	r25, r25
     9b0:	90 65       	ori	r25, 0x50	; 80
     9b2:	99 83       	std	Y+1, r25	; 0x01
     9b4:	87 70       	andi	r24, 0x07	; 7
     9b6:	8a 83       	std	Y+2, r24	; 0x02
     9b8:	6b 83       	std	Y+3, r22	; 0x03
							channel & 0x07, //Channel no higher than 0x07
							val		};
							
	TWI_Start_Transceiver_With_Data(message, 3);
     9ba:	63 e0       	ldi	r22, 0x03	; 3
     9bc:	ce 01       	movw	r24, r28
     9be:	01 96       	adiw	r24, 0x01	; 1
     9c0:	9d d1       	rcall	.+826    	; 0xcfc <TWI_Start_Transceiver_With_Data>
     9c2:	0f 90       	pop	r0
     9c4:	0f 90       	pop	r0
     9c6:	0f 90       	pop	r0
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	08 95       	ret

000009ce <mcp_read>:
	SPI_transmit(MCP_READ_STATUS);
	uint8_t status = SPI_transmit(0x00);
	PORTB |= (1<< MCP_CS);
	
	return status;
}
     9ce:	cf 93       	push	r28
     9d0:	c8 2f       	mov	r28, r24
     9d2:	28 98       	cbi	0x05, 0	; 5
     9d4:	83 e0       	ldi	r24, 0x03	; 3
     9d6:	e7 d0       	rcall	.+462    	; 0xba6 <SPI_transmit>
     9d8:	8c 2f       	mov	r24, r28
     9da:	e5 d0       	rcall	.+458    	; 0xba6 <SPI_transmit>
     9dc:	80 e0       	ldi	r24, 0x00	; 0
     9de:	e3 d0       	rcall	.+454    	; 0xba6 <SPI_transmit>
     9e0:	28 9a       	sbi	0x05, 0	; 5
     9e2:	cf 91       	pop	r28
     9e4:	08 95       	ret

000009e6 <mcp_write>:
     9e6:	cf 93       	push	r28
     9e8:	df 93       	push	r29
     9ea:	d8 2f       	mov	r29, r24
     9ec:	c6 2f       	mov	r28, r22
     9ee:	28 98       	cbi	0x05, 0	; 5
     9f0:	82 e0       	ldi	r24, 0x02	; 2
     9f2:	d9 d0       	rcall	.+434    	; 0xba6 <SPI_transmit>
     9f4:	8d 2f       	mov	r24, r29
     9f6:	d7 d0       	rcall	.+430    	; 0xba6 <SPI_transmit>
     9f8:	8c 2f       	mov	r24, r28
     9fa:	d5 d0       	rcall	.+426    	; 0xba6 <SPI_transmit>
     9fc:	28 9a       	sbi	0x05, 0	; 5
     9fe:	df 91       	pop	r29
     a00:	cf 91       	pop	r28
     a02:	08 95       	ret

00000a04 <mcp_reset>:
     a04:	28 98       	cbi	0x05, 0	; 5
     a06:	80 ec       	ldi	r24, 0xC0	; 192
     a08:	ce d0       	rcall	.+412    	; 0xba6 <SPI_transmit>
     a0a:	28 9a       	sbi	0x05, 0	; 5
     a0c:	08 95       	ret

00000a0e <mcp_bitModify>:
     a0e:	1f 93       	push	r17
     a10:	cf 93       	push	r28
     a12:	df 93       	push	r29
     a14:	18 2f       	mov	r17, r24
     a16:	d6 2f       	mov	r29, r22
     a18:	c4 2f       	mov	r28, r20
     a1a:	28 98       	cbi	0x05, 0	; 5
     a1c:	85 e0       	ldi	r24, 0x05	; 5
     a1e:	c3 d0       	rcall	.+390    	; 0xba6 <SPI_transmit>
     a20:	81 2f       	mov	r24, r17
     a22:	c1 d0       	rcall	.+386    	; 0xba6 <SPI_transmit>
     a24:	8d 2f       	mov	r24, r29
     a26:	bf d0       	rcall	.+382    	; 0xba6 <SPI_transmit>
     a28:	8c 2f       	mov	r24, r28
     a2a:	bd d0       	rcall	.+378    	; 0xba6 <SPI_transmit>
     a2c:	28 9a       	sbi	0x05, 0	; 5
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	1f 91       	pop	r17
     a34:	08 95       	ret

00000a36 <mcp_requestToSend>:
     a36:	28 98       	cbi	0x05, 0	; 5
     a38:	b6 d0       	rcall	.+364    	; 0xba6 <SPI_transmit>
     a3a:	28 9a       	sbi	0x05, 0	; 5
     a3c:	08 95       	ret

00000a3e <mcp_init>:

void mcp_init(void){
	SPI_masterInit();
     a3e:	ad d0       	rcall	.+346    	; 0xb9a <SPI_masterInit>
	mcp_reset();
     a40:	e1 cf       	rjmp	.-62     	; 0xa04 <mcp_reset>
     a42:	08 95       	ret

00000a44 <motor_encoder_reset>:
     a44:	8e 98       	cbi	0x11, 6	; 17
     a46:	8a e6       	ldi	r24, 0x6A	; 106
     a48:	8a 95       	dec	r24
     a4a:	f1 f7       	brne	.-4      	; 0xa48 <motor_encoder_reset+0x4>
     a4c:	00 c0       	rjmp	.+0      	; 0xa4e <motor_encoder_reset+0xa>
     a4e:	8e 9a       	sbi	0x11, 6	; 17
     a50:	08 95       	ret

00000a52 <motor_init>:
     a52:	80 b3       	in	r24, 0x10	; 16
     a54:	88 6f       	ori	r24, 0xF8	; 248
     a56:	80 bb       	out	0x10, r24	; 16
     a58:	10 92 07 01 	sts	0x0107, r1
     a5c:	8c 9a       	sbi	0x11, 4	; 17
     a5e:	f2 cf       	rjmp	.-28     	; 0xa44 <motor_encoder_reset>
     a60:	08 95       	ret

00000a62 <motor_direction>:
     a62:	89 2b       	or	r24, r25
     a64:	11 f0       	breq	.+4      	; 0xa6a <motor_direction+0x8>
     a66:	8b 98       	cbi	0x11, 3	; 17
     a68:	08 95       	ret
     a6a:	8b 9a       	sbi	0x11, 3	; 17
     a6c:	08 95       	ret

00000a6e <motor_speed>:
     a6e:	cf 93       	push	r28
     a70:	df 93       	push	r29
     a72:	ec 01       	movw	r28, r24
     a74:	18 16       	cp	r1, r24
     a76:	19 06       	cpc	r1, r25
     a78:	24 f4       	brge	.+8      	; 0xa82 <motor_speed+0x14>
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	f1 df       	rcall	.-30     	; 0xa62 <motor_direction>
     a80:	08 c0       	rjmp	.+16     	; 0xa92 <motor_speed+0x24>
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	ed df       	rcall	.-38     	; 0xa62 <motor_direction>
     a88:	dd 23       	and	r29, r29
     a8a:	1c f4       	brge	.+6      	; 0xa92 <motor_speed+0x24>
     a8c:	d1 95       	neg	r29
     a8e:	c1 95       	neg	r28
     a90:	d1 09       	sbc	r29, r1
     a92:	be 01       	movw	r22, r28
     a94:	cf 3f       	cpi	r28, 0xFF	; 255
     a96:	d1 05       	cpc	r29, r1
     a98:	19 f0       	breq	.+6      	; 0xaa0 <motor_speed+0x32>
     a9a:	14 f0       	brlt	.+4      	; 0xaa0 <motor_speed+0x32>
     a9c:	6f ef       	ldi	r22, 0xFF	; 255
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	7d df       	rcall	.-262    	; 0x99e <dac_write>
     aa4:	df 91       	pop	r29
     aa6:	cf 91       	pop	r28
     aa8:	08 95       	ret

00000aaa <reverse>:
	_delay_ms(500);

}

uint8_t reverse(uint8_t x){
	x = (((x & 0xaa) >> 1) | ((x & 0x55) << 1));
     aaa:	28 2f       	mov	r18, r24
     aac:	25 75       	andi	r18, 0x55	; 85
     aae:	22 0f       	add	r18, r18
     ab0:	98 2f       	mov	r25, r24
     ab2:	9a 7a       	andi	r25, 0xAA	; 170
     ab4:	96 95       	lsr	r25
     ab6:	92 2b       	or	r25, r18
	x = (((x & 0xcc) >> 2) | ((x & 0x33) << 2));
     ab8:	29 2f       	mov	r18, r25
     aba:	23 73       	andi	r18, 0x33	; 51
     abc:	22 0f       	add	r18, r18
     abe:	22 0f       	add	r18, r18
     ac0:	89 2f       	mov	r24, r25
     ac2:	8c 7c       	andi	r24, 0xCC	; 204
     ac4:	86 95       	lsr	r24
     ac6:	86 95       	lsr	r24
     ac8:	82 2b       	or	r24, r18
	x = (((x & 0xf0) >> 4) | ((x & 0x0f) << 4));
	return x;
}
     aca:	82 95       	swap	r24
     acc:	08 95       	ret

00000ace <motor_encoder_read>:
	PORTF |= (1 << MOTOR_EN);
	motor_encoder_reset();
	
}

int16_t motor_encoder_read(void){
     ace:	cf 93       	push	r28
     ad0:	df 93       	push	r29
	uint16_t data;
	
	//Enable output and send high byte on PORT K
	PORTF &=	~((1 << MOTOR_OE) |
     ad2:	81 b3       	in	r24, 0x11	; 17
     ad4:	8f 75       	andi	r24, 0x5F	; 95
     ad6:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ad8:	2a e6       	ldi	r18, 0x6A	; 106
     ada:	2a 95       	dec	r18
     adc:	f1 f7       	brne	.-4      	; 0xada <motor_encoder_read+0xc>
     ade:	00 c0       	rjmp	.+0      	; 0xae0 <motor_encoder_read+0x12>
			(1 << MOTOR_SEL));
	_delay_us(20);
	data = (reverse(PINK) << 8);
     ae0:	80 91 06 01 	lds	r24, 0x0106
     ae4:	e2 df       	rcall	.-60     	; 0xaaa <reverse>
     ae6:	c8 2f       	mov	r28, r24
     ae8:	d0 e0       	ldi	r29, 0x00	; 0
     aea:	dc 2f       	mov	r29, r28
     aec:	cc 27       	eor	r28, r28
	
	//Send low byte on PORT K
	PORTF |= (1 << MOTOR_SEL);
     aee:	8d 9a       	sbi	0x11, 5	; 17
     af0:	3a e6       	ldi	r19, 0x6A	; 106
     af2:	3a 95       	dec	r19
     af4:	f1 f7       	brne	.-4      	; 0xaf2 <motor_encoder_read+0x24>
     af6:	00 c0       	rjmp	.+0      	; 0xaf8 <motor_encoder_read+0x2a>
	_delay_us(20);
	data += reverse(PINK);
     af8:	80 91 06 01 	lds	r24, 0x0106
     afc:	d6 df       	rcall	.-84     	; 0xaaa <reverse>
	
	//Disable output
	PORTF |= (1 << MOTOR_OE);
     afe:	8f 9a       	sbi	0x11, 7	; 17
	
	return data;
}
     b00:	9e 01       	movw	r18, r28
     b02:	28 0f       	add	r18, r24
     b04:	31 1d       	adc	r19, r1
     b06:	c9 01       	movw	r24, r18
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <pwm_init>:
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     b0e:	6b 9a       	sbi	0x0d, 3	; 13
     b10:	e0 e9       	ldi	r30, 0x90	; 144
     b12:	f0 e0       	ldi	r31, 0x00	; 0
     b14:	80 81       	ld	r24, Z
     b16:	8e 7b       	andi	r24, 0xBE	; 190
     b18:	80 83       	st	Z, r24
     b1a:	80 81       	ld	r24, Z
     b1c:	82 68       	ori	r24, 0x82	; 130
     b1e:	80 83       	st	Z, r24
     b20:	e1 e9       	ldi	r30, 0x91	; 145
     b22:	f0 e0       	ldi	r31, 0x00	; 0
     b24:	80 81       	ld	r24, Z
     b26:	8d 61       	ori	r24, 0x1D	; 29
     b28:	80 83       	st	Z, r24
     b2a:	80 81       	ld	r24, Z
     b2c:	8d 7f       	andi	r24, 0xFD	; 253
     b2e:	80 83       	st	Z, r24
     b30:	88 e3       	ldi	r24, 0x38	; 56
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	90 93 97 00 	sts	0x0097, r25
     b38:	80 93 96 00 	sts	0x0096, r24
     b3c:	08 95       	ret

00000b3e <pwm_set_servo>:
}

void pwm_set_servo(unsigned int val){
	val = (val*19)/255 + servo_min;
     b3e:	43 e1       	ldi	r20, 0x13	; 19
     b40:	48 9f       	mul	r20, r24
     b42:	90 01       	movw	r18, r0
     b44:	49 9f       	mul	r20, r25
     b46:	30 0d       	add	r19, r0
     b48:	11 24       	eor	r1, r1
     b4a:	a1 e8       	ldi	r26, 0x81	; 129
     b4c:	b0 e8       	ldi	r27, 0x80	; 128
     b4e:	f7 d6       	rcall	.+3566   	; 0x193e <__umulhisi3>
     b50:	88 0f       	add	r24, r24
     b52:	89 2f       	mov	r24, r25
     b54:	88 1f       	adc	r24, r24
     b56:	99 0b       	sbc	r25, r25
     b58:	91 95       	neg	r25
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
     b5a:	9c 01       	movw	r18, r24
     b5c:	2b 50       	subi	r18, 0x0B	; 11
     b5e:	31 09       	sbc	r19, r1
     b60:	23 30       	cpi	r18, 0x03	; 3
     b62:	31 05       	cpc	r19, r1
     b64:	38 f4       	brcc	.+14     	; 0xb74 <pwm_set_servo+0x36>
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     b66:	89 e1       	ldi	r24, 0x19	; 25
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	90 93 99 00 	sts	0x0099, r25
     b6e:	80 93 98 00 	sts	0x0098, r24
     b72:	08 95       	ret
	val = (val*19)/255 + servo_min;
	if((val <= (servo_mid + 1)) && (val >= (servo_mid - 1))){
		pwm_set_value(servo_mid);
	}
	
	else if((val >= servo_min) && (val <= servo_max)){
     b74:	89 31       	cpi	r24, 0x19	; 25
     b76:	91 05       	cpc	r25, r1
     b78:	30 f4       	brcc	.+12     	; 0xb86 <pwm_set_servo+0x48>
void pwm_set_value(unsigned int val){
	OCR3A = val;
}

void pwm_set_servo(unsigned int val){
	val = (val*19)/255 + servo_min;
     b7a:	0d 96       	adiw	r24, 0x0d	; 13
	OCR4A = 2/1000*F_CPU/prescaler;
	*/
}

void pwm_set_value(unsigned int val){
	OCR3A = val;
     b7c:	90 93 99 00 	sts	0x0099, r25
     b80:	80 93 98 00 	sts	0x0098, r24
     b84:	08 95       	ret
     b86:	89 e1       	ldi	r24, 0x19	; 25
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	90 93 99 00 	sts	0x0099, r25
     b8e:	80 93 98 00 	sts	0x0098, r24
     b92:	08 95       	ret

00000b94 <solenoid_init>:
#include <avr/io.h>

void solenoid_init(){
	DDRA |=(1<<PA2);
     b94:	0a 9a       	sbi	0x01, 2	; 1
	PORTA |= (1 << PA2);	
     b96:	12 9a       	sbi	0x02, 2	; 2
     b98:	08 95       	ret

00000b9a <SPI_masterInit>:
#include <stdio.h>
#include <stdlib.h>

void SPI_masterInit(void){
	/* Set MOSI and SCK output, all others input */
	DDRB = (1 << PB2)|(1 << PB1)|(1 << PB0); //0 = SS, 3 = SI, 2 = SCK
     b9a:	87 e0       	ldi	r24, 0x07	; 7
     b9c:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << PB3); //SO
     b9e:	23 98       	cbi	0x04, 3	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     ba0:	81 e5       	ldi	r24, 0x51	; 81
     ba2:	8c bd       	out	0x2c, r24	; 44
     ba4:	08 95       	ret

00000ba6 <SPI_transmit>:
}
uint8_t SPI_transmit(char cData){
	/* Start transmission */
	SPDR = cData;
     ba6:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     ba8:	0d b4       	in	r0, 0x2d	; 45
     baa:	07 fe       	sbrs	r0, 7
     bac:	fd cf       	rjmp	.-6      	; 0xba8 <SPI_transmit+0x2>
	return SPDR;
     bae:	8e b5       	in	r24, 0x2e	; 46
     bb0:	08 95       	ret

00000bb2 <USART_Init>:
	_delay_ms(100);
}
void USART_Init(unsigned int ubrr)
{
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     bb2:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     bb6:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);
     bba:	e1 ec       	ldi	r30, 0xC1	; 193
     bbc:	f0 e0       	ldi	r31, 0x00	; 0
     bbe:	80 81       	ld	r24, Z
     bc0:	88 61       	ori	r24, 0x18	; 24
     bc2:	80 83       	st	Z, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C |= (3<<UCSZ00);
     bc4:	e2 ec       	ldi	r30, 0xC2	; 194
     bc6:	f0 e0       	ldi	r31, 0x00	; 0
     bc8:	80 81       	ld	r24, Z
     bca:	86 60       	ori	r24, 0x06	; 6
     bcc:	80 83       	st	Z, r24
     bce:	08 95       	ret

00000bd0 <USART_Transmit>:
}
void USART_Transmit(unsigned char data){
	/*Wait for empty transmit buffer*/
	while( !(UCSR0A & (1<<UDRE0)) );
     bd0:	e0 ec       	ldi	r30, 0xC0	; 192
     bd2:	f0 e0       	ldi	r31, 0x00	; 0
     bd4:	90 81       	ld	r25, Z
     bd6:	95 ff       	sbrs	r25, 5
     bd8:	fd cf       	rjmp	.-6      	; 0xbd4 <USART_Transmit+0x4>
	
	/*Put data into buffer, sends the data*/
	UDR0 = data;
     bda:	80 93 c6 00 	sts	0x00C6, r24
     bde:	08 95       	ret

00000be0 <USART_Receive>:
}
unsigned char USART_Receive(void){
	/*Wait for data to be received*/
	while( !(UCSR0A & (1<<RXC0)) );
     be0:	e0 ec       	ldi	r30, 0xC0	; 192
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	80 81       	ld	r24, Z
     be6:	88 23       	and	r24, r24
     be8:	ec f7       	brge	.-6      	; 0xbe4 <USART_Receive+0x4>
	
	
	/*Get and return received data from buffer*/
	return UDR0;
     bea:	80 91 c6 00 	lds	r24, 0x00C6
     bee:	08 95       	ret

00000bf0 <main>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include <stdio.h>

int main(void)
{
     bf0:	cf 93       	push	r28
     bf2:	df 93       	push	r29
     bf4:	cd b7       	in	r28, 0x3d	; 61
     bf6:	de b7       	in	r29, 0x3e	; 62
     bf8:	2b 97       	sbiw	r28, 0x0b	; 11
     bfa:	0f b6       	in	r0, 0x3f	; 63
     bfc:	f8 94       	cli
     bfe:	de bf       	out	0x3e, r29	; 62
     c00:	0f be       	out	0x3f, r0	; 63
     c02:	cd bf       	out	0x3d, r28	; 61
	sei();
     c04:	78 94       	sei
	USART_Init(MYUBRR);
     c06:	87 e6       	ldi	r24, 0x67	; 103
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	d3 df       	rcall	.-90     	; 0xbb2 <USART_Init>
	fdevopen((int (*)(char,  struct __file *))USART_Transmit, (int (*)(struct __file *))USART_Receive);
     c0c:	60 ef       	ldi	r22, 0xF0	; 240
     c0e:	75 e0       	ldi	r23, 0x05	; 5
     c10:	88 ee       	ldi	r24, 0xE8	; 232
     c12:	95 e0       	ldi	r25, 0x05	; 5
     c14:	91 d7       	rcall	.+3874   	; 0x1b38 <fdevopen>
	printf("UART setup done\n");
     c16:	88 e1       	ldi	r24, 0x18	; 24
     c18:	92 e0       	ldi	r25, 0x02	; 2
     c1a:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
	can_init();
     c1e:	78 dc       	rcall	.-1808   	; 0x510 <can_init>
	printf("CAN setup done\n");
     c20:	88 e2       	ldi	r24, 0x28	; 40
     c22:	92 e0       	ldi	r25, 0x02	; 2
     c24:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
	pwm_init();
     c28:	72 df       	rcall	.-284    	; 0xb0e <pwm_init>
	printf("PWM setup done\n");
     c2a:	87 e3       	ldi	r24, 0x37	; 55
     c2c:	92 e0       	ldi	r25, 0x02	; 2
     c2e:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
	adc_init();
     c32:	46 dc       	rcall	.-1908   	; 0x4c0 <adc_init>
	printf("ADC setup done\n");
     c34:	86 e4       	ldi	r24, 0x46	; 70
     c36:	92 e0       	ldi	r25, 0x02	; 2
     c38:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
	motor_init();
     c3c:	0a df       	rcall	.-492    	; 0xa52 <motor_init>
	printf("Motor setup done\n");
     c3e:	85 e5       	ldi	r24, 0x55	; 85
     c40:	92 e0       	ldi	r25, 0x02	; 2
     c42:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
	dac_initialize(0b111);
     c46:	87 e0       	ldi	r24, 0x07	; 7
     c48:	a2 de       	rcall	.-700    	; 0x98e <dac_initialize>
	printf("DAC setup done\n");
     c4a:	86 e6       	ldi	r24, 0x66	; 102
     c4c:	92 e0       	ldi	r25, 0x02	; 2
     c4e:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <puts>
	solenoid_init();
     c52:	a0 df       	rcall	.-192    	; 0xb94 <solenoid_init>
	printf("Solenoid setup done\n");
     c54:	85 e7       	ldi	r24, 0x75	; 117
     c56:	92 e0       	ldi	r25, 0x02	; 2
     c58:	fc d7       	rcall	.+4088   	; 0x1c52 <puts>
	printf("Initialization done\n");
     c5a:	89 e8       	ldi	r24, 0x89	; 137
     c5c:	92 e0       	ldi	r25, 0x02	; 2
     c5e:	f9 d7       	rcall	.+4082   	; 0x1c52 <puts>
	pid_init(-1.0, -2.0, -0.0);
     c60:	e1 2c       	mov	r14, r1
     c62:	f1 2c       	mov	r15, r1
     c64:	00 e0       	ldi	r16, 0x00	; 0
     c66:	10 e8       	ldi	r17, 0x80	; 128
     c68:	20 e0       	ldi	r18, 0x00	; 0
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	40 e0       	ldi	r20, 0x00	; 0
     c6e:	50 ec       	ldi	r21, 0xC0	; 192
     c70:	60 e0       	ldi	r22, 0x00	; 0
     c72:	70 e0       	ldi	r23, 0x00	; 0
     c74:	80 e8       	ldi	r24, 0x80	; 128
     c76:	9f eb       	ldi	r25, 0xBF	; 191
     c78:	28 db       	rcall	.-2480   	; 0x2ca <pid_init>
	
	can_message msg = {0};
     c7a:	fe 01       	movw	r30, r28
     c7c:	31 96       	adiw	r30, 0x01	; 1
     c7e:	8b e0       	ldi	r24, 0x0B	; 11
     c80:	df 01       	movw	r26, r30
     c82:	1d 92       	st	X+, r1
     c84:	8a 95       	dec	r24
     c86:	e9 f7       	brne	.-6      	; 0xc82 <main+0x92>
	uint16_t max_encoder_value = pid_encoder_max_value();
     c88:	d8 db       	rcall	.-2128   	; 0x43a <pid_encoder_max_value>
     c8a:	4c 01       	movw	r8, r24
	while(1)
	{
		if(can_pollInterrupt()){
			msg = can_read();
		}
		printf("%d\n", adc_read(0));
     c8c:	0f 2e       	mov	r0, r31
     c8e:	f4 e1       	ldi	r31, 0x14	; 20
     c90:	af 2e       	mov	r10, r31
     c92:	f2 e0       	ldi	r31, 0x02	; 2
     c94:	bf 2e       	mov	r11, r31
     c96:	f0 2d       	mov	r31, r0
	can_message msg = {0};
	uint16_t max_encoder_value = pid_encoder_max_value();
	
	while(1)
	{
		if(can_pollInterrupt()){
     c98:	dc dc       	rcall	.-1608   	; 0x652 <can_pollInterrupt>
     c9a:	88 23       	and	r24, r24
     c9c:	19 f0       	breq	.+6      	; 0xca4 <main+0xb4>
			msg = can_read();
     c9e:	ce 01       	movw	r24, r28
     ca0:	01 96       	adiw	r24, 0x01	; 1
     ca2:	ed dc       	rcall	.-1574   	; 0x67e <can_read>
		}
		printf("%d\n", adc_read(0));
     ca4:	80 e0       	ldi	r24, 0x00	; 0
     ca6:	1a dc       	rcall	.-1996   	; 0x4dc <adc_read>
     ca8:	9f 93       	push	r25
     caa:	8f 93       	push	r24
     cac:	bf 92       	push	r11
     cae:	af 92       	push	r10
     cb0:	bf d7       	rcall	.+3966   	; 0x1c30 <printf>
		can_transmit_ir_value(adc_read(0));
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	13 dc       	rcall	.-2010   	; 0x4dc <adc_read>
     cb6:	34 de       	rcall	.-920    	; 0x920 <can_transmit_ir_value>
		can_handle_message(msg, max_encoder_value);
     cb8:	64 01       	movw	r12, r8
     cba:	e9 80       	ldd	r14, Y+1	; 0x01
     cbc:	fa 80       	ldd	r15, Y+2	; 0x02
     cbe:	0b 81       	ldd	r16, Y+3	; 0x03
     cc0:	1c 81       	ldd	r17, Y+4	; 0x04
     cc2:	2d 81       	ldd	r18, Y+5	; 0x05
     cc4:	3e 81       	ldd	r19, Y+6	; 0x06
     cc6:	4f 81       	ldd	r20, Y+7	; 0x07
     cc8:	58 85       	ldd	r21, Y+8	; 0x08
     cca:	69 85       	ldd	r22, Y+9	; 0x09
     ccc:	7a 85       	ldd	r23, Y+10	; 0x0a
     cce:	8b 85       	ldd	r24, Y+11	; 0x0b
     cd0:	d5 dd       	rcall	.-1110   	; 0x87c <can_handle_message>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cd2:	8f e3       	ldi	r24, 0x3F	; 63
     cd4:	9c e9       	ldi	r25, 0x9C	; 156
     cd6:	01 97       	sbiw	r24, 0x01	; 1
     cd8:	f1 f7       	brne	.-4      	; 0xcd6 <main+0xe6>
     cda:	00 c0       	rjmp	.+0      	; 0xcdc <main+0xec>
     cdc:	00 00       	nop
     cde:	0f 90       	pop	r0
     ce0:	0f 90       	pop	r0
     ce2:	0f 90       	pop	r0
     ce4:	0f 90       	pop	r0
     ce6:	d8 cf       	rjmp	.-80     	; 0xc98 <main+0xa8>

00000ce8 <TWI_Master_Initialise>:
		{
			msg[ i ] = TWI_buf[ i ];
		}
	}
	return( TWI_statusReg.lastTransOK );
}
     ce8:	8c e0       	ldi	r24, 0x0C	; 12
     cea:	80 93 b8 00 	sts	0x00B8, r24
     cee:	8f ef       	ldi	r24, 0xFF	; 255
     cf0:	80 93 bb 00 	sts	0x00BB, r24
     cf4:	84 e0       	ldi	r24, 0x04	; 4
     cf6:	80 93 bc 00 	sts	0x00BC, r24
     cfa:	08 95       	ret

00000cfc <TWI_Start_Transceiver_With_Data>:
     cfc:	ec eb       	ldi	r30, 0xBC	; 188
     cfe:	f0 e0       	ldi	r31, 0x00	; 0
     d00:	20 81       	ld	r18, Z
     d02:	20 fd       	sbrc	r18, 0
     d04:	fd cf       	rjmp	.-6      	; 0xd00 <TWI_Start_Transceiver_With_Data+0x4>
     d06:	60 93 a1 02 	sts	0x02A1, r22
     d0a:	fc 01       	movw	r30, r24
     d0c:	20 81       	ld	r18, Z
     d0e:	20 93 a2 02 	sts	0x02A2, r18
     d12:	20 fd       	sbrc	r18, 0
     d14:	0c c0       	rjmp	.+24     	; 0xd2e <TWI_Start_Transceiver_With_Data+0x32>
     d16:	62 30       	cpi	r22, 0x02	; 2
     d18:	50 f0       	brcs	.+20     	; 0xd2e <TWI_Start_Transceiver_With_Data+0x32>
     d1a:	dc 01       	movw	r26, r24
     d1c:	11 96       	adiw	r26, 0x01	; 1
     d1e:	e3 ea       	ldi	r30, 0xA3	; 163
     d20:	f2 e0       	ldi	r31, 0x02	; 2
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	9d 91       	ld	r25, X+
     d26:	91 93       	st	Z+, r25
     d28:	8f 5f       	subi	r24, 0xFF	; 255
     d2a:	86 13       	cpse	r24, r22
     d2c:	fb cf       	rjmp	.-10     	; 0xd24 <TWI_Start_Transceiver_With_Data+0x28>
     d2e:	10 92 a0 02 	sts	0x02A0, r1
     d32:	88 ef       	ldi	r24, 0xF8	; 248
     d34:	80 93 06 02 	sts	0x0206, r24
     d38:	85 ea       	ldi	r24, 0xA5	; 165
     d3a:	80 93 bc 00 	sts	0x00BC, r24
     d3e:	08 95       	ret

00000d40 <__vector_39>:
This function is the Interrupt Service Routine (ISR), and called when the TWI interrupt is triggered;
that is whenever a TWI event has occurred. This function should not be called directly from the main
application.
****************************************************************************/
ISR(TWI_vect)
{
     d40:	1f 92       	push	r1
     d42:	0f 92       	push	r0
     d44:	0f b6       	in	r0, 0x3f	; 63
     d46:	0f 92       	push	r0
     d48:	11 24       	eor	r1, r1
     d4a:	0b b6       	in	r0, 0x3b	; 59
     d4c:	0f 92       	push	r0
     d4e:	2f 93       	push	r18
     d50:	3f 93       	push	r19
     d52:	8f 93       	push	r24
     d54:	9f 93       	push	r25
     d56:	af 93       	push	r26
     d58:	bf 93       	push	r27
     d5a:	ef 93       	push	r30
     d5c:	ff 93       	push	r31
	static unsigned char TWI_bufPtr;
	
	switch (TWSR)
     d5e:	80 91 b9 00 	lds	r24, 0x00B9
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	fc 01       	movw	r30, r24
     d66:	38 97       	sbiw	r30, 0x08	; 8
     d68:	e1 35       	cpi	r30, 0x51	; 81
     d6a:	f1 05       	cpc	r31, r1
     d6c:	08 f0       	brcs	.+2      	; 0xd70 <__vector_39+0x30>
     d6e:	55 c0       	rjmp	.+170    	; 0xe1a <__vector_39+0xda>
     d70:	ee 58       	subi	r30, 0x8E	; 142
     d72:	ff 4f       	sbci	r31, 0xFF	; 255
     d74:	de c5       	rjmp	.+3004   	; 0x1932 <__tablejump2__>
	{
		case TWI_START:             // START has been transmitted
		case TWI_REP_START:         // Repeated START has been transmitted
		TWI_bufPtr = 0;                                     // Set buffer pointer to the TWI Address location
     d76:	10 92 9f 02 	sts	0x029F, r1
		case TWI_MTX_ADR_ACK:       // SLA+W has been tramsmitted and ACK received
		case TWI_MTX_DATA_ACK:      // Data byte has been tramsmitted and ACK received
		if (TWI_bufPtr < TWI_msgSize)
     d7a:	e0 91 9f 02 	lds	r30, 0x029F
     d7e:	80 91 a1 02 	lds	r24, 0x02A1
     d82:	e8 17       	cp	r30, r24
     d84:	70 f4       	brcc	.+28     	; 0xda2 <__vector_39+0x62>
		{
			TWDR = TWI_buf[TWI_bufPtr++];
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	8e 0f       	add	r24, r30
     d8a:	80 93 9f 02 	sts	0x029F, r24
     d8e:	f0 e0       	ldi	r31, 0x00	; 0
     d90:	ee 55       	subi	r30, 0x5E	; 94
     d92:	fd 4f       	sbci	r31, 0xFD	; 253
     d94:	80 81       	ld	r24, Z
     d96:	80 93 bb 00 	sts	0x00BB, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     d9a:	85 e8       	ldi	r24, 0x85	; 133
     d9c:	80 93 bc 00 	sts	0x00BC, r24
     da0:	43 c0       	rjmp	.+134    	; 0xe28 <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to send byte
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           //
			(0<<TWWC);                                 //
		}else                    // Send STOP after last byte
		{
			TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     da2:	80 91 a0 02 	lds	r24, 0x02A0
     da6:	81 60       	ori	r24, 0x01	; 1
     da8:	80 93 a0 02 	sts	0x02A0, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     dac:	84 e9       	ldi	r24, 0x94	; 148
     dae:	80 93 bc 00 	sts	0x00BC, r24
     db2:	3a c0       	rjmp	.+116    	; 0xe28 <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_ACK:      // Data byte has been received and ACK tramsmitted
		TWI_buf[TWI_bufPtr++] = TWDR;
     db4:	e0 91 9f 02 	lds	r30, 0x029F
     db8:	81 e0       	ldi	r24, 0x01	; 1
     dba:	8e 0f       	add	r24, r30
     dbc:	80 93 9f 02 	sts	0x029F, r24
     dc0:	80 91 bb 00 	lds	r24, 0x00BB
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	ee 55       	subi	r30, 0x5E	; 94
     dc8:	fd 4f       	sbci	r31, 0xFD	; 253
     dca:	80 83       	st	Z, r24
		case TWI_MRX_ADR_ACK:       // SLA+R has been tramsmitted and ACK received
		if (TWI_bufPtr < (TWI_msgSize-1) )                  // Detect the last byte to NACK it.
     dcc:	20 91 9f 02 	lds	r18, 0x029F
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	80 91 a1 02 	lds	r24, 0x02A1
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	01 97       	sbiw	r24, 0x01	; 1
     dda:	28 17       	cp	r18, r24
     ddc:	39 07       	cpc	r19, r25
     dde:	24 f4       	brge	.+8      	; 0xde8 <__vector_39+0xa8>
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     de0:	85 ec       	ldi	r24, 0xC5	; 197
     de2:	80 93 bc 00 	sts	0x00BC, r24
     de6:	20 c0       	rjmp	.+64     	; 0xe28 <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to read next byte
			(1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send ACK after reception
			(0<<TWWC);                                 //
		}else                    // Send NACK after next reception
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     de8:	85 e8       	ldi	r24, 0x85	; 133
     dea:	80 93 bc 00 	sts	0x00BC, r24
     dee:	1c c0       	rjmp	.+56     	; 0xe28 <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send NACK after reception
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_NACK:     // Data byte has been received and NACK tramsmitted
		TWI_buf[TWI_bufPtr] = TWDR;
     df0:	80 91 bb 00 	lds	r24, 0x00BB
     df4:	e0 91 9f 02 	lds	r30, 0x029F
     df8:	f0 e0       	ldi	r31, 0x00	; 0
     dfa:	ee 55       	subi	r30, 0x5E	; 94
     dfc:	fd 4f       	sbci	r31, 0xFD	; 253
     dfe:	80 83       	st	Z, r24
		TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     e00:	80 91 a0 02 	lds	r24, 0x02A0
     e04:	81 60       	ori	r24, 0x01	; 1
     e06:	80 93 a0 02 	sts	0x02A0, r24
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     e0a:	84 e9       	ldi	r24, 0x94	; 148
     e0c:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(1<<TWINT)|                      // Disable TWI Interrupt and clear the flag
		(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
		(0<<TWWC);                                 //
		break;
     e10:	0b c0       	rjmp	.+22     	; 0xe28 <__vector_39+0xe8>
		case TWI_ARB_LOST:          // Arbitration lost
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     e12:	85 ea       	ldi	r24, 0xA5	; 165
     e14:	80 93 bc 00 	sts	0x00BC, r24
		(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag
		(0<<TWEA)|(1<<TWSTA)|(0<<TWSTO)|           // Initiate a (RE)START condition.
		(0<<TWWC);                                 //
		break;
     e18:	07 c0       	rjmp	.+14     	; 0xe28 <__vector_39+0xe8>
		case TWI_MRX_ADR_NACK:      // SLA+R has been tramsmitted and NACK received
		case TWI_MTX_DATA_NACK:     // Data byte has been tramsmitted and NACK received
		//    case TWI_NO_STATE              // No relevant state information available; TWINT = ?0?
		case TWI_BUS_ERROR:         // Bus error due to an illegal START or STOP condition
		default:
		TWI_state = TWSR;                                 // Store TWSR and automatically sets clears noErrors bit.
     e1a:	80 91 b9 00 	lds	r24, 0x00B9
     e1e:	80 93 06 02 	sts	0x0206, r24
		// Reset TWI Interface
		TWCR = (1<<TWEN)|                                 // Enable TWI-interface and release TWI pins
     e22:	84 e0       	ldi	r24, 0x04	; 4
     e24:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(0<<TWINT)|                      // Disable Interupt
		(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // No Signal requests
		(0<<TWWC);                                 //
	}
     e28:	ff 91       	pop	r31
     e2a:	ef 91       	pop	r30
     e2c:	bf 91       	pop	r27
     e2e:	af 91       	pop	r26
     e30:	9f 91       	pop	r25
     e32:	8f 91       	pop	r24
     e34:	3f 91       	pop	r19
     e36:	2f 91       	pop	r18
     e38:	0f 90       	pop	r0
     e3a:	0b be       	out	0x3b, r0	; 59
     e3c:	0f 90       	pop	r0
     e3e:	0f be       	out	0x3f, r0	; 63
     e40:	0f 90       	pop	r0
     e42:	1f 90       	pop	r1
     e44:	18 95       	reti

00000e46 <__subsf3>:
     e46:	50 58       	subi	r21, 0x80	; 128

00000e48 <__addsf3>:
     e48:	bb 27       	eor	r27, r27
     e4a:	aa 27       	eor	r26, r26
     e4c:	0e d0       	rcall	.+28     	; 0xe6a <__addsf3x>
     e4e:	4d c1       	rjmp	.+666    	; 0x10ea <__fp_round>
     e50:	3e d1       	rcall	.+636    	; 0x10ce <__fp_pscA>
     e52:	30 f0       	brcs	.+12     	; 0xe60 <__addsf3+0x18>
     e54:	43 d1       	rcall	.+646    	; 0x10dc <__fp_pscB>
     e56:	20 f0       	brcs	.+8      	; 0xe60 <__addsf3+0x18>
     e58:	31 f4       	brne	.+12     	; 0xe66 <__addsf3+0x1e>
     e5a:	9f 3f       	cpi	r25, 0xFF	; 255
     e5c:	11 f4       	brne	.+4      	; 0xe62 <__addsf3+0x1a>
     e5e:	1e f4       	brtc	.+6      	; 0xe66 <__addsf3+0x1e>
     e60:	33 c1       	rjmp	.+614    	; 0x10c8 <__fp_nan>
     e62:	0e f4       	brtc	.+2      	; 0xe66 <__addsf3+0x1e>
     e64:	e0 95       	com	r30
     e66:	e7 fb       	bst	r30, 7
     e68:	29 c1       	rjmp	.+594    	; 0x10bc <__fp_inf>

00000e6a <__addsf3x>:
     e6a:	e9 2f       	mov	r30, r25
     e6c:	4f d1       	rcall	.+670    	; 0x110c <__fp_split3>
     e6e:	80 f3       	brcs	.-32     	; 0xe50 <__addsf3+0x8>
     e70:	ba 17       	cp	r27, r26
     e72:	62 07       	cpc	r22, r18
     e74:	73 07       	cpc	r23, r19
     e76:	84 07       	cpc	r24, r20
     e78:	95 07       	cpc	r25, r21
     e7a:	18 f0       	brcs	.+6      	; 0xe82 <__addsf3x+0x18>
     e7c:	71 f4       	brne	.+28     	; 0xe9a <__addsf3x+0x30>
     e7e:	9e f5       	brtc	.+102    	; 0xee6 <__addsf3x+0x7c>
     e80:	67 c1       	rjmp	.+718    	; 0x1150 <__fp_zero>
     e82:	0e f4       	brtc	.+2      	; 0xe86 <__addsf3x+0x1c>
     e84:	e0 95       	com	r30
     e86:	0b 2e       	mov	r0, r27
     e88:	ba 2f       	mov	r27, r26
     e8a:	a0 2d       	mov	r26, r0
     e8c:	0b 01       	movw	r0, r22
     e8e:	b9 01       	movw	r22, r18
     e90:	90 01       	movw	r18, r0
     e92:	0c 01       	movw	r0, r24
     e94:	ca 01       	movw	r24, r20
     e96:	a0 01       	movw	r20, r0
     e98:	11 24       	eor	r1, r1
     e9a:	ff 27       	eor	r31, r31
     e9c:	59 1b       	sub	r21, r25
     e9e:	99 f0       	breq	.+38     	; 0xec6 <__addsf3x+0x5c>
     ea0:	59 3f       	cpi	r21, 0xF9	; 249
     ea2:	50 f4       	brcc	.+20     	; 0xeb8 <__addsf3x+0x4e>
     ea4:	50 3e       	cpi	r21, 0xE0	; 224
     ea6:	68 f1       	brcs	.+90     	; 0xf02 <__addsf3x+0x98>
     ea8:	1a 16       	cp	r1, r26
     eaa:	f0 40       	sbci	r31, 0x00	; 0
     eac:	a2 2f       	mov	r26, r18
     eae:	23 2f       	mov	r18, r19
     eb0:	34 2f       	mov	r19, r20
     eb2:	44 27       	eor	r20, r20
     eb4:	58 5f       	subi	r21, 0xF8	; 248
     eb6:	f3 cf       	rjmp	.-26     	; 0xe9e <__addsf3x+0x34>
     eb8:	46 95       	lsr	r20
     eba:	37 95       	ror	r19
     ebc:	27 95       	ror	r18
     ebe:	a7 95       	ror	r26
     ec0:	f0 40       	sbci	r31, 0x00	; 0
     ec2:	53 95       	inc	r21
     ec4:	c9 f7       	brne	.-14     	; 0xeb8 <__addsf3x+0x4e>
     ec6:	7e f4       	brtc	.+30     	; 0xee6 <__addsf3x+0x7c>
     ec8:	1f 16       	cp	r1, r31
     eca:	ba 0b       	sbc	r27, r26
     ecc:	62 0b       	sbc	r22, r18
     ece:	73 0b       	sbc	r23, r19
     ed0:	84 0b       	sbc	r24, r20
     ed2:	ba f0       	brmi	.+46     	; 0xf02 <__addsf3x+0x98>
     ed4:	91 50       	subi	r25, 0x01	; 1
     ed6:	a1 f0       	breq	.+40     	; 0xf00 <__addsf3x+0x96>
     ed8:	ff 0f       	add	r31, r31
     eda:	bb 1f       	adc	r27, r27
     edc:	66 1f       	adc	r22, r22
     ede:	77 1f       	adc	r23, r23
     ee0:	88 1f       	adc	r24, r24
     ee2:	c2 f7       	brpl	.-16     	; 0xed4 <__addsf3x+0x6a>
     ee4:	0e c0       	rjmp	.+28     	; 0xf02 <__addsf3x+0x98>
     ee6:	ba 0f       	add	r27, r26
     ee8:	62 1f       	adc	r22, r18
     eea:	73 1f       	adc	r23, r19
     eec:	84 1f       	adc	r24, r20
     eee:	48 f4       	brcc	.+18     	; 0xf02 <__addsf3x+0x98>
     ef0:	87 95       	ror	r24
     ef2:	77 95       	ror	r23
     ef4:	67 95       	ror	r22
     ef6:	b7 95       	ror	r27
     ef8:	f7 95       	ror	r31
     efa:	9e 3f       	cpi	r25, 0xFE	; 254
     efc:	08 f0       	brcs	.+2      	; 0xf00 <__addsf3x+0x96>
     efe:	b3 cf       	rjmp	.-154    	; 0xe66 <__addsf3+0x1e>
     f00:	93 95       	inc	r25
     f02:	88 0f       	add	r24, r24
     f04:	08 f0       	brcs	.+2      	; 0xf08 <__addsf3x+0x9e>
     f06:	99 27       	eor	r25, r25
     f08:	ee 0f       	add	r30, r30
     f0a:	97 95       	ror	r25
     f0c:	87 95       	ror	r24
     f0e:	08 95       	ret

00000f10 <__divsf3>:
     f10:	0c d0       	rcall	.+24     	; 0xf2a <__divsf3x>
     f12:	eb c0       	rjmp	.+470    	; 0x10ea <__fp_round>
     f14:	e3 d0       	rcall	.+454    	; 0x10dc <__fp_pscB>
     f16:	40 f0       	brcs	.+16     	; 0xf28 <__divsf3+0x18>
     f18:	da d0       	rcall	.+436    	; 0x10ce <__fp_pscA>
     f1a:	30 f0       	brcs	.+12     	; 0xf28 <__divsf3+0x18>
     f1c:	21 f4       	brne	.+8      	; 0xf26 <__divsf3+0x16>
     f1e:	5f 3f       	cpi	r21, 0xFF	; 255
     f20:	19 f0       	breq	.+6      	; 0xf28 <__divsf3+0x18>
     f22:	cc c0       	rjmp	.+408    	; 0x10bc <__fp_inf>
     f24:	51 11       	cpse	r21, r1
     f26:	15 c1       	rjmp	.+554    	; 0x1152 <__fp_szero>
     f28:	cf c0       	rjmp	.+414    	; 0x10c8 <__fp_nan>

00000f2a <__divsf3x>:
     f2a:	f0 d0       	rcall	.+480    	; 0x110c <__fp_split3>
     f2c:	98 f3       	brcs	.-26     	; 0xf14 <__divsf3+0x4>

00000f2e <__divsf3_pse>:
     f2e:	99 23       	and	r25, r25
     f30:	c9 f3       	breq	.-14     	; 0xf24 <__divsf3+0x14>
     f32:	55 23       	and	r21, r21
     f34:	b1 f3       	breq	.-20     	; 0xf22 <__divsf3+0x12>
     f36:	95 1b       	sub	r25, r21
     f38:	55 0b       	sbc	r21, r21
     f3a:	bb 27       	eor	r27, r27
     f3c:	aa 27       	eor	r26, r26
     f3e:	62 17       	cp	r22, r18
     f40:	73 07       	cpc	r23, r19
     f42:	84 07       	cpc	r24, r20
     f44:	38 f0       	brcs	.+14     	; 0xf54 <__divsf3_pse+0x26>
     f46:	9f 5f       	subi	r25, 0xFF	; 255
     f48:	5f 4f       	sbci	r21, 0xFF	; 255
     f4a:	22 0f       	add	r18, r18
     f4c:	33 1f       	adc	r19, r19
     f4e:	44 1f       	adc	r20, r20
     f50:	aa 1f       	adc	r26, r26
     f52:	a9 f3       	breq	.-22     	; 0xf3e <__divsf3_pse+0x10>
     f54:	33 d0       	rcall	.+102    	; 0xfbc <__divsf3_pse+0x8e>
     f56:	0e 2e       	mov	r0, r30
     f58:	3a f0       	brmi	.+14     	; 0xf68 <__divsf3_pse+0x3a>
     f5a:	e0 e8       	ldi	r30, 0x80	; 128
     f5c:	30 d0       	rcall	.+96     	; 0xfbe <__divsf3_pse+0x90>
     f5e:	91 50       	subi	r25, 0x01	; 1
     f60:	50 40       	sbci	r21, 0x00	; 0
     f62:	e6 95       	lsr	r30
     f64:	00 1c       	adc	r0, r0
     f66:	ca f7       	brpl	.-14     	; 0xf5a <__divsf3_pse+0x2c>
     f68:	29 d0       	rcall	.+82     	; 0xfbc <__divsf3_pse+0x8e>
     f6a:	fe 2f       	mov	r31, r30
     f6c:	27 d0       	rcall	.+78     	; 0xfbc <__divsf3_pse+0x8e>
     f6e:	66 0f       	add	r22, r22
     f70:	77 1f       	adc	r23, r23
     f72:	88 1f       	adc	r24, r24
     f74:	bb 1f       	adc	r27, r27
     f76:	26 17       	cp	r18, r22
     f78:	37 07       	cpc	r19, r23
     f7a:	48 07       	cpc	r20, r24
     f7c:	ab 07       	cpc	r26, r27
     f7e:	b0 e8       	ldi	r27, 0x80	; 128
     f80:	09 f0       	breq	.+2      	; 0xf84 <__divsf3_pse+0x56>
     f82:	bb 0b       	sbc	r27, r27
     f84:	80 2d       	mov	r24, r0
     f86:	bf 01       	movw	r22, r30
     f88:	ff 27       	eor	r31, r31
     f8a:	93 58       	subi	r25, 0x83	; 131
     f8c:	5f 4f       	sbci	r21, 0xFF	; 255
     f8e:	2a f0       	brmi	.+10     	; 0xf9a <__divsf3_pse+0x6c>
     f90:	9e 3f       	cpi	r25, 0xFE	; 254
     f92:	51 05       	cpc	r21, r1
     f94:	68 f0       	brcs	.+26     	; 0xfb0 <__divsf3_pse+0x82>
     f96:	92 c0       	rjmp	.+292    	; 0x10bc <__fp_inf>
     f98:	dc c0       	rjmp	.+440    	; 0x1152 <__fp_szero>
     f9a:	5f 3f       	cpi	r21, 0xFF	; 255
     f9c:	ec f3       	brlt	.-6      	; 0xf98 <__divsf3_pse+0x6a>
     f9e:	98 3e       	cpi	r25, 0xE8	; 232
     fa0:	dc f3       	brlt	.-10     	; 0xf98 <__divsf3_pse+0x6a>
     fa2:	86 95       	lsr	r24
     fa4:	77 95       	ror	r23
     fa6:	67 95       	ror	r22
     fa8:	b7 95       	ror	r27
     faa:	f7 95       	ror	r31
     fac:	9f 5f       	subi	r25, 0xFF	; 255
     fae:	c9 f7       	brne	.-14     	; 0xfa2 <__divsf3_pse+0x74>
     fb0:	88 0f       	add	r24, r24
     fb2:	91 1d       	adc	r25, r1
     fb4:	96 95       	lsr	r25
     fb6:	87 95       	ror	r24
     fb8:	97 f9       	bld	r25, 7
     fba:	08 95       	ret
     fbc:	e1 e0       	ldi	r30, 0x01	; 1
     fbe:	66 0f       	add	r22, r22
     fc0:	77 1f       	adc	r23, r23
     fc2:	88 1f       	adc	r24, r24
     fc4:	bb 1f       	adc	r27, r27
     fc6:	62 17       	cp	r22, r18
     fc8:	73 07       	cpc	r23, r19
     fca:	84 07       	cpc	r24, r20
     fcc:	ba 07       	cpc	r27, r26
     fce:	20 f0       	brcs	.+8      	; 0xfd8 <__divsf3_pse+0xaa>
     fd0:	62 1b       	sub	r22, r18
     fd2:	73 0b       	sbc	r23, r19
     fd4:	84 0b       	sbc	r24, r20
     fd6:	ba 0b       	sbc	r27, r26
     fd8:	ee 1f       	adc	r30, r30
     fda:	88 f7       	brcc	.-30     	; 0xfbe <__divsf3_pse+0x90>
     fdc:	e0 95       	com	r30
     fde:	08 95       	ret

00000fe0 <__fixsfsi>:
     fe0:	04 d0       	rcall	.+8      	; 0xfea <__fixunssfsi>
     fe2:	68 94       	set
     fe4:	b1 11       	cpse	r27, r1
     fe6:	b5 c0       	rjmp	.+362    	; 0x1152 <__fp_szero>
     fe8:	08 95       	ret

00000fea <__fixunssfsi>:
     fea:	98 d0       	rcall	.+304    	; 0x111c <__fp_splitA>
     fec:	88 f0       	brcs	.+34     	; 0x1010 <__fixunssfsi+0x26>
     fee:	9f 57       	subi	r25, 0x7F	; 127
     ff0:	90 f0       	brcs	.+36     	; 0x1016 <__fixunssfsi+0x2c>
     ff2:	b9 2f       	mov	r27, r25
     ff4:	99 27       	eor	r25, r25
     ff6:	b7 51       	subi	r27, 0x17	; 23
     ff8:	a0 f0       	brcs	.+40     	; 0x1022 <__fixunssfsi+0x38>
     ffa:	d1 f0       	breq	.+52     	; 0x1030 <__fixunssfsi+0x46>
     ffc:	66 0f       	add	r22, r22
     ffe:	77 1f       	adc	r23, r23
    1000:	88 1f       	adc	r24, r24
    1002:	99 1f       	adc	r25, r25
    1004:	1a f0       	brmi	.+6      	; 0x100c <__fixunssfsi+0x22>
    1006:	ba 95       	dec	r27
    1008:	c9 f7       	brne	.-14     	; 0xffc <__fixunssfsi+0x12>
    100a:	12 c0       	rjmp	.+36     	; 0x1030 <__fixunssfsi+0x46>
    100c:	b1 30       	cpi	r27, 0x01	; 1
    100e:	81 f0       	breq	.+32     	; 0x1030 <__fixunssfsi+0x46>
    1010:	9f d0       	rcall	.+318    	; 0x1150 <__fp_zero>
    1012:	b1 e0       	ldi	r27, 0x01	; 1
    1014:	08 95       	ret
    1016:	9c c0       	rjmp	.+312    	; 0x1150 <__fp_zero>
    1018:	67 2f       	mov	r22, r23
    101a:	78 2f       	mov	r23, r24
    101c:	88 27       	eor	r24, r24
    101e:	b8 5f       	subi	r27, 0xF8	; 248
    1020:	39 f0       	breq	.+14     	; 0x1030 <__fixunssfsi+0x46>
    1022:	b9 3f       	cpi	r27, 0xF9	; 249
    1024:	cc f3       	brlt	.-14     	; 0x1018 <__fixunssfsi+0x2e>
    1026:	86 95       	lsr	r24
    1028:	77 95       	ror	r23
    102a:	67 95       	ror	r22
    102c:	b3 95       	inc	r27
    102e:	d9 f7       	brne	.-10     	; 0x1026 <__fixunssfsi+0x3c>
    1030:	3e f4       	brtc	.+14     	; 0x1040 <__fixunssfsi+0x56>
    1032:	90 95       	com	r25
    1034:	80 95       	com	r24
    1036:	70 95       	com	r23
    1038:	61 95       	neg	r22
    103a:	7f 4f       	sbci	r23, 0xFF	; 255
    103c:	8f 4f       	sbci	r24, 0xFF	; 255
    103e:	9f 4f       	sbci	r25, 0xFF	; 255
    1040:	08 95       	ret

00001042 <__floatunsisf>:
    1042:	e8 94       	clt
    1044:	09 c0       	rjmp	.+18     	; 0x1058 <__floatsisf+0x12>

00001046 <__floatsisf>:
    1046:	97 fb       	bst	r25, 7
    1048:	3e f4       	brtc	.+14     	; 0x1058 <__floatsisf+0x12>
    104a:	90 95       	com	r25
    104c:	80 95       	com	r24
    104e:	70 95       	com	r23
    1050:	61 95       	neg	r22
    1052:	7f 4f       	sbci	r23, 0xFF	; 255
    1054:	8f 4f       	sbci	r24, 0xFF	; 255
    1056:	9f 4f       	sbci	r25, 0xFF	; 255
    1058:	99 23       	and	r25, r25
    105a:	a9 f0       	breq	.+42     	; 0x1086 <__floatsisf+0x40>
    105c:	f9 2f       	mov	r31, r25
    105e:	96 e9       	ldi	r25, 0x96	; 150
    1060:	bb 27       	eor	r27, r27
    1062:	93 95       	inc	r25
    1064:	f6 95       	lsr	r31
    1066:	87 95       	ror	r24
    1068:	77 95       	ror	r23
    106a:	67 95       	ror	r22
    106c:	b7 95       	ror	r27
    106e:	f1 11       	cpse	r31, r1
    1070:	f8 cf       	rjmp	.-16     	; 0x1062 <__floatsisf+0x1c>
    1072:	fa f4       	brpl	.+62     	; 0x10b2 <__floatsisf+0x6c>
    1074:	bb 0f       	add	r27, r27
    1076:	11 f4       	brne	.+4      	; 0x107c <__floatsisf+0x36>
    1078:	60 ff       	sbrs	r22, 0
    107a:	1b c0       	rjmp	.+54     	; 0x10b2 <__floatsisf+0x6c>
    107c:	6f 5f       	subi	r22, 0xFF	; 255
    107e:	7f 4f       	sbci	r23, 0xFF	; 255
    1080:	8f 4f       	sbci	r24, 0xFF	; 255
    1082:	9f 4f       	sbci	r25, 0xFF	; 255
    1084:	16 c0       	rjmp	.+44     	; 0x10b2 <__floatsisf+0x6c>
    1086:	88 23       	and	r24, r24
    1088:	11 f0       	breq	.+4      	; 0x108e <__floatsisf+0x48>
    108a:	96 e9       	ldi	r25, 0x96	; 150
    108c:	11 c0       	rjmp	.+34     	; 0x10b0 <__floatsisf+0x6a>
    108e:	77 23       	and	r23, r23
    1090:	21 f0       	breq	.+8      	; 0x109a <__floatsisf+0x54>
    1092:	9e e8       	ldi	r25, 0x8E	; 142
    1094:	87 2f       	mov	r24, r23
    1096:	76 2f       	mov	r23, r22
    1098:	05 c0       	rjmp	.+10     	; 0x10a4 <__floatsisf+0x5e>
    109a:	66 23       	and	r22, r22
    109c:	71 f0       	breq	.+28     	; 0x10ba <__floatsisf+0x74>
    109e:	96 e8       	ldi	r25, 0x86	; 134
    10a0:	86 2f       	mov	r24, r22
    10a2:	70 e0       	ldi	r23, 0x00	; 0
    10a4:	60 e0       	ldi	r22, 0x00	; 0
    10a6:	2a f0       	brmi	.+10     	; 0x10b2 <__floatsisf+0x6c>
    10a8:	9a 95       	dec	r25
    10aa:	66 0f       	add	r22, r22
    10ac:	77 1f       	adc	r23, r23
    10ae:	88 1f       	adc	r24, r24
    10b0:	da f7       	brpl	.-10     	; 0x10a8 <__floatsisf+0x62>
    10b2:	88 0f       	add	r24, r24
    10b4:	96 95       	lsr	r25
    10b6:	87 95       	ror	r24
    10b8:	97 f9       	bld	r25, 7
    10ba:	08 95       	ret

000010bc <__fp_inf>:
    10bc:	97 f9       	bld	r25, 7
    10be:	9f 67       	ori	r25, 0x7F	; 127
    10c0:	80 e8       	ldi	r24, 0x80	; 128
    10c2:	70 e0       	ldi	r23, 0x00	; 0
    10c4:	60 e0       	ldi	r22, 0x00	; 0
    10c6:	08 95       	ret

000010c8 <__fp_nan>:
    10c8:	9f ef       	ldi	r25, 0xFF	; 255
    10ca:	80 ec       	ldi	r24, 0xC0	; 192
    10cc:	08 95       	ret

000010ce <__fp_pscA>:
    10ce:	00 24       	eor	r0, r0
    10d0:	0a 94       	dec	r0
    10d2:	16 16       	cp	r1, r22
    10d4:	17 06       	cpc	r1, r23
    10d6:	18 06       	cpc	r1, r24
    10d8:	09 06       	cpc	r0, r25
    10da:	08 95       	ret

000010dc <__fp_pscB>:
    10dc:	00 24       	eor	r0, r0
    10de:	0a 94       	dec	r0
    10e0:	12 16       	cp	r1, r18
    10e2:	13 06       	cpc	r1, r19
    10e4:	14 06       	cpc	r1, r20
    10e6:	05 06       	cpc	r0, r21
    10e8:	08 95       	ret

000010ea <__fp_round>:
    10ea:	09 2e       	mov	r0, r25
    10ec:	03 94       	inc	r0
    10ee:	00 0c       	add	r0, r0
    10f0:	11 f4       	brne	.+4      	; 0x10f6 <__fp_round+0xc>
    10f2:	88 23       	and	r24, r24
    10f4:	52 f0       	brmi	.+20     	; 0x110a <__fp_round+0x20>
    10f6:	bb 0f       	add	r27, r27
    10f8:	40 f4       	brcc	.+16     	; 0x110a <__fp_round+0x20>
    10fa:	bf 2b       	or	r27, r31
    10fc:	11 f4       	brne	.+4      	; 0x1102 <__fp_round+0x18>
    10fe:	60 ff       	sbrs	r22, 0
    1100:	04 c0       	rjmp	.+8      	; 0x110a <__fp_round+0x20>
    1102:	6f 5f       	subi	r22, 0xFF	; 255
    1104:	7f 4f       	sbci	r23, 0xFF	; 255
    1106:	8f 4f       	sbci	r24, 0xFF	; 255
    1108:	9f 4f       	sbci	r25, 0xFF	; 255
    110a:	08 95       	ret

0000110c <__fp_split3>:
    110c:	57 fd       	sbrc	r21, 7
    110e:	90 58       	subi	r25, 0x80	; 128
    1110:	44 0f       	add	r20, r20
    1112:	55 1f       	adc	r21, r21
    1114:	59 f0       	breq	.+22     	; 0x112c <__fp_splitA+0x10>
    1116:	5f 3f       	cpi	r21, 0xFF	; 255
    1118:	71 f0       	breq	.+28     	; 0x1136 <__fp_splitA+0x1a>
    111a:	47 95       	ror	r20

0000111c <__fp_splitA>:
    111c:	88 0f       	add	r24, r24
    111e:	97 fb       	bst	r25, 7
    1120:	99 1f       	adc	r25, r25
    1122:	61 f0       	breq	.+24     	; 0x113c <__fp_splitA+0x20>
    1124:	9f 3f       	cpi	r25, 0xFF	; 255
    1126:	79 f0       	breq	.+30     	; 0x1146 <__fp_splitA+0x2a>
    1128:	87 95       	ror	r24
    112a:	08 95       	ret
    112c:	12 16       	cp	r1, r18
    112e:	13 06       	cpc	r1, r19
    1130:	14 06       	cpc	r1, r20
    1132:	55 1f       	adc	r21, r21
    1134:	f2 cf       	rjmp	.-28     	; 0x111a <__fp_split3+0xe>
    1136:	46 95       	lsr	r20
    1138:	f1 df       	rcall	.-30     	; 0x111c <__fp_splitA>
    113a:	08 c0       	rjmp	.+16     	; 0x114c <__fp_splitA+0x30>
    113c:	16 16       	cp	r1, r22
    113e:	17 06       	cpc	r1, r23
    1140:	18 06       	cpc	r1, r24
    1142:	99 1f       	adc	r25, r25
    1144:	f1 cf       	rjmp	.-30     	; 0x1128 <__fp_splitA+0xc>
    1146:	86 95       	lsr	r24
    1148:	71 05       	cpc	r23, r1
    114a:	61 05       	cpc	r22, r1
    114c:	08 94       	sec
    114e:	08 95       	ret

00001150 <__fp_zero>:
    1150:	e8 94       	clt

00001152 <__fp_szero>:
    1152:	bb 27       	eor	r27, r27
    1154:	66 27       	eor	r22, r22
    1156:	77 27       	eor	r23, r23
    1158:	cb 01       	movw	r24, r22
    115a:	97 f9       	bld	r25, 7
    115c:	08 95       	ret

0000115e <__mulsf3>:
    115e:	0b d0       	rcall	.+22     	; 0x1176 <__mulsf3x>
    1160:	c4 cf       	rjmp	.-120    	; 0x10ea <__fp_round>
    1162:	b5 df       	rcall	.-150    	; 0x10ce <__fp_pscA>
    1164:	28 f0       	brcs	.+10     	; 0x1170 <__mulsf3+0x12>
    1166:	ba df       	rcall	.-140    	; 0x10dc <__fp_pscB>
    1168:	18 f0       	brcs	.+6      	; 0x1170 <__mulsf3+0x12>
    116a:	95 23       	and	r25, r21
    116c:	09 f0       	breq	.+2      	; 0x1170 <__mulsf3+0x12>
    116e:	a6 cf       	rjmp	.-180    	; 0x10bc <__fp_inf>
    1170:	ab cf       	rjmp	.-170    	; 0x10c8 <__fp_nan>
    1172:	11 24       	eor	r1, r1
    1174:	ee cf       	rjmp	.-36     	; 0x1152 <__fp_szero>

00001176 <__mulsf3x>:
    1176:	ca df       	rcall	.-108    	; 0x110c <__fp_split3>
    1178:	a0 f3       	brcs	.-24     	; 0x1162 <__mulsf3+0x4>

0000117a <__mulsf3_pse>:
    117a:	95 9f       	mul	r25, r21
    117c:	d1 f3       	breq	.-12     	; 0x1172 <__mulsf3+0x14>
    117e:	95 0f       	add	r25, r21
    1180:	50 e0       	ldi	r21, 0x00	; 0
    1182:	55 1f       	adc	r21, r21
    1184:	62 9f       	mul	r22, r18
    1186:	f0 01       	movw	r30, r0
    1188:	72 9f       	mul	r23, r18
    118a:	bb 27       	eor	r27, r27
    118c:	f0 0d       	add	r31, r0
    118e:	b1 1d       	adc	r27, r1
    1190:	63 9f       	mul	r22, r19
    1192:	aa 27       	eor	r26, r26
    1194:	f0 0d       	add	r31, r0
    1196:	b1 1d       	adc	r27, r1
    1198:	aa 1f       	adc	r26, r26
    119a:	64 9f       	mul	r22, r20
    119c:	66 27       	eor	r22, r22
    119e:	b0 0d       	add	r27, r0
    11a0:	a1 1d       	adc	r26, r1
    11a2:	66 1f       	adc	r22, r22
    11a4:	82 9f       	mul	r24, r18
    11a6:	22 27       	eor	r18, r18
    11a8:	b0 0d       	add	r27, r0
    11aa:	a1 1d       	adc	r26, r1
    11ac:	62 1f       	adc	r22, r18
    11ae:	73 9f       	mul	r23, r19
    11b0:	b0 0d       	add	r27, r0
    11b2:	a1 1d       	adc	r26, r1
    11b4:	62 1f       	adc	r22, r18
    11b6:	83 9f       	mul	r24, r19
    11b8:	a0 0d       	add	r26, r0
    11ba:	61 1d       	adc	r22, r1
    11bc:	22 1f       	adc	r18, r18
    11be:	74 9f       	mul	r23, r20
    11c0:	33 27       	eor	r19, r19
    11c2:	a0 0d       	add	r26, r0
    11c4:	61 1d       	adc	r22, r1
    11c6:	23 1f       	adc	r18, r19
    11c8:	84 9f       	mul	r24, r20
    11ca:	60 0d       	add	r22, r0
    11cc:	21 1d       	adc	r18, r1
    11ce:	82 2f       	mov	r24, r18
    11d0:	76 2f       	mov	r23, r22
    11d2:	6a 2f       	mov	r22, r26
    11d4:	11 24       	eor	r1, r1
    11d6:	9f 57       	subi	r25, 0x7F	; 127
    11d8:	50 40       	sbci	r21, 0x00	; 0
    11da:	8a f0       	brmi	.+34     	; 0x11fe <__mulsf3_pse+0x84>
    11dc:	e1 f0       	breq	.+56     	; 0x1216 <__mulsf3_pse+0x9c>
    11de:	88 23       	and	r24, r24
    11e0:	4a f0       	brmi	.+18     	; 0x11f4 <__mulsf3_pse+0x7a>
    11e2:	ee 0f       	add	r30, r30
    11e4:	ff 1f       	adc	r31, r31
    11e6:	bb 1f       	adc	r27, r27
    11e8:	66 1f       	adc	r22, r22
    11ea:	77 1f       	adc	r23, r23
    11ec:	88 1f       	adc	r24, r24
    11ee:	91 50       	subi	r25, 0x01	; 1
    11f0:	50 40       	sbci	r21, 0x00	; 0
    11f2:	a9 f7       	brne	.-22     	; 0x11de <__mulsf3_pse+0x64>
    11f4:	9e 3f       	cpi	r25, 0xFE	; 254
    11f6:	51 05       	cpc	r21, r1
    11f8:	70 f0       	brcs	.+28     	; 0x1216 <__mulsf3_pse+0x9c>
    11fa:	60 cf       	rjmp	.-320    	; 0x10bc <__fp_inf>
    11fc:	aa cf       	rjmp	.-172    	; 0x1152 <__fp_szero>
    11fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1200:	ec f3       	brlt	.-6      	; 0x11fc <__mulsf3_pse+0x82>
    1202:	98 3e       	cpi	r25, 0xE8	; 232
    1204:	dc f3       	brlt	.-10     	; 0x11fc <__mulsf3_pse+0x82>
    1206:	86 95       	lsr	r24
    1208:	77 95       	ror	r23
    120a:	67 95       	ror	r22
    120c:	b7 95       	ror	r27
    120e:	f7 95       	ror	r31
    1210:	e7 95       	ror	r30
    1212:	9f 5f       	subi	r25, 0xFF	; 255
    1214:	c1 f7       	brne	.-16     	; 0x1206 <__mulsf3_pse+0x8c>
    1216:	fe 2b       	or	r31, r30
    1218:	88 0f       	add	r24, r24
    121a:	91 1d       	adc	r25, r1
    121c:	96 95       	lsr	r25
    121e:	87 95       	ror	r24
    1220:	97 f9       	bld	r25, 7
    1222:	08 95       	ret

00001224 <vfprintf>:
    1224:	2f 92       	push	r2
    1226:	3f 92       	push	r3
    1228:	4f 92       	push	r4
    122a:	5f 92       	push	r5
    122c:	6f 92       	push	r6
    122e:	7f 92       	push	r7
    1230:	8f 92       	push	r8
    1232:	9f 92       	push	r9
    1234:	af 92       	push	r10
    1236:	bf 92       	push	r11
    1238:	cf 92       	push	r12
    123a:	df 92       	push	r13
    123c:	ef 92       	push	r14
    123e:	ff 92       	push	r15
    1240:	0f 93       	push	r16
    1242:	1f 93       	push	r17
    1244:	cf 93       	push	r28
    1246:	df 93       	push	r29
    1248:	cd b7       	in	r28, 0x3d	; 61
    124a:	de b7       	in	r29, 0x3e	; 62
    124c:	63 97       	sbiw	r28, 0x13	; 19
    124e:	0f b6       	in	r0, 0x3f	; 63
    1250:	f8 94       	cli
    1252:	de bf       	out	0x3e, r29	; 62
    1254:	0f be       	out	0x3f, r0	; 63
    1256:	cd bf       	out	0x3d, r28	; 61
    1258:	7c 01       	movw	r14, r24
    125a:	1b 01       	movw	r2, r22
    125c:	6a 01       	movw	r12, r20
    125e:	fc 01       	movw	r30, r24
    1260:	17 82       	std	Z+7, r1	; 0x07
    1262:	16 82       	std	Z+6, r1	; 0x06
    1264:	83 81       	ldd	r24, Z+3	; 0x03
    1266:	81 ff       	sbrs	r24, 1
    1268:	49 c3       	rjmp	.+1682   	; 0x18fc <vfprintf+0x6d8>
    126a:	be 01       	movw	r22, r28
    126c:	6f 5f       	subi	r22, 0xFF	; 255
    126e:	7f 4f       	sbci	r23, 0xFF	; 255
    1270:	4b 01       	movw	r8, r22
    1272:	f7 01       	movw	r30, r14
    1274:	93 81       	ldd	r25, Z+3	; 0x03
    1276:	f1 01       	movw	r30, r2
    1278:	93 fd       	sbrc	r25, 3
    127a:	85 91       	lpm	r24, Z+
    127c:	93 ff       	sbrs	r25, 3
    127e:	81 91       	ld	r24, Z+
    1280:	1f 01       	movw	r2, r30
    1282:	88 23       	and	r24, r24
    1284:	09 f4       	brne	.+2      	; 0x1288 <vfprintf+0x64>
    1286:	36 c3       	rjmp	.+1644   	; 0x18f4 <vfprintf+0x6d0>
    1288:	85 32       	cpi	r24, 0x25	; 37
    128a:	39 f4       	brne	.+14     	; 0x129a <vfprintf+0x76>
    128c:	93 fd       	sbrc	r25, 3
    128e:	85 91       	lpm	r24, Z+
    1290:	93 ff       	sbrs	r25, 3
    1292:	81 91       	ld	r24, Z+
    1294:	1f 01       	movw	r2, r30
    1296:	85 32       	cpi	r24, 0x25	; 37
    1298:	31 f4       	brne	.+12     	; 0x12a6 <vfprintf+0x82>
    129a:	b7 01       	movw	r22, r14
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	96 d4       	rcall	.+2348   	; 0x1bcc <fputc>
    12a0:	56 01       	movw	r10, r12
    12a2:	65 01       	movw	r12, r10
    12a4:	e6 cf       	rjmp	.-52     	; 0x1272 <vfprintf+0x4e>
    12a6:	10 e0       	ldi	r17, 0x00	; 0
    12a8:	51 2c       	mov	r5, r1
    12aa:	20 e0       	ldi	r18, 0x00	; 0
    12ac:	20 32       	cpi	r18, 0x20	; 32
    12ae:	a0 f4       	brcc	.+40     	; 0x12d8 <vfprintf+0xb4>
    12b0:	8b 32       	cpi	r24, 0x2B	; 43
    12b2:	69 f0       	breq	.+26     	; 0x12ce <vfprintf+0xaa>
    12b4:	30 f4       	brcc	.+12     	; 0x12c2 <vfprintf+0x9e>
    12b6:	80 32       	cpi	r24, 0x20	; 32
    12b8:	59 f0       	breq	.+22     	; 0x12d0 <vfprintf+0xac>
    12ba:	83 32       	cpi	r24, 0x23	; 35
    12bc:	69 f4       	brne	.+26     	; 0x12d8 <vfprintf+0xb4>
    12be:	20 61       	ori	r18, 0x10	; 16
    12c0:	2c c0       	rjmp	.+88     	; 0x131a <vfprintf+0xf6>
    12c2:	8d 32       	cpi	r24, 0x2D	; 45
    12c4:	39 f0       	breq	.+14     	; 0x12d4 <vfprintf+0xb0>
    12c6:	80 33       	cpi	r24, 0x30	; 48
    12c8:	39 f4       	brne	.+14     	; 0x12d8 <vfprintf+0xb4>
    12ca:	21 60       	ori	r18, 0x01	; 1
    12cc:	26 c0       	rjmp	.+76     	; 0x131a <vfprintf+0xf6>
    12ce:	22 60       	ori	r18, 0x02	; 2
    12d0:	24 60       	ori	r18, 0x04	; 4
    12d2:	23 c0       	rjmp	.+70     	; 0x131a <vfprintf+0xf6>
    12d4:	28 60       	ori	r18, 0x08	; 8
    12d6:	21 c0       	rjmp	.+66     	; 0x131a <vfprintf+0xf6>
    12d8:	27 fd       	sbrc	r18, 7
    12da:	27 c0       	rjmp	.+78     	; 0x132a <vfprintf+0x106>
    12dc:	30 ed       	ldi	r19, 0xD0	; 208
    12de:	38 0f       	add	r19, r24
    12e0:	3a 30       	cpi	r19, 0x0A	; 10
    12e2:	78 f4       	brcc	.+30     	; 0x1302 <vfprintf+0xde>
    12e4:	26 ff       	sbrs	r18, 6
    12e6:	06 c0       	rjmp	.+12     	; 0x12f4 <vfprintf+0xd0>
    12e8:	fa e0       	ldi	r31, 0x0A	; 10
    12ea:	1f 9f       	mul	r17, r31
    12ec:	30 0d       	add	r19, r0
    12ee:	11 24       	eor	r1, r1
    12f0:	13 2f       	mov	r17, r19
    12f2:	13 c0       	rjmp	.+38     	; 0x131a <vfprintf+0xf6>
    12f4:	6a e0       	ldi	r22, 0x0A	; 10
    12f6:	56 9e       	mul	r5, r22
    12f8:	30 0d       	add	r19, r0
    12fa:	11 24       	eor	r1, r1
    12fc:	53 2e       	mov	r5, r19
    12fe:	20 62       	ori	r18, 0x20	; 32
    1300:	0c c0       	rjmp	.+24     	; 0x131a <vfprintf+0xf6>
    1302:	8e 32       	cpi	r24, 0x2E	; 46
    1304:	21 f4       	brne	.+8      	; 0x130e <vfprintf+0xea>
    1306:	26 fd       	sbrc	r18, 6
    1308:	f5 c2       	rjmp	.+1514   	; 0x18f4 <vfprintf+0x6d0>
    130a:	20 64       	ori	r18, 0x40	; 64
    130c:	06 c0       	rjmp	.+12     	; 0x131a <vfprintf+0xf6>
    130e:	8c 36       	cpi	r24, 0x6C	; 108
    1310:	11 f4       	brne	.+4      	; 0x1316 <vfprintf+0xf2>
    1312:	20 68       	ori	r18, 0x80	; 128
    1314:	02 c0       	rjmp	.+4      	; 0x131a <vfprintf+0xf6>
    1316:	88 36       	cpi	r24, 0x68	; 104
    1318:	41 f4       	brne	.+16     	; 0x132a <vfprintf+0x106>
    131a:	f1 01       	movw	r30, r2
    131c:	93 fd       	sbrc	r25, 3
    131e:	85 91       	lpm	r24, Z+
    1320:	93 ff       	sbrs	r25, 3
    1322:	81 91       	ld	r24, Z+
    1324:	1f 01       	movw	r2, r30
    1326:	81 11       	cpse	r24, r1
    1328:	c1 cf       	rjmp	.-126    	; 0x12ac <vfprintf+0x88>
    132a:	9b eb       	ldi	r25, 0xBB	; 187
    132c:	98 0f       	add	r25, r24
    132e:	93 30       	cpi	r25, 0x03	; 3
    1330:	18 f4       	brcc	.+6      	; 0x1338 <vfprintf+0x114>
    1332:	20 61       	ori	r18, 0x10	; 16
    1334:	80 5e       	subi	r24, 0xE0	; 224
    1336:	06 c0       	rjmp	.+12     	; 0x1344 <vfprintf+0x120>
    1338:	9b e9       	ldi	r25, 0x9B	; 155
    133a:	98 0f       	add	r25, r24
    133c:	93 30       	cpi	r25, 0x03	; 3
    133e:	08 f0       	brcs	.+2      	; 0x1342 <vfprintf+0x11e>
    1340:	9a c1       	rjmp	.+820    	; 0x1676 <vfprintf+0x452>
    1342:	2f 7e       	andi	r18, 0xEF	; 239
    1344:	26 ff       	sbrs	r18, 6
    1346:	16 e0       	ldi	r17, 0x06	; 6
    1348:	2f 73       	andi	r18, 0x3F	; 63
    134a:	72 2e       	mov	r7, r18
    134c:	85 36       	cpi	r24, 0x65	; 101
    134e:	21 f4       	brne	.+8      	; 0x1358 <vfprintf+0x134>
    1350:	f2 2f       	mov	r31, r18
    1352:	f0 64       	ori	r31, 0x40	; 64
    1354:	7f 2e       	mov	r7, r31
    1356:	08 c0       	rjmp	.+16     	; 0x1368 <vfprintf+0x144>
    1358:	86 36       	cpi	r24, 0x66	; 102
    135a:	21 f4       	brne	.+8      	; 0x1364 <vfprintf+0x140>
    135c:	62 2f       	mov	r22, r18
    135e:	60 68       	ori	r22, 0x80	; 128
    1360:	76 2e       	mov	r7, r22
    1362:	02 c0       	rjmp	.+4      	; 0x1368 <vfprintf+0x144>
    1364:	11 11       	cpse	r17, r1
    1366:	11 50       	subi	r17, 0x01	; 1
    1368:	77 fe       	sbrs	r7, 7
    136a:	07 c0       	rjmp	.+14     	; 0x137a <vfprintf+0x156>
    136c:	1c 33       	cpi	r17, 0x3C	; 60
    136e:	48 f4       	brcc	.+18     	; 0x1382 <vfprintf+0x15e>
    1370:	44 24       	eor	r4, r4
    1372:	43 94       	inc	r4
    1374:	41 0e       	add	r4, r17
    1376:	27 e0       	ldi	r18, 0x07	; 7
    1378:	0b c0       	rjmp	.+22     	; 0x1390 <vfprintf+0x16c>
    137a:	18 30       	cpi	r17, 0x08	; 8
    137c:	30 f4       	brcc	.+12     	; 0x138a <vfprintf+0x166>
    137e:	21 2f       	mov	r18, r17
    1380:	06 c0       	rjmp	.+12     	; 0x138e <vfprintf+0x16a>
    1382:	27 e0       	ldi	r18, 0x07	; 7
    1384:	4c e3       	ldi	r20, 0x3C	; 60
    1386:	44 2e       	mov	r4, r20
    1388:	03 c0       	rjmp	.+6      	; 0x1390 <vfprintf+0x16c>
    138a:	27 e0       	ldi	r18, 0x07	; 7
    138c:	17 e0       	ldi	r17, 0x07	; 7
    138e:	41 2c       	mov	r4, r1
    1390:	56 01       	movw	r10, r12
    1392:	74 e0       	ldi	r23, 0x04	; 4
    1394:	a7 0e       	add	r10, r23
    1396:	b1 1c       	adc	r11, r1
    1398:	f6 01       	movw	r30, r12
    139a:	60 81       	ld	r22, Z
    139c:	71 81       	ldd	r23, Z+1	; 0x01
    139e:	82 81       	ldd	r24, Z+2	; 0x02
    13a0:	93 81       	ldd	r25, Z+3	; 0x03
    13a2:	04 2d       	mov	r16, r4
    13a4:	a4 01       	movw	r20, r8
    13a6:	da d2       	rcall	.+1460   	; 0x195c <__ftoa_engine>
    13a8:	6c 01       	movw	r12, r24
    13aa:	09 81       	ldd	r16, Y+1	; 0x01
    13ac:	00 ff       	sbrs	r16, 0
    13ae:	02 c0       	rjmp	.+4      	; 0x13b4 <vfprintf+0x190>
    13b0:	03 ff       	sbrs	r16, 3
    13b2:	06 c0       	rjmp	.+12     	; 0x13c0 <vfprintf+0x19c>
    13b4:	71 fc       	sbrc	r7, 1
    13b6:	07 c0       	rjmp	.+14     	; 0x13c6 <vfprintf+0x1a2>
    13b8:	72 fc       	sbrc	r7, 2
    13ba:	08 c0       	rjmp	.+16     	; 0x13cc <vfprintf+0x1a8>
    13bc:	61 2c       	mov	r6, r1
    13be:	08 c0       	rjmp	.+16     	; 0x13d0 <vfprintf+0x1ac>
    13c0:	3d e2       	ldi	r19, 0x2D	; 45
    13c2:	63 2e       	mov	r6, r19
    13c4:	05 c0       	rjmp	.+10     	; 0x13d0 <vfprintf+0x1ac>
    13c6:	2b e2       	ldi	r18, 0x2B	; 43
    13c8:	62 2e       	mov	r6, r18
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <vfprintf+0x1ac>
    13cc:	90 e2       	ldi	r25, 0x20	; 32
    13ce:	69 2e       	mov	r6, r25
    13d0:	80 2f       	mov	r24, r16
    13d2:	8c 70       	andi	r24, 0x0C	; 12
    13d4:	81 f1       	breq	.+96     	; 0x1436 <vfprintf+0x212>
    13d6:	66 20       	and	r6, r6
    13d8:	11 f0       	breq	.+4      	; 0x13de <vfprintf+0x1ba>
    13da:	84 e0       	ldi	r24, 0x04	; 4
    13dc:	01 c0       	rjmp	.+2      	; 0x13e0 <vfprintf+0x1bc>
    13de:	83 e0       	ldi	r24, 0x03	; 3
    13e0:	85 15       	cp	r24, r5
    13e2:	10 f0       	brcs	.+4      	; 0x13e8 <vfprintf+0x1c4>
    13e4:	51 2c       	mov	r5, r1
    13e6:	0a c0       	rjmp	.+20     	; 0x13fc <vfprintf+0x1d8>
    13e8:	58 1a       	sub	r5, r24
    13ea:	73 fc       	sbrc	r7, 3
    13ec:	07 c0       	rjmp	.+14     	; 0x13fc <vfprintf+0x1d8>
    13ee:	b7 01       	movw	r22, r14
    13f0:	80 e2       	ldi	r24, 0x20	; 32
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	eb d3       	rcall	.+2006   	; 0x1bcc <fputc>
    13f6:	5a 94       	dec	r5
    13f8:	d1 f7       	brne	.-12     	; 0x13ee <vfprintf+0x1ca>
    13fa:	f4 cf       	rjmp	.-24     	; 0x13e4 <vfprintf+0x1c0>
    13fc:	66 20       	and	r6, r6
    13fe:	21 f0       	breq	.+8      	; 0x1408 <vfprintf+0x1e4>
    1400:	b7 01       	movw	r22, r14
    1402:	86 2d       	mov	r24, r6
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	e2 d3       	rcall	.+1988   	; 0x1bcc <fputc>
    1408:	03 fd       	sbrc	r16, 3
    140a:	03 c0       	rjmp	.+6      	; 0x1412 <vfprintf+0x1ee>
    140c:	0a e8       	ldi	r16, 0x8A	; 138
    140e:	11 e0       	ldi	r17, 0x01	; 1
    1410:	02 c0       	rjmp	.+4      	; 0x1416 <vfprintf+0x1f2>
    1412:	06 e8       	ldi	r16, 0x86	; 134
    1414:	11 e0       	ldi	r17, 0x01	; 1
    1416:	f7 2d       	mov	r31, r7
    1418:	f0 71       	andi	r31, 0x10	; 16
    141a:	7f 2e       	mov	r7, r31
    141c:	f8 01       	movw	r30, r16
    141e:	84 91       	lpm	r24, Z
    1420:	88 23       	and	r24, r24
    1422:	09 f4       	brne	.+2      	; 0x1426 <vfprintf+0x202>
    1424:	5e c2       	rjmp	.+1212   	; 0x18e2 <vfprintf+0x6be>
    1426:	71 10       	cpse	r7, r1
    1428:	80 52       	subi	r24, 0x20	; 32
    142a:	b7 01       	movw	r22, r14
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	ce d3       	rcall	.+1948   	; 0x1bcc <fputc>
    1430:	0f 5f       	subi	r16, 0xFF	; 255
    1432:	1f 4f       	sbci	r17, 0xFF	; 255
    1434:	f3 cf       	rjmp	.-26     	; 0x141c <vfprintf+0x1f8>
    1436:	77 fe       	sbrs	r7, 7
    1438:	0f c0       	rjmp	.+30     	; 0x1458 <vfprintf+0x234>
    143a:	4c 0c       	add	r4, r12
    143c:	04 ff       	sbrs	r16, 4
    143e:	04 c0       	rjmp	.+8      	; 0x1448 <vfprintf+0x224>
    1440:	8a 81       	ldd	r24, Y+2	; 0x02
    1442:	81 33       	cpi	r24, 0x31	; 49
    1444:	09 f4       	brne	.+2      	; 0x1448 <vfprintf+0x224>
    1446:	4a 94       	dec	r4
    1448:	14 14       	cp	r1, r4
    144a:	74 f5       	brge	.+92     	; 0x14a8 <vfprintf+0x284>
    144c:	f8 e0       	ldi	r31, 0x08	; 8
    144e:	f4 15       	cp	r31, r4
    1450:	78 f5       	brcc	.+94     	; 0x14b0 <vfprintf+0x28c>
    1452:	88 e0       	ldi	r24, 0x08	; 8
    1454:	48 2e       	mov	r4, r24
    1456:	2c c0       	rjmp	.+88     	; 0x14b0 <vfprintf+0x28c>
    1458:	76 fc       	sbrc	r7, 6
    145a:	2a c0       	rjmp	.+84     	; 0x14b0 <vfprintf+0x28c>
    145c:	81 2f       	mov	r24, r17
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	8c 15       	cp	r24, r12
    1462:	9d 05       	cpc	r25, r13
    1464:	9c f0       	brlt	.+38     	; 0x148c <vfprintf+0x268>
    1466:	6c ef       	ldi	r22, 0xFC	; 252
    1468:	c6 16       	cp	r12, r22
    146a:	6f ef       	ldi	r22, 0xFF	; 255
    146c:	d6 06       	cpc	r13, r22
    146e:	74 f0       	brlt	.+28     	; 0x148c <vfprintf+0x268>
    1470:	77 2d       	mov	r23, r7
    1472:	70 68       	ori	r23, 0x80	; 128
    1474:	77 2e       	mov	r7, r23
    1476:	0a c0       	rjmp	.+20     	; 0x148c <vfprintf+0x268>
    1478:	e2 e0       	ldi	r30, 0x02	; 2
    147a:	f0 e0       	ldi	r31, 0x00	; 0
    147c:	ec 0f       	add	r30, r28
    147e:	fd 1f       	adc	r31, r29
    1480:	e1 0f       	add	r30, r17
    1482:	f1 1d       	adc	r31, r1
    1484:	80 81       	ld	r24, Z
    1486:	80 33       	cpi	r24, 0x30	; 48
    1488:	19 f4       	brne	.+6      	; 0x1490 <vfprintf+0x26c>
    148a:	11 50       	subi	r17, 0x01	; 1
    148c:	11 11       	cpse	r17, r1
    148e:	f4 cf       	rjmp	.-24     	; 0x1478 <vfprintf+0x254>
    1490:	77 fe       	sbrs	r7, 7
    1492:	0e c0       	rjmp	.+28     	; 0x14b0 <vfprintf+0x28c>
    1494:	44 24       	eor	r4, r4
    1496:	43 94       	inc	r4
    1498:	41 0e       	add	r4, r17
    149a:	81 2f       	mov	r24, r17
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	c8 16       	cp	r12, r24
    14a0:	d9 06       	cpc	r13, r25
    14a2:	2c f4       	brge	.+10     	; 0x14ae <vfprintf+0x28a>
    14a4:	1c 19       	sub	r17, r12
    14a6:	04 c0       	rjmp	.+8      	; 0x14b0 <vfprintf+0x28c>
    14a8:	44 24       	eor	r4, r4
    14aa:	43 94       	inc	r4
    14ac:	01 c0       	rjmp	.+2      	; 0x14b0 <vfprintf+0x28c>
    14ae:	10 e0       	ldi	r17, 0x00	; 0
    14b0:	77 fe       	sbrs	r7, 7
    14b2:	07 c0       	rjmp	.+14     	; 0x14c2 <vfprintf+0x29e>
    14b4:	1c 14       	cp	r1, r12
    14b6:	1d 04       	cpc	r1, r13
    14b8:	3c f4       	brge	.+14     	; 0x14c8 <vfprintf+0x2a4>
    14ba:	96 01       	movw	r18, r12
    14bc:	2f 5f       	subi	r18, 0xFF	; 255
    14be:	3f 4f       	sbci	r19, 0xFF	; 255
    14c0:	05 c0       	rjmp	.+10     	; 0x14cc <vfprintf+0x2a8>
    14c2:	25 e0       	ldi	r18, 0x05	; 5
    14c4:	30 e0       	ldi	r19, 0x00	; 0
    14c6:	02 c0       	rjmp	.+4      	; 0x14cc <vfprintf+0x2a8>
    14c8:	21 e0       	ldi	r18, 0x01	; 1
    14ca:	30 e0       	ldi	r19, 0x00	; 0
    14cc:	66 20       	and	r6, r6
    14ce:	11 f0       	breq	.+4      	; 0x14d4 <vfprintf+0x2b0>
    14d0:	2f 5f       	subi	r18, 0xFF	; 255
    14d2:	3f 4f       	sbci	r19, 0xFF	; 255
    14d4:	11 23       	and	r17, r17
    14d6:	31 f0       	breq	.+12     	; 0x14e4 <vfprintf+0x2c0>
    14d8:	41 2f       	mov	r20, r17
    14da:	50 e0       	ldi	r21, 0x00	; 0
    14dc:	4f 5f       	subi	r20, 0xFF	; 255
    14de:	5f 4f       	sbci	r21, 0xFF	; 255
    14e0:	24 0f       	add	r18, r20
    14e2:	35 1f       	adc	r19, r21
    14e4:	45 2d       	mov	r20, r5
    14e6:	50 e0       	ldi	r21, 0x00	; 0
    14e8:	24 17       	cp	r18, r20
    14ea:	35 07       	cpc	r19, r21
    14ec:	14 f4       	brge	.+4      	; 0x14f2 <vfprintf+0x2ce>
    14ee:	52 1a       	sub	r5, r18
    14f0:	01 c0       	rjmp	.+2      	; 0x14f4 <vfprintf+0x2d0>
    14f2:	51 2c       	mov	r5, r1
    14f4:	87 2d       	mov	r24, r7
    14f6:	89 70       	andi	r24, 0x09	; 9
    14f8:	41 f4       	brne	.+16     	; 0x150a <vfprintf+0x2e6>
    14fa:	55 20       	and	r5, r5
    14fc:	31 f0       	breq	.+12     	; 0x150a <vfprintf+0x2e6>
    14fe:	b7 01       	movw	r22, r14
    1500:	80 e2       	ldi	r24, 0x20	; 32
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	63 d3       	rcall	.+1734   	; 0x1bcc <fputc>
    1506:	5a 94       	dec	r5
    1508:	f8 cf       	rjmp	.-16     	; 0x14fa <vfprintf+0x2d6>
    150a:	66 20       	and	r6, r6
    150c:	21 f0       	breq	.+8      	; 0x1516 <vfprintf+0x2f2>
    150e:	b7 01       	movw	r22, r14
    1510:	86 2d       	mov	r24, r6
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	5b d3       	rcall	.+1718   	; 0x1bcc <fputc>
    1516:	73 fc       	sbrc	r7, 3
    1518:	08 c0       	rjmp	.+16     	; 0x152a <vfprintf+0x306>
    151a:	55 20       	and	r5, r5
    151c:	31 f0       	breq	.+12     	; 0x152a <vfprintf+0x306>
    151e:	b7 01       	movw	r22, r14
    1520:	80 e3       	ldi	r24, 0x30	; 48
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	53 d3       	rcall	.+1702   	; 0x1bcc <fputc>
    1526:	5a 94       	dec	r5
    1528:	f8 cf       	rjmp	.-16     	; 0x151a <vfprintf+0x2f6>
    152a:	77 fe       	sbrs	r7, 7
    152c:	5d c0       	rjmp	.+186    	; 0x15e8 <vfprintf+0x3c4>
    152e:	9c 2d       	mov	r25, r12
    1530:	8d 2d       	mov	r24, r13
    1532:	d7 fe       	sbrs	r13, 7
    1534:	02 c0       	rjmp	.+4      	; 0x153a <vfprintf+0x316>
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	80 e0       	ldi	r24, 0x00	; 0
    153a:	69 2e       	mov	r6, r25
    153c:	78 2e       	mov	r7, r24
    153e:	40 e0       	ldi	r20, 0x00	; 0
    1540:	50 e0       	ldi	r21, 0x00	; 0
    1542:	c6 01       	movw	r24, r12
    1544:	84 19       	sub	r24, r4
    1546:	91 09       	sbc	r25, r1
    1548:	9d 87       	std	Y+13, r25	; 0x0d
    154a:	8c 87       	std	Y+12, r24	; 0x0c
    154c:	96 01       	movw	r18, r12
    154e:	26 19       	sub	r18, r6
    1550:	37 09       	sbc	r19, r7
    1552:	28 0d       	add	r18, r8
    1554:	39 1d       	adc	r19, r9
    1556:	81 2f       	mov	r24, r17
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	ee 27       	eor	r30, r30
    155c:	ff 27       	eor	r31, r31
    155e:	e8 1b       	sub	r30, r24
    1560:	f9 0b       	sbc	r31, r25
    1562:	ff 87       	std	Y+15, r31	; 0x0f
    1564:	ee 87       	std	Y+14, r30	; 0x0e
    1566:	ff ef       	ldi	r31, 0xFF	; 255
    1568:	6f 16       	cp	r6, r31
    156a:	7f 06       	cpc	r7, r31
    156c:	61 f4       	brne	.+24     	; 0x1586 <vfprintf+0x362>
    156e:	b7 01       	movw	r22, r14
    1570:	8e e2       	ldi	r24, 0x2E	; 46
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	2b 8b       	std	Y+19, r18	; 0x13
    1576:	3a 8b       	std	Y+18, r19	; 0x12
    1578:	48 8b       	std	Y+16, r20	; 0x10
    157a:	59 8b       	std	Y+17, r21	; 0x11
    157c:	27 d3       	rcall	.+1614   	; 0x1bcc <fputc>
    157e:	59 89       	ldd	r21, Y+17	; 0x11
    1580:	48 89       	ldd	r20, Y+16	; 0x10
    1582:	3a 89       	ldd	r19, Y+18	; 0x12
    1584:	2b 89       	ldd	r18, Y+19	; 0x13
    1586:	c6 14       	cp	r12, r6
    1588:	d7 04       	cpc	r13, r7
    158a:	54 f0       	brlt	.+20     	; 0x15a0 <vfprintf+0x37c>
    158c:	6c 85       	ldd	r22, Y+12	; 0x0c
    158e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1590:	66 15       	cp	r22, r6
    1592:	77 05       	cpc	r23, r7
    1594:	2c f4       	brge	.+10     	; 0x15a0 <vfprintf+0x37c>
    1596:	f9 01       	movw	r30, r18
    1598:	e4 0f       	add	r30, r20
    159a:	f5 1f       	adc	r31, r21
    159c:	81 81       	ldd	r24, Z+1	; 0x01
    159e:	01 c0       	rjmp	.+2      	; 0x15a2 <vfprintf+0x37e>
    15a0:	80 e3       	ldi	r24, 0x30	; 48
    15a2:	71 e0       	ldi	r23, 0x01	; 1
    15a4:	67 1a       	sub	r6, r23
    15a6:	71 08       	sbc	r7, r1
    15a8:	4f 5f       	subi	r20, 0xFF	; 255
    15aa:	5f 4f       	sbci	r21, 0xFF	; 255
    15ac:	ee 85       	ldd	r30, Y+14	; 0x0e
    15ae:	ff 85       	ldd	r31, Y+15	; 0x0f
    15b0:	6e 16       	cp	r6, r30
    15b2:	7f 06       	cpc	r7, r31
    15b4:	64 f0       	brlt	.+24     	; 0x15ce <vfprintf+0x3aa>
    15b6:	b7 01       	movw	r22, r14
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	2b 8b       	std	Y+19, r18	; 0x13
    15bc:	3a 8b       	std	Y+18, r19	; 0x12
    15be:	48 8b       	std	Y+16, r20	; 0x10
    15c0:	59 8b       	std	Y+17, r21	; 0x11
    15c2:	04 d3       	rcall	.+1544   	; 0x1bcc <fputc>
    15c4:	2b 89       	ldd	r18, Y+19	; 0x13
    15c6:	3a 89       	ldd	r19, Y+18	; 0x12
    15c8:	48 89       	ldd	r20, Y+16	; 0x10
    15ca:	59 89       	ldd	r21, Y+17	; 0x11
    15cc:	cc cf       	rjmp	.-104    	; 0x1566 <vfprintf+0x342>
    15ce:	6c 14       	cp	r6, r12
    15d0:	7d 04       	cpc	r7, r13
    15d2:	39 f4       	brne	.+14     	; 0x15e2 <vfprintf+0x3be>
    15d4:	9a 81       	ldd	r25, Y+2	; 0x02
    15d6:	96 33       	cpi	r25, 0x36	; 54
    15d8:	18 f4       	brcc	.+6      	; 0x15e0 <vfprintf+0x3bc>
    15da:	95 33       	cpi	r25, 0x35	; 53
    15dc:	11 f4       	brne	.+4      	; 0x15e2 <vfprintf+0x3be>
    15de:	04 ff       	sbrs	r16, 4
    15e0:	81 e3       	ldi	r24, 0x31	; 49
    15e2:	b7 01       	movw	r22, r14
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	45 c0       	rjmp	.+138    	; 0x1672 <vfprintf+0x44e>
    15e8:	8a 81       	ldd	r24, Y+2	; 0x02
    15ea:	81 33       	cpi	r24, 0x31	; 49
    15ec:	09 f0       	breq	.+2      	; 0x15f0 <vfprintf+0x3cc>
    15ee:	0f 7e       	andi	r16, 0xEF	; 239
    15f0:	b7 01       	movw	r22, r14
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	eb d2       	rcall	.+1494   	; 0x1bcc <fputc>
    15f6:	11 11       	cpse	r17, r1
    15f8:	05 c0       	rjmp	.+10     	; 0x1604 <vfprintf+0x3e0>
    15fa:	74 fe       	sbrs	r7, 4
    15fc:	16 c0       	rjmp	.+44     	; 0x162a <vfprintf+0x406>
    15fe:	85 e4       	ldi	r24, 0x45	; 69
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	15 c0       	rjmp	.+42     	; 0x162e <vfprintf+0x40a>
    1604:	b7 01       	movw	r22, r14
    1606:	8e e2       	ldi	r24, 0x2E	; 46
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	e0 d2       	rcall	.+1472   	; 0x1bcc <fputc>
    160c:	82 e0       	ldi	r24, 0x02	; 2
    160e:	66 24       	eor	r6, r6
    1610:	63 94       	inc	r6
    1612:	68 0e       	add	r6, r24
    1614:	f4 01       	movw	r30, r8
    1616:	e8 0f       	add	r30, r24
    1618:	f1 1d       	adc	r31, r1
    161a:	80 81       	ld	r24, Z
    161c:	b7 01       	movw	r22, r14
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	d5 d2       	rcall	.+1450   	; 0x1bcc <fputc>
    1622:	11 50       	subi	r17, 0x01	; 1
    1624:	51 f3       	breq	.-44     	; 0x15fa <vfprintf+0x3d6>
    1626:	86 2d       	mov	r24, r6
    1628:	f2 cf       	rjmp	.-28     	; 0x160e <vfprintf+0x3ea>
    162a:	85 e6       	ldi	r24, 0x65	; 101
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	b7 01       	movw	r22, r14
    1630:	cd d2       	rcall	.+1434   	; 0x1bcc <fputc>
    1632:	d7 fc       	sbrc	r13, 7
    1634:	05 c0       	rjmp	.+10     	; 0x1640 <vfprintf+0x41c>
    1636:	c1 14       	cp	r12, r1
    1638:	d1 04       	cpc	r13, r1
    163a:	39 f4       	brne	.+14     	; 0x164a <vfprintf+0x426>
    163c:	04 ff       	sbrs	r16, 4
    163e:	05 c0       	rjmp	.+10     	; 0x164a <vfprintf+0x426>
    1640:	d1 94       	neg	r13
    1642:	c1 94       	neg	r12
    1644:	d1 08       	sbc	r13, r1
    1646:	8d e2       	ldi	r24, 0x2D	; 45
    1648:	01 c0       	rjmp	.+2      	; 0x164c <vfprintf+0x428>
    164a:	8b e2       	ldi	r24, 0x2B	; 43
    164c:	b7 01       	movw	r22, r14
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	bd d2       	rcall	.+1402   	; 0x1bcc <fputc>
    1652:	80 e3       	ldi	r24, 0x30	; 48
    1654:	6a e0       	ldi	r22, 0x0A	; 10
    1656:	c6 16       	cp	r12, r22
    1658:	d1 04       	cpc	r13, r1
    165a:	2c f0       	brlt	.+10     	; 0x1666 <vfprintf+0x442>
    165c:	8f 5f       	subi	r24, 0xFF	; 255
    165e:	fa e0       	ldi	r31, 0x0A	; 10
    1660:	cf 1a       	sub	r12, r31
    1662:	d1 08       	sbc	r13, r1
    1664:	f7 cf       	rjmp	.-18     	; 0x1654 <vfprintf+0x430>
    1666:	b7 01       	movw	r22, r14
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	b0 d2       	rcall	.+1376   	; 0x1bcc <fputc>
    166c:	b7 01       	movw	r22, r14
    166e:	c6 01       	movw	r24, r12
    1670:	c0 96       	adiw	r24, 0x30	; 48
    1672:	ac d2       	rcall	.+1368   	; 0x1bcc <fputc>
    1674:	36 c1       	rjmp	.+620    	; 0x18e2 <vfprintf+0x6be>
    1676:	83 36       	cpi	r24, 0x63	; 99
    1678:	31 f0       	breq	.+12     	; 0x1686 <vfprintf+0x462>
    167a:	83 37       	cpi	r24, 0x73	; 115
    167c:	79 f0       	breq	.+30     	; 0x169c <vfprintf+0x478>
    167e:	83 35       	cpi	r24, 0x53	; 83
    1680:	09 f0       	breq	.+2      	; 0x1684 <vfprintf+0x460>
    1682:	54 c0       	rjmp	.+168    	; 0x172c <vfprintf+0x508>
    1684:	20 c0       	rjmp	.+64     	; 0x16c6 <vfprintf+0x4a2>
    1686:	56 01       	movw	r10, r12
    1688:	72 e0       	ldi	r23, 0x02	; 2
    168a:	a7 0e       	add	r10, r23
    168c:	b1 1c       	adc	r11, r1
    168e:	f6 01       	movw	r30, r12
    1690:	80 81       	ld	r24, Z
    1692:	89 83       	std	Y+1, r24	; 0x01
    1694:	01 e0       	ldi	r16, 0x01	; 1
    1696:	10 e0       	ldi	r17, 0x00	; 0
    1698:	64 01       	movw	r12, r8
    169a:	13 c0       	rjmp	.+38     	; 0x16c2 <vfprintf+0x49e>
    169c:	56 01       	movw	r10, r12
    169e:	f2 e0       	ldi	r31, 0x02	; 2
    16a0:	af 0e       	add	r10, r31
    16a2:	b1 1c       	adc	r11, r1
    16a4:	f6 01       	movw	r30, r12
    16a6:	c0 80       	ld	r12, Z
    16a8:	d1 80       	ldd	r13, Z+1	; 0x01
    16aa:	26 ff       	sbrs	r18, 6
    16ac:	03 c0       	rjmp	.+6      	; 0x16b4 <vfprintf+0x490>
    16ae:	61 2f       	mov	r22, r17
    16b0:	70 e0       	ldi	r23, 0x00	; 0
    16b2:	02 c0       	rjmp	.+4      	; 0x16b8 <vfprintf+0x494>
    16b4:	6f ef       	ldi	r22, 0xFF	; 255
    16b6:	7f ef       	ldi	r23, 0xFF	; 255
    16b8:	c6 01       	movw	r24, r12
    16ba:	2b 8b       	std	Y+19, r18	; 0x13
    16bc:	32 d2       	rcall	.+1124   	; 0x1b22 <strnlen>
    16be:	8c 01       	movw	r16, r24
    16c0:	2b 89       	ldd	r18, Y+19	; 0x13
    16c2:	2f 77       	andi	r18, 0x7F	; 127
    16c4:	14 c0       	rjmp	.+40     	; 0x16ee <vfprintf+0x4ca>
    16c6:	56 01       	movw	r10, r12
    16c8:	f2 e0       	ldi	r31, 0x02	; 2
    16ca:	af 0e       	add	r10, r31
    16cc:	b1 1c       	adc	r11, r1
    16ce:	f6 01       	movw	r30, r12
    16d0:	c0 80       	ld	r12, Z
    16d2:	d1 80       	ldd	r13, Z+1	; 0x01
    16d4:	26 ff       	sbrs	r18, 6
    16d6:	03 c0       	rjmp	.+6      	; 0x16de <vfprintf+0x4ba>
    16d8:	61 2f       	mov	r22, r17
    16da:	70 e0       	ldi	r23, 0x00	; 0
    16dc:	02 c0       	rjmp	.+4      	; 0x16e2 <vfprintf+0x4be>
    16de:	6f ef       	ldi	r22, 0xFF	; 255
    16e0:	7f ef       	ldi	r23, 0xFF	; 255
    16e2:	c6 01       	movw	r24, r12
    16e4:	2b 8b       	std	Y+19, r18	; 0x13
    16e6:	12 d2       	rcall	.+1060   	; 0x1b0c <strnlen_P>
    16e8:	8c 01       	movw	r16, r24
    16ea:	2b 89       	ldd	r18, Y+19	; 0x13
    16ec:	20 68       	ori	r18, 0x80	; 128
    16ee:	72 2e       	mov	r7, r18
    16f0:	23 fd       	sbrc	r18, 3
    16f2:	18 c0       	rjmp	.+48     	; 0x1724 <vfprintf+0x500>
    16f4:	85 2d       	mov	r24, r5
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	08 17       	cp	r16, r24
    16fa:	19 07       	cpc	r17, r25
    16fc:	98 f4       	brcc	.+38     	; 0x1724 <vfprintf+0x500>
    16fe:	b7 01       	movw	r22, r14
    1700:	80 e2       	ldi	r24, 0x20	; 32
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	63 d2       	rcall	.+1222   	; 0x1bcc <fputc>
    1706:	5a 94       	dec	r5
    1708:	f5 cf       	rjmp	.-22     	; 0x16f4 <vfprintf+0x4d0>
    170a:	f6 01       	movw	r30, r12
    170c:	77 fc       	sbrc	r7, 7
    170e:	85 91       	lpm	r24, Z+
    1710:	77 fe       	sbrs	r7, 7
    1712:	81 91       	ld	r24, Z+
    1714:	6f 01       	movw	r12, r30
    1716:	b7 01       	movw	r22, r14
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	58 d2       	rcall	.+1200   	; 0x1bcc <fputc>
    171c:	51 10       	cpse	r5, r1
    171e:	5a 94       	dec	r5
    1720:	01 50       	subi	r16, 0x01	; 1
    1722:	11 09       	sbc	r17, r1
    1724:	01 15       	cp	r16, r1
    1726:	11 05       	cpc	r17, r1
    1728:	81 f7       	brne	.-32     	; 0x170a <vfprintf+0x4e6>
    172a:	db c0       	rjmp	.+438    	; 0x18e2 <vfprintf+0x6be>
    172c:	84 36       	cpi	r24, 0x64	; 100
    172e:	11 f0       	breq	.+4      	; 0x1734 <vfprintf+0x510>
    1730:	89 36       	cpi	r24, 0x69	; 105
    1732:	49 f5       	brne	.+82     	; 0x1786 <vfprintf+0x562>
    1734:	56 01       	movw	r10, r12
    1736:	27 ff       	sbrs	r18, 7
    1738:	09 c0       	rjmp	.+18     	; 0x174c <vfprintf+0x528>
    173a:	f4 e0       	ldi	r31, 0x04	; 4
    173c:	af 0e       	add	r10, r31
    173e:	b1 1c       	adc	r11, r1
    1740:	f6 01       	movw	r30, r12
    1742:	60 81       	ld	r22, Z
    1744:	71 81       	ldd	r23, Z+1	; 0x01
    1746:	82 81       	ldd	r24, Z+2	; 0x02
    1748:	93 81       	ldd	r25, Z+3	; 0x03
    174a:	0a c0       	rjmp	.+20     	; 0x1760 <vfprintf+0x53c>
    174c:	f2 e0       	ldi	r31, 0x02	; 2
    174e:	af 0e       	add	r10, r31
    1750:	b1 1c       	adc	r11, r1
    1752:	f6 01       	movw	r30, r12
    1754:	60 81       	ld	r22, Z
    1756:	71 81       	ldd	r23, Z+1	; 0x01
    1758:	88 27       	eor	r24, r24
    175a:	77 fd       	sbrc	r23, 7
    175c:	80 95       	com	r24
    175e:	98 2f       	mov	r25, r24
    1760:	02 2f       	mov	r16, r18
    1762:	0f 76       	andi	r16, 0x6F	; 111
    1764:	97 ff       	sbrs	r25, 7
    1766:	08 c0       	rjmp	.+16     	; 0x1778 <vfprintf+0x554>
    1768:	90 95       	com	r25
    176a:	80 95       	com	r24
    176c:	70 95       	com	r23
    176e:	61 95       	neg	r22
    1770:	7f 4f       	sbci	r23, 0xFF	; 255
    1772:	8f 4f       	sbci	r24, 0xFF	; 255
    1774:	9f 4f       	sbci	r25, 0xFF	; 255
    1776:	00 68       	ori	r16, 0x80	; 128
    1778:	2a e0       	ldi	r18, 0x0A	; 10
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	a4 01       	movw	r20, r8
    177e:	96 d2       	rcall	.+1324   	; 0x1cac <__ultoa_invert>
    1780:	c8 2e       	mov	r12, r24
    1782:	c8 18       	sub	r12, r8
    1784:	3d c0       	rjmp	.+122    	; 0x1800 <vfprintf+0x5dc>
    1786:	02 2f       	mov	r16, r18
    1788:	85 37       	cpi	r24, 0x75	; 117
    178a:	21 f4       	brne	.+8      	; 0x1794 <vfprintf+0x570>
    178c:	0f 7e       	andi	r16, 0xEF	; 239
    178e:	2a e0       	ldi	r18, 0x0A	; 10
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	1d c0       	rjmp	.+58     	; 0x17ce <vfprintf+0x5aa>
    1794:	09 7f       	andi	r16, 0xF9	; 249
    1796:	8f 36       	cpi	r24, 0x6F	; 111
    1798:	91 f0       	breq	.+36     	; 0x17be <vfprintf+0x59a>
    179a:	18 f4       	brcc	.+6      	; 0x17a2 <vfprintf+0x57e>
    179c:	88 35       	cpi	r24, 0x58	; 88
    179e:	59 f0       	breq	.+22     	; 0x17b6 <vfprintf+0x592>
    17a0:	a9 c0       	rjmp	.+338    	; 0x18f4 <vfprintf+0x6d0>
    17a2:	80 37       	cpi	r24, 0x70	; 112
    17a4:	19 f0       	breq	.+6      	; 0x17ac <vfprintf+0x588>
    17a6:	88 37       	cpi	r24, 0x78	; 120
    17a8:	11 f0       	breq	.+4      	; 0x17ae <vfprintf+0x58a>
    17aa:	a4 c0       	rjmp	.+328    	; 0x18f4 <vfprintf+0x6d0>
    17ac:	00 61       	ori	r16, 0x10	; 16
    17ae:	04 ff       	sbrs	r16, 4
    17b0:	09 c0       	rjmp	.+18     	; 0x17c4 <vfprintf+0x5a0>
    17b2:	04 60       	ori	r16, 0x04	; 4
    17b4:	07 c0       	rjmp	.+14     	; 0x17c4 <vfprintf+0x5a0>
    17b6:	24 ff       	sbrs	r18, 4
    17b8:	08 c0       	rjmp	.+16     	; 0x17ca <vfprintf+0x5a6>
    17ba:	06 60       	ori	r16, 0x06	; 6
    17bc:	06 c0       	rjmp	.+12     	; 0x17ca <vfprintf+0x5a6>
    17be:	28 e0       	ldi	r18, 0x08	; 8
    17c0:	30 e0       	ldi	r19, 0x00	; 0
    17c2:	05 c0       	rjmp	.+10     	; 0x17ce <vfprintf+0x5aa>
    17c4:	20 e1       	ldi	r18, 0x10	; 16
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	02 c0       	rjmp	.+4      	; 0x17ce <vfprintf+0x5aa>
    17ca:	20 e1       	ldi	r18, 0x10	; 16
    17cc:	32 e0       	ldi	r19, 0x02	; 2
    17ce:	56 01       	movw	r10, r12
    17d0:	07 ff       	sbrs	r16, 7
    17d2:	09 c0       	rjmp	.+18     	; 0x17e6 <vfprintf+0x5c2>
    17d4:	f4 e0       	ldi	r31, 0x04	; 4
    17d6:	af 0e       	add	r10, r31
    17d8:	b1 1c       	adc	r11, r1
    17da:	f6 01       	movw	r30, r12
    17dc:	60 81       	ld	r22, Z
    17de:	71 81       	ldd	r23, Z+1	; 0x01
    17e0:	82 81       	ldd	r24, Z+2	; 0x02
    17e2:	93 81       	ldd	r25, Z+3	; 0x03
    17e4:	08 c0       	rjmp	.+16     	; 0x17f6 <vfprintf+0x5d2>
    17e6:	f2 e0       	ldi	r31, 0x02	; 2
    17e8:	af 0e       	add	r10, r31
    17ea:	b1 1c       	adc	r11, r1
    17ec:	f6 01       	movw	r30, r12
    17ee:	60 81       	ld	r22, Z
    17f0:	71 81       	ldd	r23, Z+1	; 0x01
    17f2:	80 e0       	ldi	r24, 0x00	; 0
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	a4 01       	movw	r20, r8
    17f8:	59 d2       	rcall	.+1202   	; 0x1cac <__ultoa_invert>
    17fa:	c8 2e       	mov	r12, r24
    17fc:	c8 18       	sub	r12, r8
    17fe:	0f 77       	andi	r16, 0x7F	; 127
    1800:	06 ff       	sbrs	r16, 6
    1802:	0b c0       	rjmp	.+22     	; 0x181a <vfprintf+0x5f6>
    1804:	20 2f       	mov	r18, r16
    1806:	2e 7f       	andi	r18, 0xFE	; 254
    1808:	c1 16       	cp	r12, r17
    180a:	50 f4       	brcc	.+20     	; 0x1820 <vfprintf+0x5fc>
    180c:	04 ff       	sbrs	r16, 4
    180e:	0a c0       	rjmp	.+20     	; 0x1824 <vfprintf+0x600>
    1810:	02 fd       	sbrc	r16, 2
    1812:	08 c0       	rjmp	.+16     	; 0x1824 <vfprintf+0x600>
    1814:	20 2f       	mov	r18, r16
    1816:	2e 7e       	andi	r18, 0xEE	; 238
    1818:	05 c0       	rjmp	.+10     	; 0x1824 <vfprintf+0x600>
    181a:	dc 2c       	mov	r13, r12
    181c:	20 2f       	mov	r18, r16
    181e:	03 c0       	rjmp	.+6      	; 0x1826 <vfprintf+0x602>
    1820:	dc 2c       	mov	r13, r12
    1822:	01 c0       	rjmp	.+2      	; 0x1826 <vfprintf+0x602>
    1824:	d1 2e       	mov	r13, r17
    1826:	24 ff       	sbrs	r18, 4
    1828:	0d c0       	rjmp	.+26     	; 0x1844 <vfprintf+0x620>
    182a:	fe 01       	movw	r30, r28
    182c:	ec 0d       	add	r30, r12
    182e:	f1 1d       	adc	r31, r1
    1830:	80 81       	ld	r24, Z
    1832:	80 33       	cpi	r24, 0x30	; 48
    1834:	11 f4       	brne	.+4      	; 0x183a <vfprintf+0x616>
    1836:	29 7e       	andi	r18, 0xE9	; 233
    1838:	09 c0       	rjmp	.+18     	; 0x184c <vfprintf+0x628>
    183a:	22 ff       	sbrs	r18, 2
    183c:	06 c0       	rjmp	.+12     	; 0x184a <vfprintf+0x626>
    183e:	d3 94       	inc	r13
    1840:	d3 94       	inc	r13
    1842:	04 c0       	rjmp	.+8      	; 0x184c <vfprintf+0x628>
    1844:	82 2f       	mov	r24, r18
    1846:	86 78       	andi	r24, 0x86	; 134
    1848:	09 f0       	breq	.+2      	; 0x184c <vfprintf+0x628>
    184a:	d3 94       	inc	r13
    184c:	23 fd       	sbrc	r18, 3
    184e:	12 c0       	rjmp	.+36     	; 0x1874 <vfprintf+0x650>
    1850:	20 ff       	sbrs	r18, 0
    1852:	06 c0       	rjmp	.+12     	; 0x1860 <vfprintf+0x63c>
    1854:	1c 2d       	mov	r17, r12
    1856:	d5 14       	cp	r13, r5
    1858:	18 f4       	brcc	.+6      	; 0x1860 <vfprintf+0x63c>
    185a:	15 0d       	add	r17, r5
    185c:	1d 19       	sub	r17, r13
    185e:	d5 2c       	mov	r13, r5
    1860:	d5 14       	cp	r13, r5
    1862:	60 f4       	brcc	.+24     	; 0x187c <vfprintf+0x658>
    1864:	b7 01       	movw	r22, r14
    1866:	80 e2       	ldi	r24, 0x20	; 32
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	2b 8b       	std	Y+19, r18	; 0x13
    186c:	af d1       	rcall	.+862    	; 0x1bcc <fputc>
    186e:	d3 94       	inc	r13
    1870:	2b 89       	ldd	r18, Y+19	; 0x13
    1872:	f6 cf       	rjmp	.-20     	; 0x1860 <vfprintf+0x63c>
    1874:	d5 14       	cp	r13, r5
    1876:	10 f4       	brcc	.+4      	; 0x187c <vfprintf+0x658>
    1878:	5d 18       	sub	r5, r13
    187a:	01 c0       	rjmp	.+2      	; 0x187e <vfprintf+0x65a>
    187c:	51 2c       	mov	r5, r1
    187e:	24 ff       	sbrs	r18, 4
    1880:	11 c0       	rjmp	.+34     	; 0x18a4 <vfprintf+0x680>
    1882:	b7 01       	movw	r22, r14
    1884:	80 e3       	ldi	r24, 0x30	; 48
    1886:	90 e0       	ldi	r25, 0x00	; 0
    1888:	2b 8b       	std	Y+19, r18	; 0x13
    188a:	a0 d1       	rcall	.+832    	; 0x1bcc <fputc>
    188c:	2b 89       	ldd	r18, Y+19	; 0x13
    188e:	22 ff       	sbrs	r18, 2
    1890:	16 c0       	rjmp	.+44     	; 0x18be <vfprintf+0x69a>
    1892:	21 ff       	sbrs	r18, 1
    1894:	03 c0       	rjmp	.+6      	; 0x189c <vfprintf+0x678>
    1896:	88 e5       	ldi	r24, 0x58	; 88
    1898:	90 e0       	ldi	r25, 0x00	; 0
    189a:	02 c0       	rjmp	.+4      	; 0x18a0 <vfprintf+0x67c>
    189c:	88 e7       	ldi	r24, 0x78	; 120
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	b7 01       	movw	r22, r14
    18a2:	0c c0       	rjmp	.+24     	; 0x18bc <vfprintf+0x698>
    18a4:	82 2f       	mov	r24, r18
    18a6:	86 78       	andi	r24, 0x86	; 134
    18a8:	51 f0       	breq	.+20     	; 0x18be <vfprintf+0x69a>
    18aa:	21 fd       	sbrc	r18, 1
    18ac:	02 c0       	rjmp	.+4      	; 0x18b2 <vfprintf+0x68e>
    18ae:	80 e2       	ldi	r24, 0x20	; 32
    18b0:	01 c0       	rjmp	.+2      	; 0x18b4 <vfprintf+0x690>
    18b2:	8b e2       	ldi	r24, 0x2B	; 43
    18b4:	27 fd       	sbrc	r18, 7
    18b6:	8d e2       	ldi	r24, 0x2D	; 45
    18b8:	b7 01       	movw	r22, r14
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	87 d1       	rcall	.+782    	; 0x1bcc <fputc>
    18be:	c1 16       	cp	r12, r17
    18c0:	30 f4       	brcc	.+12     	; 0x18ce <vfprintf+0x6aa>
    18c2:	b7 01       	movw	r22, r14
    18c4:	80 e3       	ldi	r24, 0x30	; 48
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	81 d1       	rcall	.+770    	; 0x1bcc <fputc>
    18ca:	11 50       	subi	r17, 0x01	; 1
    18cc:	f8 cf       	rjmp	.-16     	; 0x18be <vfprintf+0x69a>
    18ce:	ca 94       	dec	r12
    18d0:	f4 01       	movw	r30, r8
    18d2:	ec 0d       	add	r30, r12
    18d4:	f1 1d       	adc	r31, r1
    18d6:	80 81       	ld	r24, Z
    18d8:	b7 01       	movw	r22, r14
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	77 d1       	rcall	.+750    	; 0x1bcc <fputc>
    18de:	c1 10       	cpse	r12, r1
    18e0:	f6 cf       	rjmp	.-20     	; 0x18ce <vfprintf+0x6aa>
    18e2:	55 20       	and	r5, r5
    18e4:	09 f4       	brne	.+2      	; 0x18e8 <vfprintf+0x6c4>
    18e6:	dd cc       	rjmp	.-1606   	; 0x12a2 <vfprintf+0x7e>
    18e8:	b7 01       	movw	r22, r14
    18ea:	80 e2       	ldi	r24, 0x20	; 32
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	6e d1       	rcall	.+732    	; 0x1bcc <fputc>
    18f0:	5a 94       	dec	r5
    18f2:	f7 cf       	rjmp	.-18     	; 0x18e2 <vfprintf+0x6be>
    18f4:	f7 01       	movw	r30, r14
    18f6:	86 81       	ldd	r24, Z+6	; 0x06
    18f8:	97 81       	ldd	r25, Z+7	; 0x07
    18fa:	02 c0       	rjmp	.+4      	; 0x1900 <vfprintf+0x6dc>
    18fc:	8f ef       	ldi	r24, 0xFF	; 255
    18fe:	9f ef       	ldi	r25, 0xFF	; 255
    1900:	63 96       	adiw	r28, 0x13	; 19
    1902:	0f b6       	in	r0, 0x3f	; 63
    1904:	f8 94       	cli
    1906:	de bf       	out	0x3e, r29	; 62
    1908:	0f be       	out	0x3f, r0	; 63
    190a:	cd bf       	out	0x3d, r28	; 61
    190c:	df 91       	pop	r29
    190e:	cf 91       	pop	r28
    1910:	1f 91       	pop	r17
    1912:	0f 91       	pop	r16
    1914:	ff 90       	pop	r15
    1916:	ef 90       	pop	r14
    1918:	df 90       	pop	r13
    191a:	cf 90       	pop	r12
    191c:	bf 90       	pop	r11
    191e:	af 90       	pop	r10
    1920:	9f 90       	pop	r9
    1922:	8f 90       	pop	r8
    1924:	7f 90       	pop	r7
    1926:	6f 90       	pop	r6
    1928:	5f 90       	pop	r5
    192a:	4f 90       	pop	r4
    192c:	3f 90       	pop	r3
    192e:	2f 90       	pop	r2
    1930:	08 95       	ret

00001932 <__tablejump2__>:
    1932:	ee 0f       	add	r30, r30
    1934:	ff 1f       	adc	r31, r31

00001936 <__tablejump__>:
    1936:	05 90       	lpm	r0, Z+
    1938:	f4 91       	lpm	r31, Z
    193a:	e0 2d       	mov	r30, r0
    193c:	19 94       	eijmp

0000193e <__umulhisi3>:
    193e:	a2 9f       	mul	r26, r18
    1940:	b0 01       	movw	r22, r0
    1942:	b3 9f       	mul	r27, r19
    1944:	c0 01       	movw	r24, r0
    1946:	a3 9f       	mul	r26, r19
    1948:	70 0d       	add	r23, r0
    194a:	81 1d       	adc	r24, r1
    194c:	11 24       	eor	r1, r1
    194e:	91 1d       	adc	r25, r1
    1950:	b2 9f       	mul	r27, r18
    1952:	70 0d       	add	r23, r0
    1954:	81 1d       	adc	r24, r1
    1956:	11 24       	eor	r1, r1
    1958:	91 1d       	adc	r25, r1
    195a:	08 95       	ret

0000195c <__ftoa_engine>:
    195c:	28 30       	cpi	r18, 0x08	; 8
    195e:	08 f0       	brcs	.+2      	; 0x1962 <__ftoa_engine+0x6>
    1960:	27 e0       	ldi	r18, 0x07	; 7
    1962:	33 27       	eor	r19, r19
    1964:	da 01       	movw	r26, r20
    1966:	99 0f       	add	r25, r25
    1968:	31 1d       	adc	r19, r1
    196a:	87 fd       	sbrc	r24, 7
    196c:	91 60       	ori	r25, 0x01	; 1
    196e:	00 96       	adiw	r24, 0x00	; 0
    1970:	61 05       	cpc	r22, r1
    1972:	71 05       	cpc	r23, r1
    1974:	39 f4       	brne	.+14     	; 0x1984 <__ftoa_engine+0x28>
    1976:	32 60       	ori	r19, 0x02	; 2
    1978:	2e 5f       	subi	r18, 0xFE	; 254
    197a:	3d 93       	st	X+, r19
    197c:	30 e3       	ldi	r19, 0x30	; 48
    197e:	2a 95       	dec	r18
    1980:	e1 f7       	brne	.-8      	; 0x197a <__ftoa_engine+0x1e>
    1982:	08 95       	ret
    1984:	9f 3f       	cpi	r25, 0xFF	; 255
    1986:	30 f0       	brcs	.+12     	; 0x1994 <__ftoa_engine+0x38>
    1988:	80 38       	cpi	r24, 0x80	; 128
    198a:	71 05       	cpc	r23, r1
    198c:	61 05       	cpc	r22, r1
    198e:	09 f0       	breq	.+2      	; 0x1992 <__ftoa_engine+0x36>
    1990:	3c 5f       	subi	r19, 0xFC	; 252
    1992:	3c 5f       	subi	r19, 0xFC	; 252
    1994:	3d 93       	st	X+, r19
    1996:	91 30       	cpi	r25, 0x01	; 1
    1998:	08 f0       	brcs	.+2      	; 0x199c <__ftoa_engine+0x40>
    199a:	80 68       	ori	r24, 0x80	; 128
    199c:	91 1d       	adc	r25, r1
    199e:	df 93       	push	r29
    19a0:	cf 93       	push	r28
    19a2:	1f 93       	push	r17
    19a4:	0f 93       	push	r16
    19a6:	ff 92       	push	r15
    19a8:	ef 92       	push	r14
    19aa:	19 2f       	mov	r17, r25
    19ac:	98 7f       	andi	r25, 0xF8	; 248
    19ae:	96 95       	lsr	r25
    19b0:	e9 2f       	mov	r30, r25
    19b2:	96 95       	lsr	r25
    19b4:	96 95       	lsr	r25
    19b6:	e9 0f       	add	r30, r25
    19b8:	ff 27       	eor	r31, r31
    19ba:	e8 51       	subi	r30, 0x18	; 24
    19bc:	fe 4f       	sbci	r31, 0xFE	; 254
    19be:	99 27       	eor	r25, r25
    19c0:	33 27       	eor	r19, r19
    19c2:	ee 24       	eor	r14, r14
    19c4:	ff 24       	eor	r15, r15
    19c6:	a7 01       	movw	r20, r14
    19c8:	e7 01       	movw	r28, r14
    19ca:	05 90       	lpm	r0, Z+
    19cc:	08 94       	sec
    19ce:	07 94       	ror	r0
    19d0:	28 f4       	brcc	.+10     	; 0x19dc <__ftoa_engine+0x80>
    19d2:	36 0f       	add	r19, r22
    19d4:	e7 1e       	adc	r14, r23
    19d6:	f8 1e       	adc	r15, r24
    19d8:	49 1f       	adc	r20, r25
    19da:	51 1d       	adc	r21, r1
    19dc:	66 0f       	add	r22, r22
    19de:	77 1f       	adc	r23, r23
    19e0:	88 1f       	adc	r24, r24
    19e2:	99 1f       	adc	r25, r25
    19e4:	06 94       	lsr	r0
    19e6:	a1 f7       	brne	.-24     	; 0x19d0 <__ftoa_engine+0x74>
    19e8:	05 90       	lpm	r0, Z+
    19ea:	07 94       	ror	r0
    19ec:	28 f4       	brcc	.+10     	; 0x19f8 <__ftoa_engine+0x9c>
    19ee:	e7 0e       	add	r14, r23
    19f0:	f8 1e       	adc	r15, r24
    19f2:	49 1f       	adc	r20, r25
    19f4:	56 1f       	adc	r21, r22
    19f6:	c1 1d       	adc	r28, r1
    19f8:	77 0f       	add	r23, r23
    19fa:	88 1f       	adc	r24, r24
    19fc:	99 1f       	adc	r25, r25
    19fe:	66 1f       	adc	r22, r22
    1a00:	06 94       	lsr	r0
    1a02:	a1 f7       	brne	.-24     	; 0x19ec <__ftoa_engine+0x90>
    1a04:	05 90       	lpm	r0, Z+
    1a06:	07 94       	ror	r0
    1a08:	28 f4       	brcc	.+10     	; 0x1a14 <__ftoa_engine+0xb8>
    1a0a:	f8 0e       	add	r15, r24
    1a0c:	49 1f       	adc	r20, r25
    1a0e:	56 1f       	adc	r21, r22
    1a10:	c7 1f       	adc	r28, r23
    1a12:	d1 1d       	adc	r29, r1
    1a14:	88 0f       	add	r24, r24
    1a16:	99 1f       	adc	r25, r25
    1a18:	66 1f       	adc	r22, r22
    1a1a:	77 1f       	adc	r23, r23
    1a1c:	06 94       	lsr	r0
    1a1e:	a1 f7       	brne	.-24     	; 0x1a08 <__ftoa_engine+0xac>
    1a20:	05 90       	lpm	r0, Z+
    1a22:	07 94       	ror	r0
    1a24:	20 f4       	brcc	.+8      	; 0x1a2e <__ftoa_engine+0xd2>
    1a26:	49 0f       	add	r20, r25
    1a28:	56 1f       	adc	r21, r22
    1a2a:	c7 1f       	adc	r28, r23
    1a2c:	d8 1f       	adc	r29, r24
    1a2e:	99 0f       	add	r25, r25
    1a30:	66 1f       	adc	r22, r22
    1a32:	77 1f       	adc	r23, r23
    1a34:	88 1f       	adc	r24, r24
    1a36:	06 94       	lsr	r0
    1a38:	a9 f7       	brne	.-22     	; 0x1a24 <__ftoa_engine+0xc8>
    1a3a:	84 91       	lpm	r24, Z
    1a3c:	10 95       	com	r17
    1a3e:	17 70       	andi	r17, 0x07	; 7
    1a40:	41 f0       	breq	.+16     	; 0x1a52 <__ftoa_engine+0xf6>
    1a42:	d6 95       	lsr	r29
    1a44:	c7 95       	ror	r28
    1a46:	57 95       	ror	r21
    1a48:	47 95       	ror	r20
    1a4a:	f7 94       	ror	r15
    1a4c:	e7 94       	ror	r14
    1a4e:	1a 95       	dec	r17
    1a50:	c1 f7       	brne	.-16     	; 0x1a42 <__ftoa_engine+0xe6>
    1a52:	ee e8       	ldi	r30, 0x8E	; 142
    1a54:	f1 e0       	ldi	r31, 0x01	; 1
    1a56:	68 94       	set
    1a58:	15 90       	lpm	r1, Z+
    1a5a:	15 91       	lpm	r17, Z+
    1a5c:	35 91       	lpm	r19, Z+
    1a5e:	65 91       	lpm	r22, Z+
    1a60:	95 91       	lpm	r25, Z+
    1a62:	05 90       	lpm	r0, Z+
    1a64:	7f e2       	ldi	r23, 0x2F	; 47
    1a66:	73 95       	inc	r23
    1a68:	e1 18       	sub	r14, r1
    1a6a:	f1 0a       	sbc	r15, r17
    1a6c:	43 0b       	sbc	r20, r19
    1a6e:	56 0b       	sbc	r21, r22
    1a70:	c9 0b       	sbc	r28, r25
    1a72:	d0 09       	sbc	r29, r0
    1a74:	c0 f7       	brcc	.-16     	; 0x1a66 <__ftoa_engine+0x10a>
    1a76:	e1 0c       	add	r14, r1
    1a78:	f1 1e       	adc	r15, r17
    1a7a:	43 1f       	adc	r20, r19
    1a7c:	56 1f       	adc	r21, r22
    1a7e:	c9 1f       	adc	r28, r25
    1a80:	d0 1d       	adc	r29, r0
    1a82:	7e f4       	brtc	.+30     	; 0x1aa2 <__ftoa_engine+0x146>
    1a84:	70 33       	cpi	r23, 0x30	; 48
    1a86:	11 f4       	brne	.+4      	; 0x1a8c <__ftoa_engine+0x130>
    1a88:	8a 95       	dec	r24
    1a8a:	e6 cf       	rjmp	.-52     	; 0x1a58 <__ftoa_engine+0xfc>
    1a8c:	e8 94       	clt
    1a8e:	01 50       	subi	r16, 0x01	; 1
    1a90:	30 f0       	brcs	.+12     	; 0x1a9e <__ftoa_engine+0x142>
    1a92:	08 0f       	add	r16, r24
    1a94:	0a f4       	brpl	.+2      	; 0x1a98 <__ftoa_engine+0x13c>
    1a96:	00 27       	eor	r16, r16
    1a98:	02 17       	cp	r16, r18
    1a9a:	08 f4       	brcc	.+2      	; 0x1a9e <__ftoa_engine+0x142>
    1a9c:	20 2f       	mov	r18, r16
    1a9e:	23 95       	inc	r18
    1aa0:	02 2f       	mov	r16, r18
    1aa2:	7a 33       	cpi	r23, 0x3A	; 58
    1aa4:	28 f0       	brcs	.+10     	; 0x1ab0 <__ftoa_engine+0x154>
    1aa6:	79 e3       	ldi	r23, 0x39	; 57
    1aa8:	7d 93       	st	X+, r23
    1aaa:	2a 95       	dec	r18
    1aac:	e9 f7       	brne	.-6      	; 0x1aa8 <__ftoa_engine+0x14c>
    1aae:	10 c0       	rjmp	.+32     	; 0x1ad0 <__ftoa_engine+0x174>
    1ab0:	7d 93       	st	X+, r23
    1ab2:	2a 95       	dec	r18
    1ab4:	89 f6       	brne	.-94     	; 0x1a58 <__ftoa_engine+0xfc>
    1ab6:	06 94       	lsr	r0
    1ab8:	97 95       	ror	r25
    1aba:	67 95       	ror	r22
    1abc:	37 95       	ror	r19
    1abe:	17 95       	ror	r17
    1ac0:	17 94       	ror	r1
    1ac2:	e1 18       	sub	r14, r1
    1ac4:	f1 0a       	sbc	r15, r17
    1ac6:	43 0b       	sbc	r20, r19
    1ac8:	56 0b       	sbc	r21, r22
    1aca:	c9 0b       	sbc	r28, r25
    1acc:	d0 09       	sbc	r29, r0
    1ace:	98 f0       	brcs	.+38     	; 0x1af6 <__ftoa_engine+0x19a>
    1ad0:	23 95       	inc	r18
    1ad2:	7e 91       	ld	r23, -X
    1ad4:	73 95       	inc	r23
    1ad6:	7a 33       	cpi	r23, 0x3A	; 58
    1ad8:	08 f0       	brcs	.+2      	; 0x1adc <__ftoa_engine+0x180>
    1ada:	70 e3       	ldi	r23, 0x30	; 48
    1adc:	7c 93       	st	X, r23
    1ade:	20 13       	cpse	r18, r16
    1ae0:	b8 f7       	brcc	.-18     	; 0x1ad0 <__ftoa_engine+0x174>
    1ae2:	7e 91       	ld	r23, -X
    1ae4:	70 61       	ori	r23, 0x10	; 16
    1ae6:	7d 93       	st	X+, r23
    1ae8:	30 f0       	brcs	.+12     	; 0x1af6 <__ftoa_engine+0x19a>
    1aea:	83 95       	inc	r24
    1aec:	71 e3       	ldi	r23, 0x31	; 49
    1aee:	7d 93       	st	X+, r23
    1af0:	70 e3       	ldi	r23, 0x30	; 48
    1af2:	2a 95       	dec	r18
    1af4:	e1 f7       	brne	.-8      	; 0x1aee <__ftoa_engine+0x192>
    1af6:	11 24       	eor	r1, r1
    1af8:	ef 90       	pop	r14
    1afa:	ff 90       	pop	r15
    1afc:	0f 91       	pop	r16
    1afe:	1f 91       	pop	r17
    1b00:	cf 91       	pop	r28
    1b02:	df 91       	pop	r29
    1b04:	99 27       	eor	r25, r25
    1b06:	87 fd       	sbrc	r24, 7
    1b08:	90 95       	com	r25
    1b0a:	08 95       	ret

00001b0c <strnlen_P>:
    1b0c:	fc 01       	movw	r30, r24
    1b0e:	05 90       	lpm	r0, Z+
    1b10:	61 50       	subi	r22, 0x01	; 1
    1b12:	70 40       	sbci	r23, 0x00	; 0
    1b14:	01 10       	cpse	r0, r1
    1b16:	d8 f7       	brcc	.-10     	; 0x1b0e <strnlen_P+0x2>
    1b18:	80 95       	com	r24
    1b1a:	90 95       	com	r25
    1b1c:	8e 0f       	add	r24, r30
    1b1e:	9f 1f       	adc	r25, r31
    1b20:	08 95       	ret

00001b22 <strnlen>:
    1b22:	fc 01       	movw	r30, r24
    1b24:	61 50       	subi	r22, 0x01	; 1
    1b26:	70 40       	sbci	r23, 0x00	; 0
    1b28:	01 90       	ld	r0, Z+
    1b2a:	01 10       	cpse	r0, r1
    1b2c:	d8 f7       	brcc	.-10     	; 0x1b24 <strnlen+0x2>
    1b2e:	80 95       	com	r24
    1b30:	90 95       	com	r25
    1b32:	8e 0f       	add	r24, r30
    1b34:	9f 1f       	adc	r25, r31
    1b36:	08 95       	ret

00001b38 <fdevopen>:
    1b38:	0f 93       	push	r16
    1b3a:	1f 93       	push	r17
    1b3c:	cf 93       	push	r28
    1b3e:	df 93       	push	r29
    1b40:	ec 01       	movw	r28, r24
    1b42:	8b 01       	movw	r16, r22
    1b44:	00 97       	sbiw	r24, 0x00	; 0
    1b46:	31 f4       	brne	.+12     	; 0x1b54 <fdevopen+0x1c>
    1b48:	61 15       	cp	r22, r1
    1b4a:	71 05       	cpc	r23, r1
    1b4c:	19 f4       	brne	.+6      	; 0x1b54 <fdevopen+0x1c>
    1b4e:	80 e0       	ldi	r24, 0x00	; 0
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	37 c0       	rjmp	.+110    	; 0x1bc2 <fdevopen+0x8a>
    1b54:	6e e0       	ldi	r22, 0x0E	; 14
    1b56:	70 e0       	ldi	r23, 0x00	; 0
    1b58:	81 e0       	ldi	r24, 0x01	; 1
    1b5a:	90 e0       	ldi	r25, 0x00	; 0
    1b5c:	05 d1       	rcall	.+522    	; 0x1d68 <calloc>
    1b5e:	fc 01       	movw	r30, r24
    1b60:	00 97       	sbiw	r24, 0x00	; 0
    1b62:	a9 f3       	breq	.-22     	; 0x1b4e <fdevopen+0x16>
    1b64:	80 e8       	ldi	r24, 0x80	; 128
    1b66:	83 83       	std	Z+3, r24	; 0x03
    1b68:	01 15       	cp	r16, r1
    1b6a:	11 05       	cpc	r17, r1
    1b6c:	71 f0       	breq	.+28     	; 0x1b8a <fdevopen+0x52>
    1b6e:	13 87       	std	Z+11, r17	; 0x0b
    1b70:	02 87       	std	Z+10, r16	; 0x0a
    1b72:	81 e8       	ldi	r24, 0x81	; 129
    1b74:	83 83       	std	Z+3, r24	; 0x03
    1b76:	80 91 be 02 	lds	r24, 0x02BE
    1b7a:	90 91 bf 02 	lds	r25, 0x02BF
    1b7e:	89 2b       	or	r24, r25
    1b80:	21 f4       	brne	.+8      	; 0x1b8a <fdevopen+0x52>
    1b82:	f0 93 bf 02 	sts	0x02BF, r31
    1b86:	e0 93 be 02 	sts	0x02BE, r30
    1b8a:	20 97       	sbiw	r28, 0x00	; 0
    1b8c:	c9 f0       	breq	.+50     	; 0x1bc0 <fdevopen+0x88>
    1b8e:	d1 87       	std	Z+9, r29	; 0x09
    1b90:	c0 87       	std	Z+8, r28	; 0x08
    1b92:	83 81       	ldd	r24, Z+3	; 0x03
    1b94:	82 60       	ori	r24, 0x02	; 2
    1b96:	83 83       	std	Z+3, r24	; 0x03
    1b98:	80 91 c0 02 	lds	r24, 0x02C0
    1b9c:	90 91 c1 02 	lds	r25, 0x02C1
    1ba0:	89 2b       	or	r24, r25
    1ba2:	71 f4       	brne	.+28     	; 0x1bc0 <fdevopen+0x88>
    1ba4:	f0 93 c1 02 	sts	0x02C1, r31
    1ba8:	e0 93 c0 02 	sts	0x02C0, r30
    1bac:	80 91 c2 02 	lds	r24, 0x02C2
    1bb0:	90 91 c3 02 	lds	r25, 0x02C3
    1bb4:	89 2b       	or	r24, r25
    1bb6:	21 f4       	brne	.+8      	; 0x1bc0 <fdevopen+0x88>
    1bb8:	f0 93 c3 02 	sts	0x02C3, r31
    1bbc:	e0 93 c2 02 	sts	0x02C2, r30
    1bc0:	cf 01       	movw	r24, r30
    1bc2:	df 91       	pop	r29
    1bc4:	cf 91       	pop	r28
    1bc6:	1f 91       	pop	r17
    1bc8:	0f 91       	pop	r16
    1bca:	08 95       	ret

00001bcc <fputc>:
    1bcc:	0f 93       	push	r16
    1bce:	1f 93       	push	r17
    1bd0:	cf 93       	push	r28
    1bd2:	df 93       	push	r29
    1bd4:	18 2f       	mov	r17, r24
    1bd6:	09 2f       	mov	r16, r25
    1bd8:	eb 01       	movw	r28, r22
    1bda:	8b 81       	ldd	r24, Y+3	; 0x03
    1bdc:	81 fd       	sbrc	r24, 1
    1bde:	03 c0       	rjmp	.+6      	; 0x1be6 <fputc+0x1a>
    1be0:	8f ef       	ldi	r24, 0xFF	; 255
    1be2:	9f ef       	ldi	r25, 0xFF	; 255
    1be4:	20 c0       	rjmp	.+64     	; 0x1c26 <fputc+0x5a>
    1be6:	82 ff       	sbrs	r24, 2
    1be8:	10 c0       	rjmp	.+32     	; 0x1c0a <fputc+0x3e>
    1bea:	4e 81       	ldd	r20, Y+6	; 0x06
    1bec:	5f 81       	ldd	r21, Y+7	; 0x07
    1bee:	2c 81       	ldd	r18, Y+4	; 0x04
    1bf0:	3d 81       	ldd	r19, Y+5	; 0x05
    1bf2:	42 17       	cp	r20, r18
    1bf4:	53 07       	cpc	r21, r19
    1bf6:	7c f4       	brge	.+30     	; 0x1c16 <fputc+0x4a>
    1bf8:	e8 81       	ld	r30, Y
    1bfa:	f9 81       	ldd	r31, Y+1	; 0x01
    1bfc:	9f 01       	movw	r18, r30
    1bfe:	2f 5f       	subi	r18, 0xFF	; 255
    1c00:	3f 4f       	sbci	r19, 0xFF	; 255
    1c02:	39 83       	std	Y+1, r19	; 0x01
    1c04:	28 83       	st	Y, r18
    1c06:	10 83       	st	Z, r17
    1c08:	06 c0       	rjmp	.+12     	; 0x1c16 <fputc+0x4a>
    1c0a:	e8 85       	ldd	r30, Y+8	; 0x08
    1c0c:	f9 85       	ldd	r31, Y+9	; 0x09
    1c0e:	81 2f       	mov	r24, r17
    1c10:	19 95       	eicall
    1c12:	89 2b       	or	r24, r25
    1c14:	29 f7       	brne	.-54     	; 0x1be0 <fputc+0x14>
    1c16:	2e 81       	ldd	r18, Y+6	; 0x06
    1c18:	3f 81       	ldd	r19, Y+7	; 0x07
    1c1a:	2f 5f       	subi	r18, 0xFF	; 255
    1c1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c1e:	3f 83       	std	Y+7, r19	; 0x07
    1c20:	2e 83       	std	Y+6, r18	; 0x06
    1c22:	81 2f       	mov	r24, r17
    1c24:	90 2f       	mov	r25, r16
    1c26:	df 91       	pop	r29
    1c28:	cf 91       	pop	r28
    1c2a:	1f 91       	pop	r17
    1c2c:	0f 91       	pop	r16
    1c2e:	08 95       	ret

00001c30 <printf>:
    1c30:	cf 93       	push	r28
    1c32:	df 93       	push	r29
    1c34:	cd b7       	in	r28, 0x3d	; 61
    1c36:	de b7       	in	r29, 0x3e	; 62
    1c38:	fe 01       	movw	r30, r28
    1c3a:	36 96       	adiw	r30, 0x06	; 6
    1c3c:	61 91       	ld	r22, Z+
    1c3e:	71 91       	ld	r23, Z+
    1c40:	af 01       	movw	r20, r30
    1c42:	80 91 c0 02 	lds	r24, 0x02C0
    1c46:	90 91 c1 02 	lds	r25, 0x02C1
    1c4a:	ec da       	rcall	.-2600   	; 0x1224 <vfprintf>
    1c4c:	df 91       	pop	r29
    1c4e:	cf 91       	pop	r28
    1c50:	08 95       	ret

00001c52 <puts>:
    1c52:	0f 93       	push	r16
    1c54:	1f 93       	push	r17
    1c56:	cf 93       	push	r28
    1c58:	df 93       	push	r29
    1c5a:	e0 91 c0 02 	lds	r30, 0x02C0
    1c5e:	f0 91 c1 02 	lds	r31, 0x02C1
    1c62:	23 81       	ldd	r18, Z+3	; 0x03
    1c64:	21 ff       	sbrs	r18, 1
    1c66:	1b c0       	rjmp	.+54     	; 0x1c9e <puts+0x4c>
    1c68:	ec 01       	movw	r28, r24
    1c6a:	00 e0       	ldi	r16, 0x00	; 0
    1c6c:	10 e0       	ldi	r17, 0x00	; 0
    1c6e:	89 91       	ld	r24, Y+
    1c70:	60 91 c0 02 	lds	r22, 0x02C0
    1c74:	70 91 c1 02 	lds	r23, 0x02C1
    1c78:	db 01       	movw	r26, r22
    1c7a:	18 96       	adiw	r26, 0x08	; 8
    1c7c:	ed 91       	ld	r30, X+
    1c7e:	fc 91       	ld	r31, X
    1c80:	19 97       	sbiw	r26, 0x09	; 9
    1c82:	88 23       	and	r24, r24
    1c84:	31 f0       	breq	.+12     	; 0x1c92 <puts+0x40>
    1c86:	19 95       	eicall
    1c88:	89 2b       	or	r24, r25
    1c8a:	89 f3       	breq	.-30     	; 0x1c6e <puts+0x1c>
    1c8c:	0f ef       	ldi	r16, 0xFF	; 255
    1c8e:	1f ef       	ldi	r17, 0xFF	; 255
    1c90:	ee cf       	rjmp	.-36     	; 0x1c6e <puts+0x1c>
    1c92:	8a e0       	ldi	r24, 0x0A	; 10
    1c94:	19 95       	eicall
    1c96:	89 2b       	or	r24, r25
    1c98:	11 f4       	brne	.+4      	; 0x1c9e <puts+0x4c>
    1c9a:	c8 01       	movw	r24, r16
    1c9c:	02 c0       	rjmp	.+4      	; 0x1ca2 <puts+0x50>
    1c9e:	8f ef       	ldi	r24, 0xFF	; 255
    1ca0:	9f ef       	ldi	r25, 0xFF	; 255
    1ca2:	df 91       	pop	r29
    1ca4:	cf 91       	pop	r28
    1ca6:	1f 91       	pop	r17
    1ca8:	0f 91       	pop	r16
    1caa:	08 95       	ret

00001cac <__ultoa_invert>:
    1cac:	fa 01       	movw	r30, r20
    1cae:	aa 27       	eor	r26, r26
    1cb0:	28 30       	cpi	r18, 0x08	; 8
    1cb2:	51 f1       	breq	.+84     	; 0x1d08 <__ultoa_invert+0x5c>
    1cb4:	20 31       	cpi	r18, 0x10	; 16
    1cb6:	81 f1       	breq	.+96     	; 0x1d18 <__ultoa_invert+0x6c>
    1cb8:	e8 94       	clt
    1cba:	6f 93       	push	r22
    1cbc:	6e 7f       	andi	r22, 0xFE	; 254
    1cbe:	6e 5f       	subi	r22, 0xFE	; 254
    1cc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1cc2:	8f 4f       	sbci	r24, 0xFF	; 255
    1cc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc6:	af 4f       	sbci	r26, 0xFF	; 255
    1cc8:	b1 e0       	ldi	r27, 0x01	; 1
    1cca:	3e d0       	rcall	.+124    	; 0x1d48 <__ultoa_invert+0x9c>
    1ccc:	b4 e0       	ldi	r27, 0x04	; 4
    1cce:	3c d0       	rcall	.+120    	; 0x1d48 <__ultoa_invert+0x9c>
    1cd0:	67 0f       	add	r22, r23
    1cd2:	78 1f       	adc	r23, r24
    1cd4:	89 1f       	adc	r24, r25
    1cd6:	9a 1f       	adc	r25, r26
    1cd8:	a1 1d       	adc	r26, r1
    1cda:	68 0f       	add	r22, r24
    1cdc:	79 1f       	adc	r23, r25
    1cde:	8a 1f       	adc	r24, r26
    1ce0:	91 1d       	adc	r25, r1
    1ce2:	a1 1d       	adc	r26, r1
    1ce4:	6a 0f       	add	r22, r26
    1ce6:	71 1d       	adc	r23, r1
    1ce8:	81 1d       	adc	r24, r1
    1cea:	91 1d       	adc	r25, r1
    1cec:	a1 1d       	adc	r26, r1
    1cee:	20 d0       	rcall	.+64     	; 0x1d30 <__ultoa_invert+0x84>
    1cf0:	09 f4       	brne	.+2      	; 0x1cf4 <__ultoa_invert+0x48>
    1cf2:	68 94       	set
    1cf4:	3f 91       	pop	r19
    1cf6:	2a e0       	ldi	r18, 0x0A	; 10
    1cf8:	26 9f       	mul	r18, r22
    1cfa:	11 24       	eor	r1, r1
    1cfc:	30 19       	sub	r19, r0
    1cfe:	30 5d       	subi	r19, 0xD0	; 208
    1d00:	31 93       	st	Z+, r19
    1d02:	de f6       	brtc	.-74     	; 0x1cba <__ultoa_invert+0xe>
    1d04:	cf 01       	movw	r24, r30
    1d06:	08 95       	ret
    1d08:	46 2f       	mov	r20, r22
    1d0a:	47 70       	andi	r20, 0x07	; 7
    1d0c:	40 5d       	subi	r20, 0xD0	; 208
    1d0e:	41 93       	st	Z+, r20
    1d10:	b3 e0       	ldi	r27, 0x03	; 3
    1d12:	0f d0       	rcall	.+30     	; 0x1d32 <__ultoa_invert+0x86>
    1d14:	c9 f7       	brne	.-14     	; 0x1d08 <__ultoa_invert+0x5c>
    1d16:	f6 cf       	rjmp	.-20     	; 0x1d04 <__ultoa_invert+0x58>
    1d18:	46 2f       	mov	r20, r22
    1d1a:	4f 70       	andi	r20, 0x0F	; 15
    1d1c:	40 5d       	subi	r20, 0xD0	; 208
    1d1e:	4a 33       	cpi	r20, 0x3A	; 58
    1d20:	18 f0       	brcs	.+6      	; 0x1d28 <__ultoa_invert+0x7c>
    1d22:	49 5d       	subi	r20, 0xD9	; 217
    1d24:	31 fd       	sbrc	r19, 1
    1d26:	40 52       	subi	r20, 0x20	; 32
    1d28:	41 93       	st	Z+, r20
    1d2a:	02 d0       	rcall	.+4      	; 0x1d30 <__ultoa_invert+0x84>
    1d2c:	a9 f7       	brne	.-22     	; 0x1d18 <__ultoa_invert+0x6c>
    1d2e:	ea cf       	rjmp	.-44     	; 0x1d04 <__ultoa_invert+0x58>
    1d30:	b4 e0       	ldi	r27, 0x04	; 4
    1d32:	a6 95       	lsr	r26
    1d34:	97 95       	ror	r25
    1d36:	87 95       	ror	r24
    1d38:	77 95       	ror	r23
    1d3a:	67 95       	ror	r22
    1d3c:	ba 95       	dec	r27
    1d3e:	c9 f7       	brne	.-14     	; 0x1d32 <__ultoa_invert+0x86>
    1d40:	00 97       	sbiw	r24, 0x00	; 0
    1d42:	61 05       	cpc	r22, r1
    1d44:	71 05       	cpc	r23, r1
    1d46:	08 95       	ret
    1d48:	9b 01       	movw	r18, r22
    1d4a:	ac 01       	movw	r20, r24
    1d4c:	0a 2e       	mov	r0, r26
    1d4e:	06 94       	lsr	r0
    1d50:	57 95       	ror	r21
    1d52:	47 95       	ror	r20
    1d54:	37 95       	ror	r19
    1d56:	27 95       	ror	r18
    1d58:	ba 95       	dec	r27
    1d5a:	c9 f7       	brne	.-14     	; 0x1d4e <__ultoa_invert+0xa2>
    1d5c:	62 0f       	add	r22, r18
    1d5e:	73 1f       	adc	r23, r19
    1d60:	84 1f       	adc	r24, r20
    1d62:	95 1f       	adc	r25, r21
    1d64:	a0 1d       	adc	r26, r0
    1d66:	08 95       	ret

00001d68 <calloc>:
    1d68:	0f 93       	push	r16
    1d6a:	1f 93       	push	r17
    1d6c:	cf 93       	push	r28
    1d6e:	df 93       	push	r29
    1d70:	86 9f       	mul	r24, r22
    1d72:	80 01       	movw	r16, r0
    1d74:	87 9f       	mul	r24, r23
    1d76:	10 0d       	add	r17, r0
    1d78:	96 9f       	mul	r25, r22
    1d7a:	10 0d       	add	r17, r0
    1d7c:	11 24       	eor	r1, r1
    1d7e:	c8 01       	movw	r24, r16
    1d80:	0d d0       	rcall	.+26     	; 0x1d9c <malloc>
    1d82:	ec 01       	movw	r28, r24
    1d84:	00 97       	sbiw	r24, 0x00	; 0
    1d86:	21 f0       	breq	.+8      	; 0x1d90 <calloc+0x28>
    1d88:	a8 01       	movw	r20, r16
    1d8a:	60 e0       	ldi	r22, 0x00	; 0
    1d8c:	70 e0       	ldi	r23, 0x00	; 0
    1d8e:	2d d1       	rcall	.+602    	; 0x1fea <memset>
    1d90:	ce 01       	movw	r24, r28
    1d92:	df 91       	pop	r29
    1d94:	cf 91       	pop	r28
    1d96:	1f 91       	pop	r17
    1d98:	0f 91       	pop	r16
    1d9a:	08 95       	ret

00001d9c <malloc>:
    1d9c:	cf 93       	push	r28
    1d9e:	df 93       	push	r29
    1da0:	82 30       	cpi	r24, 0x02	; 2
    1da2:	91 05       	cpc	r25, r1
    1da4:	10 f4       	brcc	.+4      	; 0x1daa <malloc+0xe>
    1da6:	82 e0       	ldi	r24, 0x02	; 2
    1da8:	90 e0       	ldi	r25, 0x00	; 0
    1daa:	e0 91 c6 02 	lds	r30, 0x02C6
    1dae:	f0 91 c7 02 	lds	r31, 0x02C7
    1db2:	20 e0       	ldi	r18, 0x00	; 0
    1db4:	30 e0       	ldi	r19, 0x00	; 0
    1db6:	a0 e0       	ldi	r26, 0x00	; 0
    1db8:	b0 e0       	ldi	r27, 0x00	; 0
    1dba:	30 97       	sbiw	r30, 0x00	; 0
    1dbc:	39 f1       	breq	.+78     	; 0x1e0c <malloc+0x70>
    1dbe:	40 81       	ld	r20, Z
    1dc0:	51 81       	ldd	r21, Z+1	; 0x01
    1dc2:	48 17       	cp	r20, r24
    1dc4:	59 07       	cpc	r21, r25
    1dc6:	b8 f0       	brcs	.+46     	; 0x1df6 <malloc+0x5a>
    1dc8:	48 17       	cp	r20, r24
    1dca:	59 07       	cpc	r21, r25
    1dcc:	71 f4       	brne	.+28     	; 0x1dea <malloc+0x4e>
    1dce:	82 81       	ldd	r24, Z+2	; 0x02
    1dd0:	93 81       	ldd	r25, Z+3	; 0x03
    1dd2:	10 97       	sbiw	r26, 0x00	; 0
    1dd4:	29 f0       	breq	.+10     	; 0x1de0 <malloc+0x44>
    1dd6:	13 96       	adiw	r26, 0x03	; 3
    1dd8:	9c 93       	st	X, r25
    1dda:	8e 93       	st	-X, r24
    1ddc:	12 97       	sbiw	r26, 0x02	; 2
    1dde:	2c c0       	rjmp	.+88     	; 0x1e38 <malloc+0x9c>
    1de0:	90 93 c7 02 	sts	0x02C7, r25
    1de4:	80 93 c6 02 	sts	0x02C6, r24
    1de8:	27 c0       	rjmp	.+78     	; 0x1e38 <malloc+0x9c>
    1dea:	21 15       	cp	r18, r1
    1dec:	31 05       	cpc	r19, r1
    1dee:	31 f0       	breq	.+12     	; 0x1dfc <malloc+0x60>
    1df0:	42 17       	cp	r20, r18
    1df2:	53 07       	cpc	r21, r19
    1df4:	18 f0       	brcs	.+6      	; 0x1dfc <malloc+0x60>
    1df6:	a9 01       	movw	r20, r18
    1df8:	db 01       	movw	r26, r22
    1dfa:	01 c0       	rjmp	.+2      	; 0x1dfe <malloc+0x62>
    1dfc:	ef 01       	movw	r28, r30
    1dfe:	9a 01       	movw	r18, r20
    1e00:	bd 01       	movw	r22, r26
    1e02:	df 01       	movw	r26, r30
    1e04:	02 80       	ldd	r0, Z+2	; 0x02
    1e06:	f3 81       	ldd	r31, Z+3	; 0x03
    1e08:	e0 2d       	mov	r30, r0
    1e0a:	d7 cf       	rjmp	.-82     	; 0x1dba <malloc+0x1e>
    1e0c:	21 15       	cp	r18, r1
    1e0e:	31 05       	cpc	r19, r1
    1e10:	f9 f0       	breq	.+62     	; 0x1e50 <malloc+0xb4>
    1e12:	28 1b       	sub	r18, r24
    1e14:	39 0b       	sbc	r19, r25
    1e16:	24 30       	cpi	r18, 0x04	; 4
    1e18:	31 05       	cpc	r19, r1
    1e1a:	80 f4       	brcc	.+32     	; 0x1e3c <malloc+0xa0>
    1e1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e1e:	9b 81       	ldd	r25, Y+3	; 0x03
    1e20:	61 15       	cp	r22, r1
    1e22:	71 05       	cpc	r23, r1
    1e24:	21 f0       	breq	.+8      	; 0x1e2e <malloc+0x92>
    1e26:	fb 01       	movw	r30, r22
    1e28:	93 83       	std	Z+3, r25	; 0x03
    1e2a:	82 83       	std	Z+2, r24	; 0x02
    1e2c:	04 c0       	rjmp	.+8      	; 0x1e36 <malloc+0x9a>
    1e2e:	90 93 c7 02 	sts	0x02C7, r25
    1e32:	80 93 c6 02 	sts	0x02C6, r24
    1e36:	fe 01       	movw	r30, r28
    1e38:	32 96       	adiw	r30, 0x02	; 2
    1e3a:	44 c0       	rjmp	.+136    	; 0x1ec4 <malloc+0x128>
    1e3c:	fe 01       	movw	r30, r28
    1e3e:	e2 0f       	add	r30, r18
    1e40:	f3 1f       	adc	r31, r19
    1e42:	81 93       	st	Z+, r24
    1e44:	91 93       	st	Z+, r25
    1e46:	22 50       	subi	r18, 0x02	; 2
    1e48:	31 09       	sbc	r19, r1
    1e4a:	39 83       	std	Y+1, r19	; 0x01
    1e4c:	28 83       	st	Y, r18
    1e4e:	3a c0       	rjmp	.+116    	; 0x1ec4 <malloc+0x128>
    1e50:	20 91 c4 02 	lds	r18, 0x02C4
    1e54:	30 91 c5 02 	lds	r19, 0x02C5
    1e58:	23 2b       	or	r18, r19
    1e5a:	41 f4       	brne	.+16     	; 0x1e6c <malloc+0xd0>
    1e5c:	20 91 02 02 	lds	r18, 0x0202
    1e60:	30 91 03 02 	lds	r19, 0x0203
    1e64:	30 93 c5 02 	sts	0x02C5, r19
    1e68:	20 93 c4 02 	sts	0x02C4, r18
    1e6c:	20 91 00 02 	lds	r18, 0x0200
    1e70:	30 91 01 02 	lds	r19, 0x0201
    1e74:	21 15       	cp	r18, r1
    1e76:	31 05       	cpc	r19, r1
    1e78:	41 f4       	brne	.+16     	; 0x1e8a <malloc+0xee>
    1e7a:	2d b7       	in	r18, 0x3d	; 61
    1e7c:	3e b7       	in	r19, 0x3e	; 62
    1e7e:	40 91 04 02 	lds	r20, 0x0204
    1e82:	50 91 05 02 	lds	r21, 0x0205
    1e86:	24 1b       	sub	r18, r20
    1e88:	35 0b       	sbc	r19, r21
    1e8a:	e0 91 c4 02 	lds	r30, 0x02C4
    1e8e:	f0 91 c5 02 	lds	r31, 0x02C5
    1e92:	e2 17       	cp	r30, r18
    1e94:	f3 07       	cpc	r31, r19
    1e96:	a0 f4       	brcc	.+40     	; 0x1ec0 <malloc+0x124>
    1e98:	2e 1b       	sub	r18, r30
    1e9a:	3f 0b       	sbc	r19, r31
    1e9c:	28 17       	cp	r18, r24
    1e9e:	39 07       	cpc	r19, r25
    1ea0:	78 f0       	brcs	.+30     	; 0x1ec0 <malloc+0x124>
    1ea2:	ac 01       	movw	r20, r24
    1ea4:	4e 5f       	subi	r20, 0xFE	; 254
    1ea6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ea8:	24 17       	cp	r18, r20
    1eaa:	35 07       	cpc	r19, r21
    1eac:	48 f0       	brcs	.+18     	; 0x1ec0 <malloc+0x124>
    1eae:	4e 0f       	add	r20, r30
    1eb0:	5f 1f       	adc	r21, r31
    1eb2:	50 93 c5 02 	sts	0x02C5, r21
    1eb6:	40 93 c4 02 	sts	0x02C4, r20
    1eba:	81 93       	st	Z+, r24
    1ebc:	91 93       	st	Z+, r25
    1ebe:	02 c0       	rjmp	.+4      	; 0x1ec4 <malloc+0x128>
    1ec0:	e0 e0       	ldi	r30, 0x00	; 0
    1ec2:	f0 e0       	ldi	r31, 0x00	; 0
    1ec4:	cf 01       	movw	r24, r30
    1ec6:	df 91       	pop	r29
    1ec8:	cf 91       	pop	r28
    1eca:	08 95       	ret

00001ecc <free>:
    1ecc:	cf 93       	push	r28
    1ece:	df 93       	push	r29
    1ed0:	00 97       	sbiw	r24, 0x00	; 0
    1ed2:	09 f4       	brne	.+2      	; 0x1ed6 <free+0xa>
    1ed4:	87 c0       	rjmp	.+270    	; 0x1fe4 <free+0x118>
    1ed6:	fc 01       	movw	r30, r24
    1ed8:	32 97       	sbiw	r30, 0x02	; 2
    1eda:	13 82       	std	Z+3, r1	; 0x03
    1edc:	12 82       	std	Z+2, r1	; 0x02
    1ede:	c0 91 c6 02 	lds	r28, 0x02C6
    1ee2:	d0 91 c7 02 	lds	r29, 0x02C7
    1ee6:	20 97       	sbiw	r28, 0x00	; 0
    1ee8:	81 f4       	brne	.+32     	; 0x1f0a <free+0x3e>
    1eea:	20 81       	ld	r18, Z
    1eec:	31 81       	ldd	r19, Z+1	; 0x01
    1eee:	28 0f       	add	r18, r24
    1ef0:	39 1f       	adc	r19, r25
    1ef2:	80 91 c4 02 	lds	r24, 0x02C4
    1ef6:	90 91 c5 02 	lds	r25, 0x02C5
    1efa:	82 17       	cp	r24, r18
    1efc:	93 07       	cpc	r25, r19
    1efe:	79 f5       	brne	.+94     	; 0x1f5e <free+0x92>
    1f00:	f0 93 c5 02 	sts	0x02C5, r31
    1f04:	e0 93 c4 02 	sts	0x02C4, r30
    1f08:	6d c0       	rjmp	.+218    	; 0x1fe4 <free+0x118>
    1f0a:	de 01       	movw	r26, r28
    1f0c:	20 e0       	ldi	r18, 0x00	; 0
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	ae 17       	cp	r26, r30
    1f12:	bf 07       	cpc	r27, r31
    1f14:	50 f4       	brcc	.+20     	; 0x1f2a <free+0x5e>
    1f16:	12 96       	adiw	r26, 0x02	; 2
    1f18:	4d 91       	ld	r20, X+
    1f1a:	5c 91       	ld	r21, X
    1f1c:	13 97       	sbiw	r26, 0x03	; 3
    1f1e:	9d 01       	movw	r18, r26
    1f20:	41 15       	cp	r20, r1
    1f22:	51 05       	cpc	r21, r1
    1f24:	09 f1       	breq	.+66     	; 0x1f68 <free+0x9c>
    1f26:	da 01       	movw	r26, r20
    1f28:	f3 cf       	rjmp	.-26     	; 0x1f10 <free+0x44>
    1f2a:	b3 83       	std	Z+3, r27	; 0x03
    1f2c:	a2 83       	std	Z+2, r26	; 0x02
    1f2e:	40 81       	ld	r20, Z
    1f30:	51 81       	ldd	r21, Z+1	; 0x01
    1f32:	84 0f       	add	r24, r20
    1f34:	95 1f       	adc	r25, r21
    1f36:	8a 17       	cp	r24, r26
    1f38:	9b 07       	cpc	r25, r27
    1f3a:	71 f4       	brne	.+28     	; 0x1f58 <free+0x8c>
    1f3c:	8d 91       	ld	r24, X+
    1f3e:	9c 91       	ld	r25, X
    1f40:	11 97       	sbiw	r26, 0x01	; 1
    1f42:	84 0f       	add	r24, r20
    1f44:	95 1f       	adc	r25, r21
    1f46:	02 96       	adiw	r24, 0x02	; 2
    1f48:	91 83       	std	Z+1, r25	; 0x01
    1f4a:	80 83       	st	Z, r24
    1f4c:	12 96       	adiw	r26, 0x02	; 2
    1f4e:	8d 91       	ld	r24, X+
    1f50:	9c 91       	ld	r25, X
    1f52:	13 97       	sbiw	r26, 0x03	; 3
    1f54:	93 83       	std	Z+3, r25	; 0x03
    1f56:	82 83       	std	Z+2, r24	; 0x02
    1f58:	21 15       	cp	r18, r1
    1f5a:	31 05       	cpc	r19, r1
    1f5c:	29 f4       	brne	.+10     	; 0x1f68 <free+0x9c>
    1f5e:	f0 93 c7 02 	sts	0x02C7, r31
    1f62:	e0 93 c6 02 	sts	0x02C6, r30
    1f66:	3e c0       	rjmp	.+124    	; 0x1fe4 <free+0x118>
    1f68:	d9 01       	movw	r26, r18
    1f6a:	13 96       	adiw	r26, 0x03	; 3
    1f6c:	fc 93       	st	X, r31
    1f6e:	ee 93       	st	-X, r30
    1f70:	12 97       	sbiw	r26, 0x02	; 2
    1f72:	4d 91       	ld	r20, X+
    1f74:	5d 91       	ld	r21, X+
    1f76:	a4 0f       	add	r26, r20
    1f78:	b5 1f       	adc	r27, r21
    1f7a:	ea 17       	cp	r30, r26
    1f7c:	fb 07       	cpc	r31, r27
    1f7e:	79 f4       	brne	.+30     	; 0x1f9e <free+0xd2>
    1f80:	80 81       	ld	r24, Z
    1f82:	91 81       	ldd	r25, Z+1	; 0x01
    1f84:	84 0f       	add	r24, r20
    1f86:	95 1f       	adc	r25, r21
    1f88:	02 96       	adiw	r24, 0x02	; 2
    1f8a:	d9 01       	movw	r26, r18
    1f8c:	11 96       	adiw	r26, 0x01	; 1
    1f8e:	9c 93       	st	X, r25
    1f90:	8e 93       	st	-X, r24
    1f92:	82 81       	ldd	r24, Z+2	; 0x02
    1f94:	93 81       	ldd	r25, Z+3	; 0x03
    1f96:	13 96       	adiw	r26, 0x03	; 3
    1f98:	9c 93       	st	X, r25
    1f9a:	8e 93       	st	-X, r24
    1f9c:	12 97       	sbiw	r26, 0x02	; 2
    1f9e:	e0 e0       	ldi	r30, 0x00	; 0
    1fa0:	f0 e0       	ldi	r31, 0x00	; 0
    1fa2:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa4:	9b 81       	ldd	r25, Y+3	; 0x03
    1fa6:	00 97       	sbiw	r24, 0x00	; 0
    1fa8:	19 f0       	breq	.+6      	; 0x1fb0 <free+0xe4>
    1faa:	fe 01       	movw	r30, r28
    1fac:	ec 01       	movw	r28, r24
    1fae:	f9 cf       	rjmp	.-14     	; 0x1fa2 <free+0xd6>
    1fb0:	ce 01       	movw	r24, r28
    1fb2:	02 96       	adiw	r24, 0x02	; 2
    1fb4:	28 81       	ld	r18, Y
    1fb6:	39 81       	ldd	r19, Y+1	; 0x01
    1fb8:	82 0f       	add	r24, r18
    1fba:	93 1f       	adc	r25, r19
    1fbc:	20 91 c4 02 	lds	r18, 0x02C4
    1fc0:	30 91 c5 02 	lds	r19, 0x02C5
    1fc4:	28 17       	cp	r18, r24
    1fc6:	39 07       	cpc	r19, r25
    1fc8:	69 f4       	brne	.+26     	; 0x1fe4 <free+0x118>
    1fca:	30 97       	sbiw	r30, 0x00	; 0
    1fcc:	29 f4       	brne	.+10     	; 0x1fd8 <free+0x10c>
    1fce:	10 92 c7 02 	sts	0x02C7, r1
    1fd2:	10 92 c6 02 	sts	0x02C6, r1
    1fd6:	02 c0       	rjmp	.+4      	; 0x1fdc <free+0x110>
    1fd8:	13 82       	std	Z+3, r1	; 0x03
    1fda:	12 82       	std	Z+2, r1	; 0x02
    1fdc:	d0 93 c5 02 	sts	0x02C5, r29
    1fe0:	c0 93 c4 02 	sts	0x02C4, r28
    1fe4:	df 91       	pop	r29
    1fe6:	cf 91       	pop	r28
    1fe8:	08 95       	ret

00001fea <memset>:
    1fea:	dc 01       	movw	r26, r24
    1fec:	01 c0       	rjmp	.+2      	; 0x1ff0 <memset+0x6>
    1fee:	6d 93       	st	X+, r22
    1ff0:	41 50       	subi	r20, 0x01	; 1
    1ff2:	50 40       	sbci	r21, 0x00	; 0
    1ff4:	e0 f7       	brcc	.-8      	; 0x1fee <memset+0x4>
    1ff6:	08 95       	ret

00001ff8 <_exit>:
    1ff8:	f8 94       	cli

00001ffa <__stop_program>:
    1ffa:	ff cf       	rjmp	.-2      	; 0x1ffa <__stop_program>
